/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../node_modules/@babel/polyfill/lib/index.js":
/*!****************************************************!*\
  !*** ../node_modules/@babel/polyfill/lib/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


__webpack_require__(/*! ./noConflict */ "../node_modules/@babel/polyfill/lib/noConflict.js");

var _global = _interopRequireDefault(__webpack_require__(/*! core-js/library/fn/global */ "../node_modules/core-js/library/fn/global.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

if (_global["default"]._babelPolyfill && typeof console !== "undefined" && console.warn) {
  console.warn("@babel/polyfill is loaded more than once on this page. This is probably not desirable/intended " + "and may have consequences if different versions of the polyfills are applied sequentially. " + "If you do need to load the polyfill more than once, use @babel/polyfill/noConflict " + "instead to bypass the warning.");
}

_global["default"]._babelPolyfill = true;

/***/ }),

/***/ "../node_modules/@babel/polyfill/lib/noConflict.js":
/*!*********************************************************!*\
  !*** ../node_modules/@babel/polyfill/lib/noConflict.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


__webpack_require__(/*! core-js/es6 */ "../node_modules/core-js/es6/index.js");

__webpack_require__(/*! core-js/fn/array/includes */ "../node_modules/core-js/fn/array/includes.js");

__webpack_require__(/*! core-js/fn/array/flat-map */ "../node_modules/core-js/fn/array/flat-map.js");

__webpack_require__(/*! core-js/fn/string/pad-start */ "../node_modules/core-js/fn/string/pad-start.js");

__webpack_require__(/*! core-js/fn/string/pad-end */ "../node_modules/core-js/fn/string/pad-end.js");

__webpack_require__(/*! core-js/fn/string/trim-start */ "../node_modules/core-js/fn/string/trim-start.js");

__webpack_require__(/*! core-js/fn/string/trim-end */ "../node_modules/core-js/fn/string/trim-end.js");

__webpack_require__(/*! core-js/fn/symbol/async-iterator */ "../node_modules/core-js/fn/symbol/async-iterator.js");

__webpack_require__(/*! core-js/fn/object/get-own-property-descriptors */ "../node_modules/core-js/fn/object/get-own-property-descriptors.js");

__webpack_require__(/*! core-js/fn/object/values */ "../node_modules/core-js/fn/object/values.js");

__webpack_require__(/*! core-js/fn/object/entries */ "../node_modules/core-js/fn/object/entries.js");

__webpack_require__(/*! core-js/fn/promise/finally */ "../node_modules/core-js/fn/promise/finally.js");

__webpack_require__(/*! core-js/web */ "../node_modules/core-js/web/index.js");

__webpack_require__(/*! regenerator-runtime/runtime */ "../node_modules/regenerator-runtime/runtime.js");

/***/ }),

/***/ "./js/animateObject.js":
/*!*****************************!*\
  !*** ./js/animateObject.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnimateObject": () => (/* binding */ AnimateObject)
/* harmony export */ });
/* harmony import */ var _js_vector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/js/vector */ "./js/vector.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }


var AnimateObject = /*#__PURE__*/function () {
  function AnimateObject(imageName, x, y) {
    var scale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;
    var deg = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
    var context = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    var images = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : {};
    var direction = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 'left';
    var endX = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : x;
    var endY = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : y;

    _classCallCheck(this, AnimateObject);

    this.scale = scale;
    this.deg = deg;
    this.isChangeScale1 = false;
    this.isChangeDeg1 = false;
    this.velocity = new _js_vector__WEBPACK_IMPORTED_MODULE_0__.Vector(direction, 10);
    this.vector1 = {
      x: x,
      y: y
    }, this.endX = endX, this.endY = endY, this.isChangeVectorX1 = false;
    this.isChangeVectorY1 = false;
    this.imageName1 = imageName;
    this.images = images;
    this.context = context;
    this.isLevitation = false;
    this.isRotation = false;
    this.isScale = false;
  }

  _createClass(AnimateObject, [{
    key: "drawImageRotated",
    value: function drawImageRotated(x, y, start, end, step, rot) {
      var isRotate = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : true;
      var scale = this.changeScale(start, end, step);
      this.context.clearRect(0, 0, this.context.width, this.context.height);
      this.context.setTransform(scale, 0, 0, scale, x, y);

      if (isRotate) {
        this.context.rotate(rot);
      }

      this.context.drawImage(this.images[this.imageName1], -this.images[this.imageName1].width / 2, -this.images[this.imageName1].height / 2);
      this.context.setTransform(1, 0, 0, 1, 0, 0);
    }
  }, {
    key: "drawImageScale",
    value: function drawImageScale(x, y, scale) {
      var width = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.images[this.imageName1].width;
      var height = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.images[this.imageName1].height;
      this.isScale = true;
      this.context.clearRect(0, 0, this.context.width, this.context.height);
      this.context.setTransform(scale, 0, 0, scale, x, y);
      this.context.drawImage(this.images[this.imageName1], -this.images[this.imageName1].width / 2, -this.images[this.imageName1].height / 2, width, height);
      this.context.setTransform(1, 0, 0, 1, 0, 0);
    }
  }, {
    key: "drawImageSpriteRotated",
    value: function drawImageSpriteRotated(x, y, start, end, step, sx, sy) {
      var sWidth = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 80;
      var sHeight = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : 80;
      var dWidth = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : 80;
      var dHeight = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : 80;
      this.isRotation = true;
      var rot = this.changeDeg(start, end, step);
      this.context.clearRect(0, 0, this.context.width, this.context.height);
      this.context.setTransform(1, 0, 0, 1, x, y);
      this.context.rotate(rot);
      this.context.drawImage(this.images[this.imageName1], sx, sy, sWidth, sHeight, 0, 0, dWidth, dHeight);
      this.context.setTransform(1, 0, 0, 1, 0, 0);
    }
  }, {
    key: "levitation",
    value: function levitation(x, y) {
      var scale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
      var end = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 40;
      var step = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0.3;
      var sx = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;
      var sy = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;
      var sWidth = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : this.images[this.imageName1].width;
      var sHeight = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : this.images[this.imageName1].height;
      var dWidth = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : this.images[this.imageName1].width;
      var dHeight = arguments.length > 10 && arguments[10] !== undefined ? arguments[10] : this.images[this.imageName1].height;
      this.isLevitation = true;
      this.context.clearRect(0, 0, this.context.width, this.context.height);
      this.context.setTransform(scale, 0, 0, scale, this.changeVectorX(x, x - end, step), this.changeVectorY(y, y - end - 10, step));
      this.context.drawImage(this.images[this.imageName1], sx, sy, sWidth, sHeight, 0, 0, dWidth, dHeight);
      this.context.setTransform(1, 0, 0, 1, 0, 0);
    } // TODO
    //  объединить в одну все 4 функции

  }, {
    key: "changeVectorX",
    value: function changeVectorX(start, end, step) {
      if (Math.round(this.vector1.x) === Math.round(start)) {
        this.isChangeVectorX1 = false;
      }

      if (Math.round(this.vector1.x) === Math.round(end)) {
        this.isChangeVectorX1 = true;
      }

      if (Math.round(this.vector1.x) <= Math.round(start) && !this.isChangeVectorX1) {
        this.vector1.x -= Math.sin(step);
      }

      if (Math.round(this.vector1.x) >= Math.round(end) && this.isChangeVectorX1) {
        this.vector1.x += Math.sin(step);
      }

      return this.vector1.x;
    }
  }, {
    key: "changeVectorY",
    value: function changeVectorY(start, end, step) {
      if (Math.round(this.vector1.y) === Math.round(start)) {
        this.isChangeVectorY1 = false;
      }

      if (Math.round(this.vector1.y) === Math.round(end)) {
        this.isChangeVectorY1 = true;
      }

      if (Math.round(this.vector1.y) <= Math.round(start) && !this.isChangeVectorY1) {
        this.vector1.y -= step;
      }

      if (Math.round(this.vector1.y) >= Math.round(end) && this.isChangeVectorY1) {
        this.vector1.y += step;
      }

      return this.vector1.y;
    }
  }, {
    key: "changeScale",
    value: function changeScale(start, end, step) {
      if (this.scale.toFixed(3) === start) {
        this.isChangeScale1 = false;
      }

      if (this.scale.toFixed(3) === end) {
        this.isChangeScale1 = true;
      }

      if (this.scale.toFixed(3) <= start && !this.isChangeScale1) {
        this.scale -= step;
      }

      if (this.scale.toFixed(3) >= end && this.isChangeScale1) {
        this.scale += step;
      }

      return this.scale;
    }
  }, {
    key: "changeDeg",
    value: function changeDeg(start, end, step) {
      if (Math.round(this.deg) === Math.round(start)) {
        this.isChangeDeg1 = false;
      }

      if (Math.round(this.deg) === Math.round(end)) {
        this.isChangeDeg1 = true;
      }

      if (Math.round(this.deg) <= Math.round(start) && !this.isChangeDeg1) {
        this.deg -= step;
      }

      if (Math.round(this.deg) >= Math.round(end) && this.isChangeDeg1) {
        this.deg += step;
      }

      return this.deg;
    }
  }, {
    key: "run",
    value: function run() {
      this.vector1.x += this.velocity.x;
      this.vector1.y += this.velocity.y;
      this.context.drawImage(this.images[this.imageName1], this.vector1.x, this.vector1.y);
    }
  }, {
    key: "runSprite",
    value: function runSprite(sx, sy) {
      var sWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 80;
      var sHeight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 80;
      var dWidth = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 80;
      var dHeight = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 80;
      this.vector1.x += this.velocity.x;
      this.vector1.y += this.velocity.y;
      this.context.drawImage(this.images[this.imageName1], sx, sy, sWidth, sHeight, this.vector1.x, this.vector1.y, dWidth, dHeight);
    }
  }, {
    key: "update",
    value: function update(time) {}
  }]);

  return AnimateObject;
}();

/***/ }),

/***/ "./js/animation.js":
/*!*************************!*\
  !*** ./js/animation.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Animation": () => (/* binding */ Animation)
/* harmony export */ });
/* harmony import */ var _sprite_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sprite.js */ "./js/sprite.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var Animation = /*#__PURE__*/function (_Sprite) {
  _inherits(Animation, _Sprite);

  var _super = _createSuper(Animation);

  function Animation(_ref) {
    var _this;

    var imageName = _ref.imageName,
        frames = _ref.frames,
        speed = _ref.speed,
        _ref$repeat = _ref.repeat,
        repeat = _ref$repeat === void 0 ? true : _ref$repeat,
        _ref$autorun = _ref.autorun,
        autorun = _ref$autorun === void 0 ? true : _ref$autorun,
        _ref$width = _ref.width,
        width = _ref$width === void 0 ? 64 : _ref$width,
        _ref$height = _ref.height,
        height = _ref$height === void 0 ? 64 : _ref$height;

    _classCallCheck(this, Animation);

    _this = _super.call(this, {
      imageName: imageName,
      sourceX: frames[0].sx,
      sourceY: frames[0].sy,
      width: width,
      height: height
    });
    _this.frames = frames;
    _this.speed = speed;
    _this.repeat = repeat;
    _this.running = autorun;
    _this.lastTime = 0;
    _this.currentFrame = 0;
    _this.totalFrames = _this.frames.length;
    _this.onEnd = null;
    return _this;
  }

  _createClass(Animation, [{
    key: "setFrame",
    value: function setFrame(index) {
      this.currentFrame = index;
      this.sourceX = this.frames[index].sx;
      this.sourceY = this.frames[index].sy;
    }
  }, {
    key: "run",
    value: function run() {
      if (!this.running) {
        this.setFrame(0);
        this.running = true;
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      this.running = false;
    }
  }, {
    key: "nextFrame",
    value: function nextFrame() {
      if (this.currentFrame + 1 === this.totalFrames) {
        if (this.onEnd) {
          this.onEnd();
        }

        if (this.repeat) {
          this.setFrame(0);
          return;
        }

        this.stop();
        return;
      }

      this.setFrame(this.currentFrame + 1);
    }
  }, {
    key: "update",
    value: function update(time) {
      if (!this.running) {
        return;
      }

      if (this.lastTime === 0) {
        this.lastTime = time;
        return;
      }

      if (time - this.lastTime > this.speed) {
        this.nextFrame();
        this.lastTime = time;
      }
    }
  }]);

  return Animation;
}(_sprite_js__WEBPACK_IMPORTED_MODULE_0__.Sprite);

/***/ }),

/***/ "./js/audio-loader.js":
/*!****************************!*\
  !*** ./js/audio-loader.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AudioLoader": () => (/* binding */ AudioLoader)
/* harmony export */ });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var AudioLoader = /*#__PURE__*/function () {
  function AudioLoader(audioFiles) {
    _classCallCheck(this, AudioLoader);

    this.audioFiles = audioFiles;
    this.audios = {};
  }

  _createClass(AudioLoader, [{
    key: "load",
    value: function () {
      var _load = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var name;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.t0 = regeneratorRuntime.keys(this.audioFiles);

              case 1:
                if ((_context.t1 = _context.t0()).done) {
                  _context.next = 8;
                  break;
                }

                name = _context.t1.value;

                if (!this.audioFiles.hasOwnProperty(name)) {
                  _context.next = 6;
                  break;
                }

                _context.next = 6;
                return this.loadAudio(name, this.audioFiles[name]);

              case 6:
                _context.next = 1;
                break;

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function load() {
        return _load.apply(this, arguments);
      }

      return load;
    }()
  }, {
    key: "loadAudio",
    value: function loadAudio(name, src) {
      var audio = new Audio();
      this.audios[name] = audio;
      audio.src = src;
      audio.load();
    }
  }]);

  return AudioLoader;
}();

/***/ }),

/***/ "./js/controls.js":
/*!************************!*\
  !*** ./js/controls.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Controls": () => (/* binding */ Controls)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Controls = /*#__PURE__*/function () {
  function Controls() {
    var _this = this;

    _classCallCheck(this, Controls);

    this.jump = false;
    this.down = false;
    this.keyMap = new Map([[40, 'down'], [32, 'jump'], [13, 'enter']]);
    document.addEventListener('keydown', function (event) {
      return _this.update(event, true);
    });
    document.addEventListener('keyup', function (event) {
      return _this.update(event, false);
    });
  }

  _createClass(Controls, [{
    key: "update",
    value: function update(event, pressed) {
      if (this.keyMap.has(event.keyCode)) {
        event.preventDefault();
        event.stopPropagation();
        this[this.keyMap.get(event.keyCode)] = pressed;
      }
    }
  }]);

  return Controls;
}();

/***/ }),

/***/ "./js/flyElement.js":
/*!**************************!*\
  !*** ./js/flyElement.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FlyElement": () => (/* binding */ FlyElement)
/* harmony export */ });
/* harmony import */ var _vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector.js */ "./js/vector.js");
/* harmony import */ var _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite-sheet.js */ "./js/sprite-sheet.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./js/math.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var FlyElement = /*#__PURE__*/function () {
  function FlyElement(x, y, imageName, imageWidth, imageHeight, spriteWidth, spriteHeight) {
    var isJumping = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;

    _classCallCheck(this, FlyElement);

    this.x = x;
    this.y = y;
    this.startPosX = x;
    this.speed = 350;
    this.velocity = new _vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector('right', 0);
    this.lastTime = 0;
    this.isJumping = isJumping;
    this.tile = new _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__.SpriteSheet({
      imageName: imageName,
      imageWidth: imageWidth,
      imageHeight: imageHeight,
      spriteWidth: spriteWidth,
      spriteHeight: spriteHeight
    }); // по умолчанию персонаж идет вправо

    this.isJumping ? this.jump() : this.walk();
    this.startPosY = y;
    this.isStoped = false;
    this.startFly = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.getRandomInt)(this.startPosX + 300, this.startPosX + 700);
    this.startWaveFly = 0 - this.tile.spriteWidth;
  } // идти


  _createClass(FlyElement, [{
    key: "walk",
    value: function walk() {
      this.velocity.setDirection('left', this.speed);
      this.view = this.tile.getAnimation([1, 2, 3, 4], 150);
      this.view.setXY(Math.trunc(this.x), Math.trunc(this.y));
      this.view.run();
    } // прыгать

  }, {
    key: "jump",
    value: function jump() {
      this.isJumping = true;
      this.velocity.setDirection('up', this.speed);
      this.view = this.tile.getAnimation([1, 2, 3, 4, 5], 500);
      this.view.run();
    }
  }, {
    key: "waveFly",
    value: function waveFly(time) {
      if (this.y > 0 && this.y <= this.startPosY) {
        this.x += (time - this.lastTime) * (this.velocity.x / 1000);
        this.y += (time - this.lastTime) * (this.velocity.y / 1000);
        this.velocity.x += 9;
        this.velocity.y -= 1;
      } else {
        if (this.y >= this.startPosY) {
          this.velocity.setDirection('up', this.speed);
          this.velocity.y -= 1;
        } else {
          this.velocity.setDirection('down', this.speed);
          this.velocity.y += 1;
        }

        this.x += (time - this.lastTime) * (this.velocity.x / 1000);
        this.y += (time - this.lastTime) * (this.velocity.y / 1000);
        this.velocity.x += 10;
      }
    }
  }, {
    key: "fly",
    value: function fly(time) {
      if (this.x > 0 - this.tile.spriteWidth && this.y > 0) {
        this.x += (time - this.lastTime) * (this.velocity.x / 1000);
        this.y += (time - this.lastTime) * (this.velocity.y / 1000);
        this.velocity.y -= 2;
      } else {
        this.x = this.startFly;
        this.y = (0,_math_js__WEBPACK_IMPORTED_MODULE_2__.getRandomInt)(100, 150) + this.x / 4;
        this.velocity.y = 0;
      }
    }
  }, {
    key: "update",
    value: function update(time) {
      // пропускаем первый кадр
      if (this.lastTime === 0) {
        this.lastTime = time;
        return;
      }

      if (this.isJumping) {
        if (this.x >= this.startPosX) {
          this.x = this.startWaveFly;
          this.y = 200;
        }

        this.waveFly(time);
      } else {
        this.fly(time);
      }

      this.lastTime = time;
      this.view.setXY(Math.trunc(this.x), Math.trunc(this.y));
      this.view.update(time);
    }
  }]);

  return FlyElement;
}();

/***/ }),

/***/ "./js/game-desctop.js":
/*!****************************!*\
  !*** ./js/game-desctop.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Game": () => (/* binding */ Game)
/* harmony export */ });
/* harmony import */ var _screen_desctop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./screen-desctop.js */ "./js/screen-desctop.js");
/* harmony import */ var _scenes_loading_desctop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./scenes/loading-desctop.js */ "./js/scenes/loading-desctop.js");
/* harmony import */ var _scenes_game_over_desctop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scenes/game-over-desctop.js */ "./js/scenes/game-over-desctop.js");
/* harmony import */ var _scenes_menu_desctop_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./scenes/menu-desctop.js */ "./js/scenes/menu-desctop.js");
/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./scene.js */ "./js/scene.js");
/* harmony import */ var _controls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./controls.js */ "./js/controls.js");
/* harmony import */ var _scenes_running_desctop_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./scenes/running-desctop.js */ "./js/scenes/running-desctop.js");
/* harmony import */ var _scenes_pre_start_desctop_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./scenes/pre-start-desctop.js */ "./js/scenes/pre-start-desctop.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }









var Game = /*#__PURE__*/function () {
  // ширина и высота по умолчанию 700, aspect-ratio:1/1
  function Game() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$width = _ref.width,
        width = _ref$width === void 0 ? 700 : _ref$width,
        _ref$height = _ref.height,
        height = _ref$height === void 0 ? 700 : _ref$height,
        _ref$isRetry = _ref.isRetry,
        isRetry = _ref$isRetry === void 0 ? false : _ref$isRetry;

    _classCallCheck(this, Game);

    this.screen = new _screen_desctop_js__WEBPACK_IMPORTED_MODULE_0__.Screen(width, width);
    this.screen.loadImages({
      obstacles: 'img/obstacles.png',
      player: 'img/player.png',
      menu: 'img/menu-bg.png',
      tiles: 'img/menu-bg.png',
      bg1: 'img/bg/Bg1(morning).png',
      bg2: 'img/bg/Bg2(day).png',
      bg3: 'img/bg/Bg3(pre_evening).png',
      bg4: 'img/bg/Bg4(evening).png',
      bg5: 'img/bg/Bg5(night).png',
      bgLoading: 'img/scenes/loading/bg.png',
      bgMenu: 'img/scenes/menu/bg-desctop.png',
      tree1: 'img/bg/tree1.png',
      tree2: 'img/bg/tree2.png',
      tree3: 'img/bg/tree3.png',
      tree4: 'img/bg/tree4.png',
      tree5: 'img/bg/tree5.png',
      ground: 'img/bg/ground.png',
      sun: 'img/sun_rays.png',
      sunBlur: 'img/sun_rays_blur.png',
      bird: 'img/birds.png',
      mouse: 'img/mouse.png',
      gameOverPlayer: 'img/game-over-player.png',
      moon: 'img/moon.png',
      sky1: 'img/cloud3-180.png',
      sky2: 'img/cloud2-120.png',
      sky3: 'img/cloud1-100.png',
      skyBig: 'img/scenes/menu/cloud1-desctop-600.png',
      skyBig3: 'img/scenes/menu/cloud3-desctop-600.png',
      cloudLogo: 'img/Cloud_with_Plushy_logo-200.png',
      logo: 'img/game-logo.png',
      btnStart: 'img/btns/start-btn.png',
      btnRetry: 'img/btns/retry-btn.png',
      btnClose: 'img/btns/close-btn.png',
      btnStats: 'img/btns/stat-btn.png',
      btnMute: 'img/btns/mute-on.png',
      btnMuteOff: 'img/btns/mute-off.png',
      btnShare: 'img/btns/share-btn.png',
      textGameOver: 'img/text/game-over-text.png',
      textCount: 'img/text/count-text.png',
      collideText1: 'img/text/aych.png',
      collideText2: 'img/text/oh-oh-oh.png',
      collideText3: 'img/text/ups.png',
      collideText4: 'img/text/sorry.png',
      countText1: 'img/text/bombastic.png',
      countText2: 'img/text/fast.png',
      countText3: 'img/text/fluffy.png',
      countText4: 'img/text/teddy.png',
      sleepText: 'img/text/sleeping.png',
      textBg: 'img/text-bg.png',
      cloudText: 'img/text/cloud-text.png',
      progress: 'img/scenes/loading/progress.png',
      progressStart: 'img/scenes/loading/progress-start.png',
      progressWrap: 'img/scenes/loading/progress-wrap.png',
      progressLama: 'img/scenes/loading/progress-lama.png',
      menuLama: 'img/scenes/menu/lama-menu-desctop.png',
      menuLamaSleep: 'img/scenes/menu/lama-sleep-menu-desctop.png'
    });
    this.screen.loadAudio({
      crash1: 'sound/Oi.mp3',
      crash2: 'sound/crash3.mp3',
      start: 'sound/Start_Button.mp3',
      jump: 'sound/Pryzhok.mp3',
      intro: 'sound/Lama_Intro.mp3',
      main: 'sound/Lama_Main.mp3'
    });
    this.count = 0;
    this.control = new _controls_js__WEBPACK_IMPORTED_MODULE_5__.Controls();
    this.scenes = {
      loading: new _scenes_loading_desctop_js__WEBPACK_IMPORTED_MODULE_1__.Loading(this),
      menu: new _scenes_menu_desctop_js__WEBPACK_IMPORTED_MODULE_3__.Menu(this),
      preStart: new _scenes_pre_start_desctop_js__WEBPACK_IMPORTED_MODULE_7__.PreStart(this),
      running: new _scenes_running_desctop_js__WEBPACK_IMPORTED_MODULE_6__.Running(this),
      gameOver: new _scenes_game_over_desctop_js__WEBPACK_IMPORTED_MODULE_2__.GameOver(this)
    };
    this.isRetry = isRetry;
    this.currentScene = this.scenes.loading;
    this.currentScene.init();
    this.isMute = false; // window.addEventListener("resize", this.resize);
  }

  _createClass(Game, [{
    key: "resize",
    value: function resize() {
      // перенести в cssдолжно все считать при ресайзе
      // this.screen = new Screen(window.innerWidth, window.innerHeight);
      // this.screen.context.save();
      var ratio = innerWidth / innerHeight;
      this.screen.canvas.width = innerHeight * ratio;
      this.screen.canvas.height = innerHeight;
      this.screen.context.scale(innerWidth / this.screen.canvas.width, innerHeight / this.screen.canvas.height); // this.screen.context.restore()
    }
  }, {
    key: "changeScene",
    value: function changeScene(status) {
      switch (status) {
        case _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.LOADED:
          return this.scenes.menu;

        case _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.PRE_START:
          return this.scenes.preStart;

        case _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.START_GAME:
          return this.scenes.running;

        case _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.STOP_GAME:
          return this.currentScene.status = _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.STOP_GAME;

        case _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.GAME_OVER:
          return this.scenes.gameOver;

        default:
          return this.scenes.menu;
      }
    }
  }, {
    key: "frame",
    value: function frame(time) {
      var _this = this;

      if (this.currentScene.status !== _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.WORKING && this.currentScene.status !== _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.STOP_GAME) {
        this.currentScene = this.changeScene(this.currentScene.status);
        this.currentScene.init();
      }

      if (this.currentScene.status !== _scene_js__WEBPACK_IMPORTED_MODULE_4__.Scene.STOP_GAME) {
        this.currentScene.render(time);
        requestAnimationFrame(function (time) {
          return _this.frame(time);
        });
      }
    }
  }, {
    key: "run",
    value: function run() {
      var _this2 = this;

      requestAnimationFrame(function (time) {
        return _this2.frame(time);
      }); // window.addEventListener("resize", this.resize);
      // this.resize();
    }
  }]);

  return Game;
}();

/***/ }),

/***/ "./js/image-loader.js":
/*!****************************!*\
  !*** ./js/image-loader.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImageLoader": () => (/* binding */ ImageLoader)
/* harmony export */ });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var ImageLoader = /*#__PURE__*/function () {
  function ImageLoader(imageFiles) {
    _classCallCheck(this, ImageLoader);

    this.imageFiles = imageFiles;
    this.images = {};
  }

  _createClass(ImageLoader, [{
    key: "load",
    value: function () {
      var _load = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
        var name;
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.t0 = regeneratorRuntime.keys(this.imageFiles);

              case 1:
                if ((_context.t1 = _context.t0()).done) {
                  _context.next = 8;
                  break;
                }

                name = _context.t1.value;

                if (!this.imageFiles.hasOwnProperty(name)) {
                  _context.next = 6;
                  break;
                }

                _context.next = 6;
                return this.loadImage(name, this.imageFiles[name]);

              case 6:
                _context.next = 1;
                break;

              case 8:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function load() {
        return _load.apply(this, arguments);
      }

      return load;
    }()
  }, {
    key: "loadImage",
    value: function loadImage(name, src) {
      var image = new Image();
      this.images[name] = image;
      image.src = src;
    }
  }]);

  return ImageLoader;
}();

/***/ }),

/***/ "./js/index.js":
/*!*********************!*\
  !*** ./js/index.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "addCount": () => (/* binding */ addCount),
/* harmony export */   "getCount": () => (/* binding */ getCount)
/* harmony export */ });
/* harmony import */ var _index_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../index.css */ "./index.css");
/* harmony import */ var _game_desctop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./game-desctop.js */ "./js/game-desctop.js");


VK.init(function () {
  init();
  publish();
}, function () {
  alert('Упс, что пошло не так!');
}, '5.131');
var user = null;

function init() {
  console.log('11111111111111111111');
  VK.api("users.get", {
    "fields": "first_name, last_name",
    "v": "5.73"
  }, function (data) {
    console.log(data);
    var user_name = data.response[0].last_name + data.response[0].first_name;
    console.log(user_name);
  });
}

function publish() {
  var upload_url = '';
  var photo604 = '';
  VK.api("photos.getWallUploadServer", {
    "v": "5.73"
  }, function (data) {
    upload_url = data.response;
  });
  VK.api("apps.get", {
    "extended": 1,
    "v": "5.73"
  }, function (data) {
    console.log(data.response.items[0]);
    console.log(data.response.items[0].screenshots[0]);
    photo604 = data.response.items[0].screenshots[0].photo_604;
  });
  var x;
  var xhr = new XMLHttpRequest(); // create XMLHttpRequest

  var data = new FormData();
  xhr.responseType = "blob";

  xhr.onload = function () {
    data.append("imageFile", xhr.response);
    x = new XMLHttpRequest();
    x.open("POST", upload_url, true);
    x.send(data);
  }; // create formData object
  // data.append("photo", image)


  try {
    xhr.open("GET", "https://anastasiaart.github.io/img/scenes/loading/bg.png"); // open connection

    xhr.send(data);
    console.log(data);
    console.log(xhr.response);
  } catch (err) {
    console.log(err);
  }

  VK.api("wall.post", {
    "message": "Hello!",
    "attachments": photo_604,
    "v": "5.73"
  }, function (data) {
    console.log("Post ID:" + data.response.post_id);
  });
}

function getUser() {
  var user = null;
  VK.api("users.get", {
    "fields": "first_name, last_name, user_id",
    "v": "5.73"
  }, function (data) {
    user = data.response[0];
    console.log(user);
  });
  return user;
}

function addCount() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;
  var user = getUser();
  VK.api("secure.addAppEvent", {
    "user_id": user.user_id,
    "activity_id": 2,
    "value": value,
    "v": "5.73"
  }, function (data) {
    console.log(data);
  });
}
function getCount() {
  var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 100;
  var user = getUser();
  var count = 0;
  VK.api("apps.getScore", {
    "user_id": user.user_id,
    "v": "5.73"
  }, function (data) {
    count = data;
    console.log(data);
  });
}

window.onload = function () {
  var lamaGame = new _game_desctop_js__WEBPACK_IMPORTED_MODULE_1__.Game();
  lamaGame.run();
  var startBtn = document.getElementById('start-btn');
  startBtn.addEventListener("mousedown", function (e) {
    lamaGame.scenes.menu.startGame();
  }, false);
  var closeBtn = document.getElementById('close-btn');
  closeBtn.addEventListener("mousedown", function (e) {
    lamaGame.scenes.preStart.setCloseBtn();
  }, false);
  var retryBtn = document.getElementById('retry-btn');
  retryBtn.addEventListener("mousedown", function (e) {
    lamaGame.scenes.gameOver.retry();
  }, false);
  var toggleMuteBtn = document.getElementById('mute-btn');
  toggleMuteBtn.style.backgroundImage = lamaGame.isMute ? "url('img/btns/mute-off.png')" : "url('img/btns/mute-on.png')";
  toggleMuteBtn.addEventListener("mousedown", function (e) {
    lamaGame.isMute = !lamaGame.isMute;
    toggleMuteBtn.style.backgroundImage = lamaGame.isMute ? "url('img/btns/mute-off.png')" : "url('img/btns/mute-on.png')";

    for (var audio in lamaGame.screen.audios) {
      if (lamaGame.isMute) {
        lamaGame.screen.audios[audio].volume = 0;
      } else {
        lamaGame.screen.audios[audio].volume = 0.8;
      }
    }
  }, false);
};

/***/ }),

/***/ "./js/math.js":
/*!********************!*\
  !*** ./js/math.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "getRandomInt": () => (/* binding */ getRandomInt)
/* harmony export */ });
var getRandomInt = function getRandomInt(min, max) {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается
};

/***/ }),

/***/ "./js/obstacle.js":
/*!************************!*\
  !*** ./js/obstacle.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Obstacle": () => (/* binding */ Obstacle)
/* harmony export */ });
/* harmony import */ var _vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector.js */ "./js/vector.js");
/* harmony import */ var _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite-sheet.js */ "./js/sprite-sheet.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var Obstacle = /*#__PURE__*/function () {
  function Obstacle(_ref) {
    var _ref$gameWidth = _ref.gameWidth,
        gameWidth = _ref$gameWidth === void 0 ? 640 : _ref$gameWidth,
        _ref$gameHeight = _ref.gameHeight,
        gameHeight = _ref$gameHeight === void 0 ? 640 : _ref$gameHeight,
        _ref$index = _ref.index,
        index = _ref$index === void 0 ? 1 : _ref$index;

    _classCallCheck(this, Obstacle);

    this.speed = 310;
    this.velocity = new _vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector('left', 0);
    this.lastTime = 0;
    this.isStoped = false;
    this.tiles = new _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__.SpriteSheet({
      imageName: 'obstacles',
      imageWidth: 480,
      imageHeight: 480,
      spriteHeight: 80,
      spriteWidth: 80
    });
    this.view = this.tiles.getSprite(index);
    this.collisionShape = {
      x: 20,
      y: 30,
      width: 80,
      height: 80
    };
    this.gameWidth = gameWidth;
    this.x = 0;
    this.y = 0;
    this.dead = false;
    this.isCrash = false; // по умолчанию персонаж идет влево

    this.walk();
  } // идти


  _createClass(Obstacle, [{
    key: "walk",
    value: function walk() {
      if (this.isStoped) return;
      this.velocity.setDirection('left', this.speed);
    }
  }, {
    key: "update",
    value: function update(time, width) {
      // пропускаем первый кадр
      if (this.lastTime === 0) {
        this.lastTime = time;
        return;
      }

      if (!this.isStoped) {
        if (this.x < 0 - this.tiles.spriteWidth) {
          this.dead = true;
        }

        this.x += (time - this.lastTime) * (this.velocity.x / 1000);
        this.y += (time - this.lastTime) * (this.velocity.y / 1000);
        this.lastTime = time;
        this.view.setXY(Math.trunc(this.x), Math.trunc(this.y));
      }
    }
  }]);

  return Obstacle;
}();

/***/ }),

/***/ "./js/player.js":
/*!**********************!*\
  !*** ./js/player.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Player": () => (/* binding */ Player)
/* harmony export */ });
/* harmony import */ var _vector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vector.js */ "./js/vector.js");
/* harmony import */ var _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite-sheet.js */ "./js/sprite-sheet.js");
/* harmony import */ var _js_animateObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/js/animateObject */ "./js/animateObject.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Player = /*#__PURE__*/function () {
  // constructor({imageName, speed, imageWidth, imageHeight, spriteWidth, spriteHeight, control}) {
  function Player(control) {
    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var speedWalk = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    _classCallCheck(this, Player);

    this.x = 0;
    this.y = 0;
    this.speed = 1050;
    this.velocity = new _vector_js__WEBPACK_IMPORTED_MODULE_0__.Vector('right', speedWalk);
    this.lastTime = 0;
    this.isJumping = false;
    this.tile = new _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__.SpriteSheet({
      imageName: 'player',
      imageWidth: 1680,
      imageHeight: 720,
      spriteWidth: 240,
      spriteHeight: 240
    }); // по умолчанию персонаж идет вправо

    this.walk();
    this.control = control;
    this.startPosY = y;
    this.isStoped = false;
    this.deadCount = 0;
    this.collisionShape = {
      x: 35,
      y: 0,
      width: 170,
      height: 220
    };
    this.jumpAudio = null;
  } // идти


  _createClass(Player, [{
    key: "walk",
    value: function walk() {
      if (this.isJumping) return;
      this.view = this.tile.getAnimation([4, 5, 6, 7], 150);
      this.view.setXY(Math.trunc(this.x), Math.trunc(this.y));
      this.view.run();
    } // прыгать

  }, {
    key: "jump",
    value: function jump() {
      var _this = this;

      if (this.jumpAudio) {
        this.jumpAudio.play();
      }

      if (this.isJumping || this.isStoped) return;
      this.isJumping = true;
      this.view = this.tile.getAnimation([15, 16, 17, 18], 120, false);
      this.velocity.setDirection('up', this.speed); // меняющаяся анимация при прыжке

      this.view.onEnd = function () {
        _this.view = _this.tile.getAnimation([19], 550, false);

        _this.view.setXY(Math.trunc(_this.x), Math.trunc(_this.y));

        _this.view.onEnd = function () {
          _this.view = _this.tile.getAnimation([20, 21], 120, false);

          _this.view.setXY(Math.trunc(_this.x), Math.trunc(_this.y));

          _this.view.onEnd = function () {
            _this.walk();
          };

          _this.view.run();
        };

        _this.view.run();
      };

      this.view.run();
    } // столкновение

  }, {
    key: "crash",
    value: function crash(obstacle, obstacles) {
      var _this2 = this;

      if (this.isStoped) return;
      this.stop();
      this.isStoped = true;
      this.velocity.y = 10;
      this.y = this.startPosY;
      this.view = this.tile.getAnimation([11, 12, 13, 14], 160, false);
      this.view.setXY(Math.trunc(this.x), Math.trunc(this.y));
      obstacles.forEach(function (i) {
        i.isStoped = true;
      });
      obstacle.x = 0 - obstacle.view.width;
      obstacle.view.setXY(Math.trunc(obstacle.x), Math.trunc(obstacle.y));

      this.view.onEnd = function () {
        _this2.isStoped = false;
        obstacles.forEach(function (i) {
          i.isStoped = false;
        });

        _this2.walk();

        _this2.deadCount++;
        obstacle.isCrash = true;
      };

      this.view.run();
    } // остановится, обнуляем скорость , останавливаем анимацию

  }, {
    key: "stop",
    value: function stop() {
      if (this.isJumping) return; // this.velocity.setDirection(direction, 0);

      this.view = this.tile.getAnimation([4], 150);
      this.view.setXY(Math.trunc(this.x), Math.trunc(this.y));
      this.view.stop();
    }
  }, {
    key: "updatePosition",
    value: function updatePosition(time) {
      this.y += (time - this.lastTime) * (this.velocity.y / 1000);
      this.velocity.y += 28;
      this.x += (time - this.lastTime) * (this.velocity.x / 1000); // не ниже значения, чтоб не провалился под землю при прыжке

      if (this.y >= this.startPosY) {
        this.isJumping = false;
        this.view.run();
      }
    }
  }, {
    key: "collide",
    value: function collide(obs, obstacles) {
      var hit = false; //Если объекты находятся на одной линии по горизонтали{

      if (this.y < obs.y + obs.view.height - obs.collisionShape.y && this.y + this.view.height > obs.y - obs.collisionShape.y) {
        //Если объекты находятся на одной линии по вертикали
        if (this.x + this.view.width - this.collisionShape.x > obs.x && this.x + this.collisionShape.x + 20 < obs.x + obs.view.width - obs.collisionShape.x) {
          hit = true;
          this.crash(obs, obstacles);
        }
      }

      return hit;
    }
  }, {
    key: "update",
    value: function update(time) {
      // пропускаем первый кадр
      if (this.lastTime === 0) {
        this.lastTime = time;
        return;
      }

      if (this.control.jump) {
        this.jump();
      } else if (this.control.down) {
        this.stop();
      }

      if (this.isJumping) {
        this.updatePosition(time);
      }

      this.lastTime = time;
      this.view.setXY(Math.trunc(this.x), Math.trunc(this.y));
      this.view.update(time);
    }
  }]);

  return Player;
}();

/***/ }),

/***/ "./js/scene.js":
/*!*********************!*\
  !*** ./js/scene.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Scene": () => (/* binding */ Scene)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Scene = /*#__PURE__*/function () {
  function Scene(game) {
    _classCallCheck(this, Scene);

    this.game = game;
    this.status = this.constructor.WORKING;
  }

  _createClass(Scene, [{
    key: "init",
    value: function init() {
      this.status = this.constructor.WORKING;
    }
  }, {
    key: "finish",
    value: function finish(status) {
      this.status = status;
    }
  }, {
    key: "resize",
    value: function resize() {
      this.game.screen.context.save();
      this.game.screen.context.scale(innerWidth / this.game.screen.canvas.width, innerHeight / this.game.screen.canvas.height);
      this.game.screen.context.restore();
    }
  }, {
    key: "render",
    value: function render(time) {
      // window.addEventListener("resize", this.resize);
      this.resize();
    }
  }], [{
    key: "WORKING",
    get: function get() {
      return 'WORKING';
    }
  }, {
    key: "LOADED",
    get: function get() {
      return 'LOADED';
    }
  }, {
    key: "PRE_START",
    get: function get() {
      return 'PRE_START';
    }
  }, {
    key: "START_GAME",
    get: function get() {
      return 'START_GAME';
    }
  }, {
    key: "STOP_GAME",
    get: function get() {
      return 'STOP_GAME';
    }
  }, {
    key: "GAME_OVER",
    get: function get() {
      return 'GAME_OVER';
    }
  }, {
    key: "FINISHED",
    get: function get() {
      return 'FINISHED';
    }
  }]);

  return Scene;
}();

/***/ }),

/***/ "./js/scenes/game-over-desctop.js":
/*!****************************************!*\
  !*** ./js/scenes/game-over-desctop.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "GameOver": () => (/* binding */ GameOver)
/* harmony export */ });
/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scene.js */ "./js/scene.js");
/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../player */ "./js/player.js");
/* harmony import */ var _sprite_sheet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../sprite-sheet */ "./js/sprite-sheet.js");
/* harmony import */ var _js_animateObject__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/js/animateObject */ "./js/animateObject.js");
/* harmony import */ var _js_scenes_running__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/js/scenes/running */ "./js/scenes/running.js");
/* harmony import */ var _js_flyElement__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @/js/flyElement */ "./js/flyElement.js");
/* harmony import */ var _js_index__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @/js/index */ "./js/index.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }








var GameOver = /*#__PURE__*/function (_Scene) {
  _inherits(GameOver, _Scene);

  var _super = _createSuper(GameOver);

  function GameOver(game) {
    var _this;

    _classCallCheck(this, GameOver);

    _this = _super.call(this, game);
    _this.isShowModal = false;
    _this.player = new _player__WEBPACK_IMPORTED_MODULE_1__.Player(_this.game.screen.canvas.height - 300);
    _this.player.tile = new _sprite_sheet__WEBPACK_IMPORTED_MODULE_2__.SpriteSheet({
      imageName: 'gameOverPlayer',
      imageWidth: 1341,
      imageHeight: 336,
      spriteWidth: 336,
      spriteHeight: 336
    });
    _this.player.view = _this.player.tile.getAnimation([1, 2, 3, 4], 150, false);
    _this.player.x = _this.game.screen.canvas.width / 2 - _this.player.view.width / 1.5;
    _this.player.y = _this.game.screen.canvas.height - _this.player.view.height;

    _this.player.view.setXY(Math.trunc(_this.x), Math.trunc(_this.y));

    _this.player.view.run();

    _this.position = {
      x: _this.game.screen.canvas.width,
      y: 0
    };
    _this.opacity = 0;
    _this.sky1 = null;
    _this.sky2 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('sky1', _this.game.screen.canvas.width, 0);
    _this.sky3 = null;
    _this.sky5 = null;
    _this.logoCloud = null;
    _this.textGameOver = null;
    _this.lama = null;
    _this.scale = 0;
    _this.isChangeScale = false;
    _this.textGameOverY = _this.game.screen.canvas.height / 2;
    _this.isStartLevitation = false;
    _this.isShowModal = false;
    _this.modalGameOver = document.getElementById('modal-game-over');
    _this.modalGameOverText = document.getElementById('modal-text-game-over');
    _this.modalGameOverBtns = document.getElementById('modal-game-over__btns');
    _this.bestCount = (0,_js_index__WEBPACK_IMPORTED_MODULE_6__.getCount)(); // this.bird = new FlyElement(this.game.screen.canvas.width/2,0,'bird', 400, 100, 100, 100);
    // this.bird.y = this.game.screen.canvas.height/2;
    // this.mouse = new FlyElement(this.game.screen.canvas.width,200,'mouse', 500, 100, 100, 100, true);
    // this.mouse.x = this.game.screen.canvas.width/2;
    // this.bird.startFly = this.game.screen.canvas.width/2;
    // this.mouse.startWaveFly =  this.game.screen.canvas.width/2;

    return _this;
  } // тест при геймовере


  _createClass(GameOver, [{
    key: "drawText",
    value: function drawText() {
      this.modalGameOver.style.display = "block";
      this.modalGameOverText.innerHTML = 'Упс! <br> Лама заснула! <br> Встретимся завтра <br> или ещё поиграем?';
    }
  }, {
    key: "showModalRetry",
    value: function showModalRetry() {
      this.modalGameOverBtns.style.display = "flex";
      this.modalGameOver.style.display = "block";
      this.modalGameOverText.innerHTML = 'Лучший результат: <br>' + this.bestCount + '<br> Ваш результат: <br>' + this.game.count;

      if (this.game.count > this.bestCount) {
        (0,_js_index__WEBPACK_IMPORTED_MODULE_6__.addCount)();
      }
    }
  }, {
    key: "init",
    value: function init() {
      var _this2 = this;

      _get(_getPrototypeOf(GameOver.prototype), "init", this).call(this);

      this.modalGameOverBtns.style.display = "none";
      this.sky1 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('sky2', this.game.screen.canvas.width, this.game.screen.canvas.height / 2, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width / 2 - 470);
      this.sky5 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('sky3', this.game.screen.canvas.width, 50, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width / 2 - 50);
      this.logo = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('logo', this.game.screen.canvas.width / 2, this.game.screen.canvas.height / 2, 1, 0, this.game.screen.context, this.game.screen.images);
      this.sky3 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('sky2', this.game.screen.canvas.width, this.game.screen.images.sky1.height / 1.5, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width - 100);
      this.skyBig = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('skyBig', -50, this.game.screen.canvas.height - 150, 1, 0, this.game.screen.context, this.game.screen.images, 'right', -50);
      this.skyBig2 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('skyBig', this.game.screen.canvas.width - 250, this.game.screen.canvas.height - 150, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width / 2 - 150);
      this.obstacle1 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 50, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 50, this.game.screen.canvas.height / 1.5);
      this.obstacle2 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('obstacles', 20, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', 20, this.game.screen.canvas.height / 3);
      this.obstacle3 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('obstacles', 40, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', 40, this.game.screen.canvas.height / 1.5);
      this.obstacle4 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 90, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 90, this.game.screen.canvas.height / 1.2);
      this.obstacle5 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 150, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 150, this.game.screen.canvas.height / 3.3);
      this.obstacle6 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 80, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 80, 30);
      this.obstacle7 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('obstacles', this.game.screen.images.sky1.width - 70, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.images.sky1.width - 70);
      this.lama = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('menuLama', -400, this.game.screen.canvas.height - this.game.screen.images.menuLama.height / 1.5, 1, 0, this.game.screen.context, this.game.screen.images, 'right', -150);
      this.lamaSleep = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('menuLamaSleep', this.game.screen.canvas.width, this.game.screen.canvas.height - this.game.screen.images.menuLamaSleep.height / 1.5, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width - 250);
      this.textGameOver = new _js_animateObject__WEBPACK_IMPORTED_MODULE_3__.AnimateObject('textGameOver', this.game.screen.canvas.width / 2, this.game.screen.canvas.height / 7, 0, 0, this.game.screen.context, this.game.screen.images);
      setTimeout(function () {
        _this2.isShowModal = true;
      }, 5000);
    }
  }, {
    key: "retry",
    value: function retry() {
      this.modalGameOverBtns.style.display = "none";
      this.modalGameOver.style.display = "none";
      this.isShowModal = false;
      this.game.currentScene = new _js_scenes_running__WEBPACK_IMPORTED_MODULE_4__.Running(this.game);
      this.game.currentScene.init();
      this.game.screen.canvas.removeEventListener("mousedown", this.retry);
    }
  }, {
    key: "update",
    value: function update(time) {
      // this.bird.update(time);
      // this.mouse.update(time);
      if (Object.keys(this.sky2.images).length <= 0) {
        this.sky2.images = this.game.screen.images;
        this.sky2.context = this.game.screen.context;
      }

      if (this.position.x >= 0) {
        this.position.x -= 3;
      }

      if (this.isShowModal && this.opacity <= 1) {
        this.opacity += 0.01;
      }
    }
  }, {
    key: "renderClouds",
    value: function renderClouds() {
      if (this.sky2.vector1.x >= -150 && !this.sky2.isLevitation || this.isStopAnimation) {
        this.sky2.run();
      } else {
        this.sky2.levitation(-150, 0);
      }

      if (this.sky1.vector1.x >= this.sky1.endX && !this.sky1.isLevitation || this.isStopAnimation) {
        this.sky1.run();
      } else {
        this.sky1.levitation(this.sky1.endX, this.sky1.endY);
      }

      if (this.sky3.vector1.x > this.sky3.endX && !this.sky3.isLevitation || this.isStopAnimation) {
        this.sky3.run();
      } else {
        this.sky3.levitation(this.sky3.endX, this.sky3.endY);
      }

      if (this.sky5.vector1.x > this.sky5.endX && !this.sky5.isLevitation || this.isStopAnimation) {
        this.sky5.run();
      } else {
        this.sky5.levitation(this.sky5.endX, this.sky5.endY);
      }
    }
  }, {
    key: "renderGameOverImg",
    value: function renderGameOverImg() {
      if (this.scale < 1.5 && !this.isChangeScale) {
        this.scale += 0.03;
      } else if (this.scale.toFixed(1) === '1.5') {
        this.isChangeScale = true;
      }

      if (this.isChangeScale && this.scale > 1.2 && this.textGameOverY >= this.game.screen.canvas.height / 7) {
        this.scale -= 0.02;
        this.textGameOverY -= 14;
      } else {
        this.game.screen.images.textGameOver.width -= 30;
        this.game.screen.images.textGameOver.height -= 10;
      }

      this.textGameOver.drawImageScale(this.game.screen.canvas.width / 2, this.textGameOverY, this.scale, this.game.screen.images.textGameOver.width, this.game.screen.images.textGameOver.height);
    }
  }, {
    key: "renderGameOverModal",
    value: function renderGameOverModal() {
      if (this.isChangeScale && this.scale <= 1.2) {
        if (!this.isShowModal) {
          this.game.screen.context.globalAlpha = 1;
          this.drawText();
        } else {
          this.game.screen.context.globalAlpha = this.opacity;
          this.showModalRetry();
        }
      }
    }
  }, {
    key: "renderLama",
    value: function renderLama() {
      if (this.lama.vector1.x <= this.lama.endX && !this.lama.isLevitation || this.isStopAnimation) {
        this.lama.run();
      } else {
        this.lama.levitation(this.lama.endX, this.lama.endY);
      }

      if (this.lamaSleep.vector1.x >= this.lamaSleep.endX && !this.lamaSleep.isLevitation || this.isStopAnimation) {
        this.lamaSleep.run();
      } else {
        this.lamaSleep.levitation(this.lamaSleep.endX, this.lamaSleep.endY, 1, 30);
      }
    }
  }, {
    key: "renderFrontObstacles",
    value: function renderFrontObstacles() {
      if (this.obstacle2.vector1.y <= this.obstacle2.endY && !this.obstacle2.isRotation || this.isStopAnimation) {
        this.obstacle2.runSprite(320, 320);
      } else {
        this.obstacle2.drawImageSpriteRotated(this.obstacle2.endX, this.obstacle2.endY, 0, -2, 0.005, 320, 320);
      }

      if (this.obstacle3.vector1.y <= this.obstacle3.endY && !this.obstacle3.isRotation || this.isStopAnimation) {
        this.obstacle3.runSprite(320, 400);
      } else {
        this.obstacle3.drawImageSpriteRotated(this.obstacle3.endX, this.obstacle3.endY, 0, -2, 0.005, 320, 400);
      }

      if (this.obstacle4.vector1.y <= this.obstacle4.endY && !this.obstacle4.isRotation || this.isStopAnimation) {
        this.obstacle4.runSprite(80, 400);
      } else {
        this.obstacle4.drawImageSpriteRotated(this.obstacle4.endX, this.obstacle4.endY, 0, -2, 0.005, 80, 400);
      }

      if (this.obstacle5.vector1.y <= this.obstacle5.endY && !this.obstacle5.isRotation || this.isStopAnimation) {
        this.obstacle5.runSprite(240, 400);
      } else {
        this.obstacle5.drawImageSpriteRotated(this.obstacle5.endX, this.obstacle5.endY, 0, -2, 0.005, 240, 400);
      }

      if (this.obstacle6.vector1.y <= this.obstacle6.endY && !this.obstacle6.isRotation || this.isStopAnimation) {
        this.obstacle6.runSprite(160, 400);
      } else {
        this.obstacle6.drawImageSpriteRotated(this.obstacle6.endX, this.obstacle6.endY, 0, -2, 0.002, 160, 400);
      }
    }
  }, {
    key: "render",
    value: function render(time) {
      this.game.screen.context.globalAlpha = 1;
      this.update(time);
      this.game.screen.drawImageFullScreen(0, 0, 'bgMenu');
      this.renderClouds();
      this.renderGameOverImg();
      this.skyBig.levitation(this.skyBig.endX, this.skyBig.endY, 1, 40, 0.3, 0, 0, 600, 340, 400, 240);
      this.skyBig2.levitation(this.skyBig2.endX, this.skyBig2.endY, 1, 40, 0.3, 0, 0, 600, 340, 400, 240);
      this.renderFrontObstacles(); // this.game.screen.drawSprite(this.bird.view);
      // this.game.screen.drawSprite(this.mouse.view);

      this.renderLama();

      _get(_getPrototypeOf(GameOver.prototype), "render", this).call(this, time);

      this.renderGameOverModal();
    }
  }]);

  return GameOver;
}(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene);

/***/ }),

/***/ "./js/scenes/loading-desctop.js":
/*!**************************************!*\
  !*** ./js/scenes/loading-desctop.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Loading": () => (/* binding */ Loading)
/* harmony export */ });
/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scene.js */ "./js/scene.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }


var Loading = /*#__PURE__*/function (_Scene) {
  _inherits(Loading, _Scene);

  var _super = _createSuper(Loading);

  function Loading(game) {
    var _this;

    _classCallCheck(this, Loading);

    _this = _super.call(this, game);
    _this.loadedAt = 0;
    _this.isPressed = false;
    _this.persent = 0;
    _this.progressWidth = 300;
    _this.duration = 6000; // 4 секунды для расчета и отрисовки всех элемнтов

    return _this;
  }

  _createClass(Loading, [{
    key: "init",
    value: function init() {
      var _this2 = this;

      _get(_getPrototypeOf(Loading.prototype), "init", this).call(this);

      this.loadedAt = 0;
      document.addEventListener('keydown', function (event) {
        _this2.isPressed = true;
      });
      document.addEventListener('mousedown', function (event) {
        _this2.isPressed = true;
      });
    }
  }, {
    key: "update",
    value: function update(time) {
      if (this.loadedAt === 0 && this.game.screen.isImagesLoaded && this.game.screen.isAudiosLoaded) {
        this.loadedAt = time;
      }

      if (time <= this.loadedAt + this.duration && this.persent <= this.progressWidth) {
        this.persent = (time - this.loadedAt) * this.progressWidth / this.duration;
      }

      if (this.loadedAt !== 0 && time - this.loadedAt > this.duration) {
        this.persent = this.progressWidth;

        if (this.isPressed) {
          this.finish(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene.LOADED);
        }
      }
    }
  }, {
    key: "renderProgressBar",
    value: function renderProgressBar() {
      var width = this.game.screen.canvas.width / 2 - this.progressWidth / 2;
      var height = this.game.screen.canvas.height / 1.5 + 70;
      this.game.screen.drawScaleImage('progressWrap', width, height, 0, 0, 300, 36, this.progressWidth, 36);
      this.game.screen.drawImage(width, height, 'progressStart');
      this.game.screen.drawScaleImage('progress', width + 22, height, 0, 0, 285, 36, this.persent, 36);
      this.game.screen.drawScaleImage('progressLama', width + this.persent - 50, height - 50, 0, 0, 232, 232, 100, 100);
      this.game.screen.printText(width + this.progressWidth + 50, height + 27, "".concat(Math.floor(this.persent / 3), " %"), '23px', '#ffffff');
    }
  }, {
    key: "render",
    value: function render(time) {
      this.update(time);
      this.game.screen.drawScaleImage('bgLoading', -(this.game.screen.canvas.height * 1 - this.game.screen.canvas.width) / 2, 0, 0, 0, 700, 700, this.game.screen.canvas.height * 1, this.game.screen.canvas.height);
      this.renderProgressBar();

      if (!this.isPressed) {
        this.game.screen.printText(this.game.screen.canvas.width / 2 - 150, this.game.screen.canvas.height - 50, "Нажмите на лю бую  кнопку");
      }

      _get(_getPrototypeOf(Loading.prototype), "render", this).call(this, time);
    }
  }]);

  return Loading;
}(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene);

/***/ }),

/***/ "./js/scenes/menu-desctop.js":
/*!***********************************!*\
  !*** ./js/scenes/menu-desctop.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Menu": () => (/* binding */ Menu)
/* harmony export */ });
/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scene.js */ "./js/scene.js");
/* harmony import */ var _js_animateObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/js/animateObject */ "./js/animateObject.js");
/* harmony import */ var _js_flyElement__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/js/flyElement */ "./js/flyElement.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }




var Menu = /*#__PURE__*/function (_Scene) {
  _inherits(Menu, _Scene);

  var _super = _createSuper(Menu);

  function Menu(game) {
    var _this;

    _classCallCheck(this, Menu);

    _this = _super.call(this, game);
    _this.sky1 = null;
    _this.sky2 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('sky1', _this.game.screen.canvas.width, 0);
    _this.sky3 = null;
    _this.logo = null;
    _this.logoCloud = null;
    _this.obstacle1 = null;
    _this.obstacle2 = null;
    _this.obstacle3 = null;
    _this.obstacle4 = null;
    _this.obstacle5 = null;
    _this.obstacle6 = null;
    _this.obstacle7 = null;
    _this.lama = null;
    _this.isStopAnimation = false;
    _this.scale = 0;
    _this.btnStart = null;
    _this.isShowBtn = false;
    _this.startBtn = document.getElementById('start-btn');
    _this.muteBtn = document.getElementById('mute-btn');
    _this.bird = new _js_flyElement__WEBPACK_IMPORTED_MODULE_2__.FlyElement(_this.game.screen.canvas.width / 2, 0, 'bird', 400, 100, 100, 100);
    _this.bird.y = _this.game.screen.canvas.height / 2;
    _this.mouse = new _js_flyElement__WEBPACK_IMPORTED_MODULE_2__.FlyElement(_this.game.screen.canvas.width, 200, 'mouse', 500, 100, 100, 100, true);
    _this.mouse.x = _this.game.screen.canvas.width / 2;
    _this.bird.startFly = _this.game.screen.canvas.width / 2;
    _this.mouse.startWaveFly = _this.game.screen.canvas.width / 2;
    return _this;
  }

  _createClass(Menu, [{
    key: "init",
    value: function init() {
      _get(_getPrototypeOf(Menu.prototype), "init", this).call(this);

      this.startBtn.style.display = "block";
      this.muteBtn.style.display = "block";
      this.sky1 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('sky2', this.game.screen.canvas.width, this.game.screen.canvas.height / 2, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width / 2 - 470);
      this.sky5 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('sky3', this.game.screen.canvas.width, 50, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width / 2 - 50);
      this.logo = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('logo', this.game.screen.canvas.width / 2, this.game.screen.canvas.height / 2, 1, 0, this.game.screen.context, this.game.screen.images);
      this.sky3 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('sky2', this.game.screen.canvas.width, this.game.screen.images.sky1.height / 1.5, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width - 100);
      this.skyBig = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('skyBig', -50, this.game.screen.canvas.height - 150, 1, 0, this.game.screen.context, this.game.screen.images, 'right', -50);
      this.skyBig2 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('skyBig', this.game.screen.canvas.width - 250, this.game.screen.canvas.height - 150, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width / 2 - 150);
      this.obstacle1 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 50, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 50, this.game.screen.canvas.height / 1.5);
      this.obstacle2 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('obstacles', 20, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', 20, this.game.screen.canvas.height / 3);
      this.obstacle3 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('obstacles', 40, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', 40, this.game.screen.canvas.height / 1.5);
      this.obstacle4 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 90, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 90, this.game.screen.canvas.height / 1.2);
      this.obstacle5 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 150, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 150, this.game.screen.canvas.height / 3.3);
      this.obstacle6 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('obstacles', this.game.screen.canvas.width / 2 + 80, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.canvas.width / 2 + 80, 30);
      this.obstacle7 = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('obstacles', this.game.screen.images.sky1.width - 70, 0, 1, 0, this.game.screen.context, this.game.screen.images, 'down', this.game.screen.images.sky1.width - 70);
      this.lama = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('menuLama', -400, this.game.screen.canvas.height - this.game.screen.images.menuLama.height / 1.5, 1, 0, this.game.screen.context, this.game.screen.images, 'right', -150);
      this.lamaSleep = new _js_animateObject__WEBPACK_IMPORTED_MODULE_1__.AnimateObject('menuLamaSleep', this.game.screen.canvas.width, this.game.screen.canvas.height - this.game.screen.images.menuLamaSleep.height / 1.5, 1, 0, this.game.screen.context, this.game.screen.images, 'left', this.game.screen.canvas.width - 250);

      if (!this.game.isMute) {
        this.game.screen.audios.intro.play();
      }

      this.game.screen.audios.intro.volume = 0.8;
      this.game.screen.audios.intro.loop = true;
    }
  }, {
    key: "startGame",
    value: function startGame() {
      if (!this.game.isMute) {
        this.game.screen.audios.start.play();
      }

      this.isStopAnimation = true;
    }
  }, {
    key: "update",
    value: function update(time) {
      this.bird.update(time);
      this.mouse.update(time);
      this.game.screen.audios.intro.muted = false;

      if (Object.keys(this.sky2.images).length <= 0) {
        this.sky2.images = this.game.screen.images;
        this.sky2.context = this.game.screen.context;
      }

      if (this.obstacle7.vector1.y > this.game.screen.canvas.height && this.sky3.vector1.x < 0 && this.isStopAnimation) {
        this.startBtn.style.display = "none";
        this.finish(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene.PRE_START);
      }
    }
  }, {
    key: "renderFrontObstacles",
    value: function renderFrontObstacles() {
      if (this.obstacle2.vector1.y <= this.obstacle2.endY && !this.obstacle2.isRotation || this.isStopAnimation) {
        this.obstacle2.runSprite(320, 320);
      } else {
        this.obstacle2.drawImageSpriteRotated(this.obstacle2.endX, this.obstacle2.endY, 0, -2, 0.005, 320, 320);
      }

      if (this.obstacle3.vector1.y <= this.obstacle3.endY && !this.obstacle3.isRotation || this.isStopAnimation) {
        this.obstacle3.runSprite(320, 400);
      } else {
        this.obstacle3.drawImageSpriteRotated(this.obstacle3.endX, this.obstacle3.endY, 0, -2, 0.005, 320, 400);
      }

      if (this.obstacle4.vector1.y <= this.obstacle4.endY && !this.obstacle4.isRotation || this.isStopAnimation) {
        this.obstacle4.runSprite(80, 400);
      } else {
        this.obstacle4.drawImageSpriteRotated(this.obstacle4.endX, this.obstacle4.endY, 0, -2, 0.005, 80, 400);
      }

      if (this.obstacle5.vector1.y <= this.obstacle5.endY && !this.obstacle5.isRotation || this.isStopAnimation) {
        this.obstacle5.runSprite(240, 400);
      } else {
        this.obstacle5.drawImageSpriteRotated(this.obstacle5.endX, this.obstacle5.endY, 0, -2, 0.005, 240, 400);
      }

      if (this.obstacle6.vector1.y <= this.obstacle6.endY && !this.obstacle6.isRotation || this.isStopAnimation) {
        this.obstacle6.runSprite(160, 400);
      } else {
        this.obstacle6.drawImageSpriteRotated(this.obstacle6.endX, this.obstacle6.endY, 0, -2, 0.002, 160, 400);
      }
    }
  }, {
    key: "renderLama",
    value: function renderLama() {
      if (this.lama.vector1.x <= this.lama.endX && !this.lama.isLevitation || this.isStopAnimation) {
        this.lama.run();
      } else {
        this.lama.levitation(this.lama.endX, this.lama.endY);
      }

      if (this.lamaSleep.vector1.x >= this.lamaSleep.endX && !this.lamaSleep.isLevitation || this.isStopAnimation) {
        this.lamaSleep.run();
      } else {
        this.lamaSleep.levitation(this.lamaSleep.endX, this.lamaSleep.endY, 1, 30);
      }
    }
  }, {
    key: "renderLogo",
    value: function renderLogo() {
      if (!this.isStopAnimation) {
        this.game.screen.drawScaleImage('skyBig3', this.logo.vector1.x - 180, this.logo.vector1.y - 160, 0, 0, 600, 360, 150, 90);
        this.game.screen.drawScaleImage('skyBig', this.logo.vector1.x - 200, this.logo.vector1.y - 160, 0, 0, 600, 340, 400, 240);
        this.game.screen.drawScaleImage('skyBig', this.logo.vector1.x + 50, this.logo.vector1.y - 120, 0, 0, 600, 340, 150, 90);
        this.game.screen.drawScaleImage('skyBig3', this.logo.vector1.x - 180, this.logo.vector1.y - 60, 0, 0, 600, 360, 300, 200);
      }

      if (this.scale < 1 && !this.isStopAnimation) {
        this.scale += 0.05;
        this.logo.drawImageScale(this.logo.vector1.x, this.logo.vector1.y, this.scale);
      } else if (!this.isStopAnimation) {
        this.logo.drawImageRotated(this.logo.vector1.x, this.logo.vector1.y, '1.000', '0.800', 0.002, 0, false);
      }

      if (this.isStopAnimation && this.scale >= 0) {
        this.scale -= 0.05;
        this.logo.drawImageScale(this.logo.vector1.x, this.logo.vector1.y, this.scale);
      }
    }
  }, {
    key: "render",
    value: function render(time) {
      this.update(time);
      this.game.screen.drawImageFullScreen(0, 0, 'bgMenu');
      this.game.screen.drawScaleImage('moon', this.game.screen.canvas.width - 160, 30, 0, 0, 149, 151, 130, 131); // this.game.screen.drawImageRotated('sun',0, this.game.screen.canvas.height/1.1 , this.game.screen.changeScale('1.000', '0.800', 0.002), time/9000)

      if (this.obstacle7.vector1.y <= this.obstacle7.endY || this.isStopAnimation) {
        this.obstacle7.runSprite(80, 400);
      } else {
        this.obstacle7.drawImageSpriteRotated(this.obstacle7.endX, this.obstacle7.endY, 0, -2, 0.005, 80, 400);
      }

      if (this.sky2.vector1.x >= -150 && !this.sky2.isLevitation || this.isStopAnimation) {
        this.sky2.run();
      } else {
        this.sky2.levitation(-150, 0);
      }

      if (this.sky1.vector1.x >= this.sky1.endX && !this.sky1.isLevitation || this.isStopAnimation) {
        this.sky1.run();
      } else {
        this.sky1.levitation(this.sky1.endX, this.sky1.endY);
      }

      if (this.sky3.vector1.x > this.sky3.endX && !this.sky3.isLevitation || this.isStopAnimation) {
        this.sky3.run();
      } else {
        this.sky3.levitation(this.sky3.endX, this.sky3.endY);
      }

      if (this.sky5.vector1.x > this.sky5.endX && !this.sky5.isLevitation || this.isStopAnimation) {
        this.sky5.run();
      } else {
        this.sky5.levitation(this.sky5.endX, this.sky5.endY);
      }

      if (this.obstacle1.vector1.y <= this.obstacle1.endY && !this.obstacle1.isRotation || this.isStopAnimation) {
        this.obstacle1.runSprite(400, 320);
      } else {
        this.obstacle1.drawImageSpriteRotated(this.obstacle1.endX, this.obstacle1.endY, 0, -2, 0.002, 400, 320);
      }

      if (this.isStopAnimation) {
        this.skyBig.run();
        this.skyBig2.run();
      } else {
        this.skyBig.levitation(this.skyBig.endX, this.skyBig.endY, 1, 40, 0.3, 0, 0, 600, 340, 400, 240);
        this.skyBig2.levitation(this.skyBig2.endX, this.skyBig2.endY, 1, 40, 0.3, 0, 0, 600, 340, 400, 240);
      }

      this.renderFrontObstacles();
      this.game.screen.drawSprite(this.bird.view);
      this.game.screen.drawSprite(this.mouse.view);
      this.renderLogo();
      this.renderLama();

      _get(_getPrototypeOf(Menu.prototype), "render", this).call(this, time);
    }
  }]);

  return Menu;
}(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene);

/***/ }),

/***/ "./js/scenes/pre-start-desctop.js":
/*!****************************************!*\
  !*** ./js/scenes/pre-start-desctop.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PreStart": () => (/* binding */ PreStart)
/* harmony export */ });
/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scene.js */ "./js/scene.js");
/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../player.js */ "./js/player.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }



var PreStart = /*#__PURE__*/function (_Scene) {
  _inherits(PreStart, _Scene);

  var _super = _createSuper(PreStart);

  function PreStart(game) {
    var _this;

    _classCallCheck(this, PreStart);

    _this = _super.call(this, game);
    _this.position = {
      x: _this.game.screen.canvas.width,
      y: 0
    };
    _this.position1 = {
      x: _this.game.screen.canvas.width,
      y: 0
    };
    _this.player = new _player_js__WEBPACK_IMPORTED_MODULE_1__.Player(_this.game.control, _this.game.screen.canvas.height - 300, 100);
    _this.player.x = 0 - _this.player.view.width / 2;
    _this.modal = document.getElementById('modal');
    _this.modalText = document.getElementById('modal-text');
    return _this;
  }

  _createClass(PreStart, [{
    key: "init",
    value: function init() {
      _get(_getPrototypeOf(PreStart.prototype), "init", this).call(this);

      this.player.view.x = 500;
      this.player.view.y = 500;
      this.player.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - this.player.view.height;
    }
  }, {
    key: "setCloseBtn",
    value: function setCloseBtn() {
      if (!this.game.isMute) {
        this.game.screen.audios.jump.play();
      }

      this.changeScene();
      this.modal.style.display = 'none';
    }
  }, {
    key: "changeScene",
    value: function changeScene() {
      var _this2 = this;

      if (!this.game.isMute) {
        this.game.screen.audios.intro.pause();
        this.game.screen.audios.main.volume = 0;
        var interval = setInterval(function () {
          if (_this2.game.screen.audios.main.volume < 0.8) {
            _this2.game.screen.audios.main.volume += 0.009;
          } else {
            _this2.game.screen.audios.main.volume = 0.8;
            clearInterval(interval);
          }
        }, 200);
        this.game.screen.audios.main.loop = true;
        this.game.screen.audios.main.play();
      }

      this.finish(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene.START_GAME);
    }
  }, {
    key: "update",
    value: function update(time) {
      this.player.update(time);
    } // отрисовка окна для старого юзера

  }, {
    key: "showModalStart",
    value: function showModalStart() {
      this.modal.style.display = "block";
      this.modalText.innerHTML = 'Ты снова здесь!<br> Ура!';
    } // отрисовка окна для нового юзера
    // showModalStart() {
    //     this.modal.style.display = "block";
    //     this.modalText.innerHTML = 'Привет, я Лама! <br> Нажимай пробел для прыжка и помни,<br>что через пять столкновений <br>я засну.<br>Тогда придётся начать путь заново!'
    //     this.game.screen.drawScaleImage('textBg',this.game.screen.canvas.width/2 - 248, this.game.screen.canvas.height/2 - 200, 0, 0, 82, 108, 500, 300);
    //     this.game.screen.drawImage(this.game.screen.canvas.width/2 + 238 - this.game.screen.images.btnClose.width - 20, this.game.screen.canvas.height/2 - 200 + 20, 'btnClose');
    //     this.game.screen.printText(this.game.screen.canvas.width/2 - 90, this.game.screen.canvas.height/2 - 200 +  this.game.screen.images.btnClose.height + 60, 'Привет, я Лама!');
    //     this.game.screen.printText(this.game.screen.canvas.width/2 - 225, this.game.screen.canvas.height/2 - 200 + this.game.screen.images.btnClose.height + 100, 'Нажимай пробел для прыжка и помни,');
    //     this.game.screen.printText(this.game.screen.canvas.width/2 - 160, this.game.screen.canvas.height/2 - 200 + this.game.screen.images.btnClose.height + 140, 'что через пять столкновений');
    //     this.game.screen.printText(this.game.screen.canvas.width/2 - 40, this.game.screen.canvas.height/2 - 200 + this.game.screen.images.btnClose.height + 180, 'я засну.');
    //     this.game.screen.printText(this.game.screen.canvas.width/2 - 210, this.game.screen.canvas.height/2 - 200 + this.game.screen.images.btnClose.height + 220, 'Тогда придётся начать путь заново!');
    // }

  }, {
    key: "renderClouds",
    value: function renderClouds() {
      this.game.screen.drawScaleImage('sky1', this.position.x, 20, 0, 0, 301, 181, 180, 100);
      this.game.screen.drawScaleImage('sky2', this.position.x - 20, this.game.screen.images.sky1.height, 0, 0, 225, 120, 150, 80);
      this.game.screen.drawScaleImage('sky3', this.position.x - 20 + this.game.screen.images.sky1.width, this.game.screen.images.sky1.height - 40, 0, 0, 177, 100, 142, 80);
      this.position.x < 0 - this.game.screen.images.sky1.width - this.game.screen.images.sky2.width - this.game.screen.images.sky3.width - 160 ? this.position.x = this.game.screen.canvas.width : this.position.x -= 2;
    } // отрисовка земли и деревьев

  }, {
    key: "renderBottomGround",
    value: function renderBottomGround() {
      if (this.position1.x >= 0) {
        this.position1.x -= 30;
      }

      this.game.screen.drawImage(this.position1.x, this.game.screen.canvas.height - this.game.screen.images.tree1.height, 'tree1');
      this.game.screen.drawImage(this.position1.x, this.game.screen.canvas.height - this.game.screen.images.ground.height, 'ground');
    }
  }, {
    key: "render",
    value: function render(time) {
      this.update(time);
      this.game.screen.drawImageFullScreen(0, 0, 'bg1');
      this.game.screen.drawImageRotated('sun', this.game.screen.canvas.width / 2, this.game.screen.canvas.height, this.game.screen.changeScale('1.000', '0.800', 0.002), time / 9000);
      this.renderClouds();
      this.renderBottomGround();

      if (this.position1.x < 0) {
        this.game.screen.drawSprite(this.player.view);

        if (this.player.x <= this.game.screen.canvas.width / 2 - this.player.view.width) {
          this.player.x += 2;
        } else {
          this.modal.style.display = "block";
          this.showModalStart();
        }
      }
    }
  }]);

  return PreStart;
}(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene);

/***/ }),

/***/ "./js/scenes/running-desctop.js":
/*!**************************************!*\
  !*** ./js/scenes/running-desctop.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Running": () => (/* binding */ Running)
/* harmony export */ });
/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scene.js */ "./js/scene.js");
/* harmony import */ var _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sprite-sheet.js */ "./js/sprite-sheet.js");
/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../player.js */ "./js/player.js");
/* harmony import */ var _obstacle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../obstacle.js */ "./js/obstacle.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math.js */ "./js/math.js");
/* harmony import */ var _flyElement__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../flyElement */ "./js/flyElement.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







var Running = /*#__PURE__*/function (_Scene) {
  _inherits(Running, _Scene);

  var _super = _createSuper(Running);

  function Running(game) {
    var _this;

    _classCallCheck(this, Running);

    _this = _super.call(this, game);
    _this.tiles = new _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__.SpriteSheet({
      imageName: 'tiles',
      imageWidth: _this.game.width,
      imageHeight: _this.game.height
    });
    _this.position = {
      x: _this.game.screen.canvas.width,
      y: 0
    };
    _this.position1 = {
      x: 0,
      y: 0
    };
    _this.positionText = {
      x: _this.game.screen.canvas.width,
      y: 0
    };
    _this.positionGround = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionGround1 = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionTree = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionTree1 = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionMoon = {
      x: _this.game.screen.canvas.width,
      y: _this.game.screen.canvas.height / 2
    };
    _this.backgrounds = ['bg1', 'bg2', 'bg3', 'bg4', 'bg5'];
    _this.opacity = 0;
    _this.isCollide = false;
    _this.backgroundsTree = ['tree1', 'tree2', 'tree3', 'tree4', 'tree5'];
    _this.duration = 200;
    _this.obstacles = [];
    _this.count = 0;
    _this.hit = false;
    _this.lastTime = 0;
    _this.duration = 5000;
    _this.bird = new _flyElement__WEBPACK_IMPORTED_MODULE_5__.FlyElement(_this.game.screen.canvas.width, 200, 'bird', 400, 100, 100, 100);
    _this.bird.x = _this.game.screen.canvas.width;
    _this.bird.y = 200;
    _this.mouse = new _flyElement__WEBPACK_IMPORTED_MODULE_5__.FlyElement(_this.game.screen.canvas.width, 200, 'mouse', 500, 100, 100, 100, true);
    _this.mouse.x = 0;
    _this.mouse.y = 200;
    _this.collideText = ['collideText1', 'collideText2', 'collideText3', 'collideText4'];
    _this.countText = ['countText1', 'countText2', 'countText3', 'countText4'];
    _this.imgText = 'collideText1';
    _this.isAddCount = false;
    _this.lastTimeCountText = 0;
    _this.sunHeight = _this.game.screen.canvas.height;
    _this.isSunRays = false;
    _this.crashAudios = ['crash1', 'crash2'];
    _this.player = new _player_js__WEBPACK_IMPORTED_MODULE_2__.Player(_this.game.control);
    _this.player.x = _this.game.screen.canvas.width / 2 - _this.player.view.width;
    _this.startPosXCountText = innerWidth > 700 ? 20 : (700 - innerWidth) / 2 + 20;
    return _this;
  }

  _createClass(Running, [{
    key: "init",
    value: function init() {
      _get(_getPrototypeOf(Running.prototype), "init", this).call(this);

      this.addNewObstacle();
      this.game.isRetry = false;
      this.player.deadCount = 0;

      if (!this.game.isMute) {
        this.player.jumpAudio = this.game.screen.audios.jump;
      }

      this.player.view.x = this.game.screen.canvas.width / 2 - this.player.view.width;
      this.player.view.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - this.player.view.height;
      this.player.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - this.player.view.height;
      this.player.startPosY = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - this.player.view.height;
      this.bird.view.x = this.game.screen.canvas.width;
      this.bird.view.y = 200;
      this.mouse.view.x = 0;
      this.mouse.view.y = 200;
      this.positionGround.y = this.game.screen.canvas.height - this.game.screen.images.ground.height;
      this.positionGround1.y = this.game.screen.canvas.height - this.game.screen.images.ground.height;
      this.positionGround1.x = this.game.screen.images.ground.width;
      this.positionTree1.x = this.game.screen.images[this.backgroundsTree[0]].width;
      this.positionTree.y = this.game.screen.canvas.height - this.game.screen.images.tree1.height;
      this.positionTree1.y = this.game.screen.canvas.height - this.game.screen.images.tree1.height;
    }
  }, {
    key: "addNewObstacle",
    value: function addNewObstacle() {
      var obs = new _obstacle_js__WEBPACK_IMPORTED_MODULE_3__.Obstacle({
        index: (0,_math_js__WEBPACK_IMPORTED_MODULE_4__.getRandomInt)(1, 36)
      });
      obs.x = this.game.screen.canvas.width;
      obs.view.x = this.game.screen.canvas.width;
      obs.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - obs.view.height;
      obs.view.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - obs.view.height;
      this.obstacles.push(obs);
    }
  }, {
    key: "collide",
    value: function collide(time) {
      var audio = this.crashAudios[Math.floor(Math.random() * 2)];
      this.game.screen.audios[audio].play();
      this.isCollide = true;

      if (this.player.deadCount + 1 < 4) {
        this.imgText = this.collideText[Math.floor(Math.random() * 4)];
      } else if (this.player.deadCount + 1 === 4) {
        this.imgText = 'sleepText';
      } else {
        this.isCollide = false;
        this.imgText = 'sleepText';
      }

      this.lastTimeCountText = time;
    }
  }, {
    key: "addCount",
    value: function addCount(time) {
      this.count++;
      this.imgText = this.countText[Math.floor(Math.random() * 4)];
      this.isAddCount = true;
      this.lastTimeCountText = time;
    }
  }, {
    key: "update",
    value: function update(time) {
      var _this2 = this;

      this.player.update(time);
      this.bird.update(time);

      if (this.player.deadCount >= 4) {
        this.mouse.update(time);
      }

      if (this.lastTime === 0) {
        this.lastTime = time;
        return;
      }

      if (this.lastTimeCountText === 0) {
        this.lastTimeCountText = time;
        return;
      } // добавление нового препятсвия, через время не меньше времени duration


      if (time - this.lastTime > this.duration) {
        // добавить проверку у обсталес из нот стопед
        this.addNewObstacle();
        this.lastTime = time;
        this.duration = (0,_math_js__WEBPACK_IMPORTED_MODULE_4__.getRandomInt)(1200, 4500);
      }

      this.obstacles.forEach(function (i) {
        _this2.hit = _this2.player.collide(i, _this2.obstacles, _this2.deadCount);

        if (i.dead) {
          var index = _this2.obstacles.indexOf(i);

          _this2.obstacles.splice(index, 1);
        }

        if (_this2.hit) {
          _this2.collide(time);

          return;
        } else {
          if (i.dead && !i.isCrash) {
            _this2.addCount(time);
          }

          i.update(time);
        }
      }); // при столкновении меняем фон и деревья

      if (this.isCollide) {
        if (this.opacity <= 1) {
          this.opacity += 0.01;
        } else if (this.backgrounds.length > 2) {
          this.backgrounds.shift();
          this.backgroundsTree.shift();
          this.isCollide = false;
          this.opacity = 0;
        } else {
          this.isCollide = false;
        }
      }

      if (this.player.deadCount >= 5) {
        this.game.count = this.count;
        this.finish(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene.GAME_OVER);
      }

      if (time - this.lastTimeCountText > 1400) {
        this.isAddCount = false;
      }
    }
  }, {
    key: "renderClouds",
    value: function renderClouds() {
      this.game.screen.drawScaleImage('sky1', this.position.x, 20, 0, 0, 301, 181, 180, 100);
      this.game.screen.drawScaleImage('sky2', this.position.x - 20, this.game.screen.images.sky1.height, 0, 0, 225, 120, 150, 80);
      this.game.screen.drawScaleImage('sky3', this.position.x - 20 + this.game.screen.images.sky1.width, this.game.screen.images.sky1.height - 40, 0, 0, 177, 100, 142, 80);
      this.position.x < 0 - this.game.screen.images.sky1.width - this.game.screen.images.sky2.width - this.game.screen.images.sky3.width - 160 ? this.position.x = this.game.screen.canvas.width : this.position.x -= 2;
    }
  }, {
    key: "renderMoon",
    value: function renderMoon() {
      if (this.player.deadCount >= 4) {
        if (this.positionMoon.x > this.game.screen.canvas.width / 2 + 40) {
          this.positionMoon.x -= 1;
        }

        if (this.positionMoon.y > 50) {
          this.positionMoon.y -= 1;
        }

        this.game.screen.drawImage(this.positionMoon.x, this.positionMoon.y, 'moon');
      }
    }
  }, {
    key: "renderSun",
    value: function renderSun(time) {
      if (this.player.deadCount <= 5) {
        if (this.player.deadCount === 3 && this.sunHeight < this.game.screen.canvas.height + 100) {
          this.sunHeight += 1;
          this.isSunRays = true;
        }

        if (this.player.deadCount >= 4 && this.sunHeight < 1200) {
          this.sunHeight += 1;
        }

        this.isSunRays ? this.game.screen.drawImageRotated('sunBlur', this.game.screen.canvas.width / 2, this.sunHeight, this.game.screen.changeScale('1.000', '0.800', 0.002), time / 9000) : this.game.screen.drawImageRotated('sun', this.game.screen.canvas.width / 2, this.sunHeight, this.game.screen.changeScale('1.000', '0.800', 0.002), time / 9000);
      }
    }
  }, {
    key: "renderCountCloudText",
    value: function renderCountCloudText() {
      if (this.isAddCount || this.isCollide) {
        if (this.positionText.x >= this.game.screen.canvas.width / 2) {
          this.positionText.x -= 10;
        }

        this.game.screen.drawImage(this.positionText.x - this.game.screen.images.cloudText.width / 2, this.game.screen.canvas.height / 4 - this.game.screen.images.cloudText.height / 2, 'cloudText');
        this.game.screen.drawImage(this.positionText.x - this.game.screen.images[this.imgText].width / 2, this.game.screen.canvas.height / 4 - this.game.screen.images[this.imgText].height / 2, this.imgText);
      } else {
        this.positionText.x = this.game.screen.canvas.width;
      }
    }
  }, {
    key: "render",
    value: function render(time) {
      var _this3 = this;

      this.update(time); // плавная смена фона

      this.game.screen.context.globalAlpha = 1 - this.opacity;
      this.game.screen.drawImageFullScreen(0, 0, this.backgrounds[0]);
      this.game.screen.context.globalAlpha = this.opacity;
      this.game.screen.drawImageFullScreen(0, 0, this.backgrounds[1]);
      this.game.screen.context.globalAlpha = 1;
      this.renderMoon();
      this.renderSun(time); // плавная смена деревьев

      this.game.screen.context.globalAlpha = 1 - this.opacity;
      this.game.screen.drawImage(this.positionTree.x, this.positionTree.y, this.backgroundsTree[0]);
      this.game.screen.drawImage(this.positionTree1.x, this.positionTree1.y, this.backgroundsTree[0]);
      this.game.screen.context.globalAlpha = this.opacity;
      this.game.screen.drawImage(this.positionTree.x, this.positionTree.y, this.backgroundsTree[1]);
      this.game.screen.drawImage(this.positionTree1.x, this.positionTree1.y, this.backgroundsTree[1]); // теперь проверим, не ушел ли объект фона «за кадр»

      if (this.positionTree.x + this.game.screen.images[this.backgroundsTree[1]].width < 0) {
        // если ушел
        this.positionTree.x = this.positionTree1.x + this.game.screen.images[this.backgroundsTree[1]].width; // перемещаем его сразу за вторым
      } // аналогично для второго


      if (this.positionTree1.x + this.game.screen.images[this.backgroundsTree[1]].width < 0) {
        // если ушел
        this.positionTree1.x = this.positionTree.x + this.game.screen.images[this.backgroundsTree[1]].width; // перемещаем его сразу за вторым
      }

      this.game.screen.context.globalAlpha = 1;
      this.game.screen.drawImage(this.positionGround.x, this.positionGround.y, 'ground');
      this.game.screen.drawImage(this.positionGround1.x, this.positionGround.y, 'ground');

      if (!this.isCollide) {
        this.positionGround.x -= 2;
        this.positionGround1.x -= 2;
        this.positionTree.x -= 1;
        this.positionTree1.x -= 1; // теперь проверим, не ушел ли объект фона «за кадр»

        if (this.positionGround.x + this.game.screen.images.ground.width < 0) {
          // если ушел
          this.positionGround.x = this.positionGround1.x + this.game.screen.images.ground.width; // перемещаем его сразу за вторым
        } // аналогично для второго


        if (this.positionGround1.x + this.game.screen.images.ground.width < 0) {
          this.positionGround1.x = this.positionGround.x + this.game.screen.images.ground.width; // позиционируем за первым
        }
      } // отрисовка элементов неба(облака, птичка, мышь)


      if (this.player.deadCount <= 2) {
        this.renderClouds();
        this.game.screen.drawSprite(this.bird.view);
      } else if (this.player.deadCount >= 4) {
        this.game.screen.drawSprite(this.mouse.view);
      } // отрисовка розовых облаков с текстом при столкновении или удачном перепрыгивании


      this.renderCountCloudText();
      this.game.screen.drawSprite(this.player.view); // отрисовка препятсвий

      this.obstacles.forEach(function (i) {
        _this3.game.screen.drawSprite(i.view);
      });
      this.game.screen.drawImage(this.startPosXCountText, 20, 'textCount');
      this.game.screen.printText(this.startPosXCountText + this.game.screen.images.textCount.width + 20, this.game.screen.images.textCount.height + 12, this.count, '24px');
    }
  }]);

  return Running;
}(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene);

/***/ }),

/***/ "./js/scenes/running.js":
/*!******************************!*\
  !*** ./js/scenes/running.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Running": () => (/* binding */ Running)
/* harmony export */ });
/* harmony import */ var _scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../scene.js */ "./js/scene.js");
/* harmony import */ var _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sprite-sheet.js */ "./js/sprite-sheet.js");
/* harmony import */ var _player_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../player.js */ "./js/player.js");
/* harmony import */ var _obstacle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../obstacle.js */ "./js/obstacle.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math.js */ "./js/math.js");
/* harmony import */ var _flyElement__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../flyElement */ "./js/flyElement.js");
function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf(object); if (object === null) break; } return object; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }







var Running = /*#__PURE__*/function (_Scene) {
  _inherits(Running, _Scene);

  var _super = _createSuper(Running);

  function Running(game) {
    var _this;

    _classCallCheck(this, Running);

    _this = _super.call(this, game);
    _this.tiles = new _sprite_sheet_js__WEBPACK_IMPORTED_MODULE_1__.SpriteSheet({
      imageName: 'tiles',
      imageWidth: _this.game.width,
      imageHeight: _this.game.height
    });
    _this.position = {
      x: _this.game.screen.canvas.width,
      y: 0
    };
    _this.position1 = {
      x: 0,
      y: 0
    };
    _this.positionText = {
      x: _this.game.screen.canvas.width,
      y: 0
    };
    _this.positionGround = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionGround1 = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionTree = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionTree1 = {
      x: 0,
      y: _this.game.screen.canvas.height
    };
    _this.positionMoon = {
      x: _this.game.screen.canvas.width,
      y: _this.game.screen.canvas.height / 2
    };
    _this.backgrounds = ['bg1', 'bg2', 'bg3', 'bg4', 'bg5'];
    _this.opacity = 0;
    _this.isCollide = false;
    _this.backgroundsTree = ['tree1', 'tree2', 'tree3', 'tree4', 'tree5'];
    _this.duration = 200;
    _this.obstacles = [];
    _this.count = 0;
    _this.hit = false;
    _this.lastTime = 0;
    _this.duration = 5000;
    _this.bird = new _flyElement__WEBPACK_IMPORTED_MODULE_5__.FlyElement(_this.game.screen.canvas.width, 200, 'bird', 400, 100, 100, 100);
    _this.bird.x = _this.game.screen.canvas.width;
    _this.bird.y = 200;
    _this.mouse = new _flyElement__WEBPACK_IMPORTED_MODULE_5__.FlyElement(_this.game.screen.canvas.width, 200, 'mouse', 500, 100, 100, 100, true);
    _this.mouse.x = 0;
    _this.mouse.y = 200;
    _this.collideText = ['collideText1', 'collideText2', 'collideText3', 'collideText4'];
    _this.countText = ['countText1', 'countText2', 'countText3', 'countText4'];
    _this.imgText = 'collideText1';
    _this.isAddCount = false;
    _this.lastTimeCountText = 0;
    _this.sunHeight = _this.game.screen.canvas.height;
    _this.isSunRays = false;
    _this.crashAudios = ['crash1', 'crash2'];
    _this.player = new _player_js__WEBPACK_IMPORTED_MODULE_2__.Player(_this.game.control);
    _this.player.x = 150;
    _this.startPosXCountText = innerWidth > 700 ? 20 : (700 - innerWidth) / 2 + 20;
    return _this;
  }

  _createClass(Running, [{
    key: "init",
    value: function init() {
      _get(_getPrototypeOf(Running.prototype), "init", this).call(this);

      this.addNewObstacle();
      this.game.isRetry = false;
      this.player.deadCount = 0;

      if (!this.game.isMute) {
        this.player.jumpAudio = this.game.screen.audios.jump;
      }

      this.player.view.x = 150;
      this.player.view.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - this.player.view.height;
      this.player.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - this.player.view.height;
      this.player.startPosY = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - this.player.view.height;
      this.bird.view.x = this.game.screen.canvas.width;
      this.bird.view.y = 200;
      this.mouse.view.x = 0;
      this.mouse.view.y = 200;
      this.positionGround.y = this.game.screen.canvas.height - this.game.screen.images.ground.height;
      this.positionGround1.y = this.game.screen.canvas.height - this.game.screen.images.ground.height;
      this.positionGround1.x = this.game.screen.images.ground.width;
      this.positionTree1.x = this.game.screen.images[this.backgroundsTree[0]].width;
      this.positionTree.y = this.game.screen.canvas.height - this.game.screen.images.tree1.height;
      this.positionTree1.y = this.game.screen.canvas.height - this.game.screen.images.tree1.height;
    }
  }, {
    key: "addNewObstacle",
    value: function addNewObstacle() {
      var obs = new _obstacle_js__WEBPACK_IMPORTED_MODULE_3__.Obstacle({
        index: (0,_math_js__WEBPACK_IMPORTED_MODULE_4__.getRandomInt)(1, 36)
      });
      obs.x = this.game.screen.canvas.width;
      obs.view.x = this.game.screen.canvas.width;
      obs.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - obs.view.height;
      obs.view.y = this.game.screen.canvas.height - this.game.screen.images.ground.height / 2 - obs.view.height;
      this.obstacles.push(obs);
    }
  }, {
    key: "collide",
    value: function collide(time) {
      var audio = this.crashAudios[Math.floor(Math.random() * 2)];
      this.game.screen.audios[audio].play();
      this.isCollide = true;

      if (this.player.deadCount + 1 < 4) {
        this.imgText = this.collideText[Math.floor(Math.random() * 4)];
      } else if (this.player.deadCount + 1 === 4) {
        this.imgText = 'sleepText';
      } else {
        this.isCollide = false;
        this.imgText = 'sleepText';
      }

      this.lastTimeCountText = time;
    }
  }, {
    key: "addCount",
    value: function addCount(time) {
      this.count++;
      this.imgText = this.countText[Math.floor(Math.random() * 4)];
      this.isAddCount = true;
      this.lastTimeCountText = time;
    }
  }, {
    key: "update",
    value: function update(time) {
      var _this2 = this;

      this.player.update(time);
      this.bird.update(time);

      if (this.player.deadCount >= 4) {
        this.mouse.update(time);
      }

      if (this.lastTime === 0) {
        this.lastTime = time;
        return;
      }

      if (this.lastTimeCountText === 0) {
        this.lastTimeCountText = time;
        return;
      } // добавление нового препятсвия, через время не меньше времени duration


      if (time - this.lastTime > this.duration) {
        // добавить проверку у обсталес из нот стопед
        this.addNewObstacle();
        this.lastTime = time;
        this.duration = (0,_math_js__WEBPACK_IMPORTED_MODULE_4__.getRandomInt)(1200, 4500);
      }

      this.obstacles.forEach(function (i) {
        _this2.hit = _this2.player.collide(i, _this2.obstacles, _this2.deadCount);

        if (i.dead) {
          var index = _this2.obstacles.indexOf(i);

          _this2.obstacles.splice(index, 1);
        }

        if (_this2.hit) {
          _this2.collide(time);

          return;
        } else {
          if (i.dead && !i.isCrash) {
            _this2.addCount(time);
          }

          i.update(time);
        }
      }); // при столкновении меняем фон и деревья

      if (this.isCollide) {
        if (this.opacity <= 1) {
          this.opacity += 0.01;
        } else if (this.backgrounds.length > 2) {
          this.backgrounds.shift();
          this.backgroundsTree.shift();
          this.isCollide = false;
          this.opacity = 0;
        } else {
          this.isCollide = false;
        }
      }

      if (this.player.deadCount >= 5) {
        this.game.count = this.count;
        this.finish(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene.GAME_OVER);
      }

      if (time - this.lastTimeCountText > 1400) {
        this.isAddCount = false;
      }
    }
  }, {
    key: "renderClouds",
    value: function renderClouds() {
      this.game.screen.drawScaleImage('sky1', this.position.x, 20, 0, 0, 301, 181, 180, 100);
      this.game.screen.drawScaleImage('sky2', this.position.x - 20, this.game.screen.images.sky1.height, 0, 0, 225, 120, 150, 80);
      this.game.screen.drawScaleImage('sky3', this.position.x - 20 + this.game.screen.images.sky1.width, this.game.screen.images.sky1.height - 40, 0, 0, 177, 100, 142, 80);
      this.position.x < 0 - this.game.screen.images.sky1.width - this.game.screen.images.sky2.width - this.game.screen.images.sky3.width - 160 ? this.position.x = this.game.screen.canvas.width : this.position.x -= 2;
    }
  }, {
    key: "renderMoon",
    value: function renderMoon() {
      if (this.player.deadCount >= 4) {
        if (this.positionMoon.x > this.game.screen.canvas.width / 2 + 40) {
          this.positionMoon.x -= 1;
        }

        if (this.positionMoon.y > 50) {
          this.positionMoon.y -= 1;
        }

        this.game.screen.drawImage(this.positionMoon.x, this.positionMoon.y, 'moon');
      }
    }
  }, {
    key: "renderSun",
    value: function renderSun(time) {
      if (this.player.deadCount <= 5) {
        if (this.player.deadCount === 3 && this.sunHeight < this.game.screen.canvas.height + 100) {
          this.sunHeight += 1;
          this.isSunRays = true;
        }

        if (this.player.deadCount >= 4 && this.sunHeight < 1200) {
          this.sunHeight += 1;
        }

        this.isSunRays ? this.game.screen.drawImageRotated('sunBlur', this.game.screen.canvas.width / 2, this.sunHeight, this.game.screen.changeScale('1.000', '0.800', 0.002), time / 9000) : this.game.screen.drawImageRotated('sun', this.game.screen.canvas.width / 2, this.sunHeight, this.game.screen.changeScale('1.000', '0.800', 0.002), time / 9000);
      }
    }
  }, {
    key: "renderCountCloudText",
    value: function renderCountCloudText() {
      if (this.isAddCount || this.isCollide) {
        if (this.positionText.x >= this.game.screen.canvas.width / 2) {
          this.positionText.x -= 10;
        }

        this.game.screen.drawImage(this.positionText.x - this.game.screen.images.cloudText.width / 2, this.game.screen.canvas.height / 4 - this.game.screen.images.cloudText.height / 2, 'cloudText');
        this.game.screen.drawImage(this.positionText.x - this.game.screen.images[this.imgText].width / 2, this.game.screen.canvas.height / 4 - this.game.screen.images[this.imgText].height / 2, this.imgText);
      } else {
        this.positionText.x = this.game.screen.canvas.width;
      }
    }
  }, {
    key: "render",
    value: function render(time) {
      var _this3 = this;

      this.update(time); // плавная смена фона

      this.game.screen.context.globalAlpha = 1 - this.opacity;
      this.game.screen.drawImageFullScreen(0, 0, this.backgrounds[0]);
      this.game.screen.context.globalAlpha = this.opacity;
      this.game.screen.drawImageFullScreen(0, 0, this.backgrounds[1]);
      this.game.screen.context.globalAlpha = 1;
      this.renderMoon();
      this.renderSun(time); // плавная смена деревьев

      this.game.screen.context.globalAlpha = 1 - this.opacity;
      this.game.screen.drawImage(this.positionTree.x, this.positionTree.y, this.backgroundsTree[0]);
      this.game.screen.drawImage(this.positionTree1.x, this.positionTree1.y, this.backgroundsTree[0]);
      this.game.screen.context.globalAlpha = this.opacity;
      this.game.screen.drawImage(this.positionTree.x, this.positionTree.y, this.backgroundsTree[1]);
      this.game.screen.drawImage(this.positionTree1.x, this.positionTree1.y, this.backgroundsTree[1]); // теперь проверим, не ушел ли объект фона «за кадр»

      if (this.positionTree.x + this.game.screen.images[this.backgroundsTree[1]].width < 0) {
        // если ушел
        this.positionTree.x = this.positionTree1.x + this.game.screen.images[this.backgroundsTree[1]].width; // перемещаем его сразу за вторым
      } // аналогично для второго


      if (this.positionTree1.x + this.game.screen.images[this.backgroundsTree[1]].width < 0) {
        // если ушел
        this.positionTree1.x = this.positionTree.x + this.game.screen.images[this.backgroundsTree[1]].width; // перемещаем его сразу за вторым
      }

      this.game.screen.context.globalAlpha = 1;
      this.game.screen.drawImage(this.positionGround.x, this.positionGround.y, 'ground');
      this.game.screen.drawImage(this.positionGround1.x, this.positionGround.y, 'ground');

      if (!this.isCollide) {
        this.positionGround.x -= 2;
        this.positionGround1.x -= 2;
        this.positionTree.x -= 1;
        this.positionTree1.x -= 1; // теперь проверим, не ушел ли объект фона «за кадр»

        if (this.positionGround.x + this.game.screen.images.ground.width < 0) {
          // если ушел
          this.positionGround.x = this.positionGround1.x + this.game.screen.images.ground.width; // перемещаем его сразу за вторым
        } // аналогично для второго


        if (this.positionGround1.x + this.game.screen.images.ground.width < 0) {
          this.positionGround1.x = this.positionGround.x + this.game.screen.images.ground.width; // позиционируем за первым
        }
      } // отрисовка элементов неба(облака, птичка, мышь)


      if (this.player.deadCount <= 2) {
        this.renderClouds();
        this.game.screen.drawSprite(this.bird.view);
      } else if (this.player.deadCount >= 4) {
        this.game.screen.drawSprite(this.mouse.view);
      } // отрисовка розовых облаков с текстом при столкновении или удачном перепрыгивании


      this.renderCountCloudText();
      this.game.screen.drawSprite(this.player.view); // отрисовка препятсвий

      this.obstacles.forEach(function (i) {
        _this3.game.screen.drawSprite(i.view);
      });
      this.game.screen.drawImage(this.startPosXCountText, 20, 'textCount');
      this.game.screen.printText(this.startPosXCountText + this.game.screen.images.textCount.width + 20, this.game.screen.images.textCount.height + 12, this.count, '24px');
    }
  }]);

  return Running;
}(_scene_js__WEBPACK_IMPORTED_MODULE_0__.Scene);

/***/ }),

/***/ "./js/screen-desctop.js":
/*!******************************!*\
  !*** ./js/screen-desctop.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Screen": () => (/* binding */ Screen)
/* harmony export */ });
/* harmony import */ var _image_loader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./image-loader.js */ "./js/image-loader.js");
/* harmony import */ var _sprite_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sprite.js */ "./js/sprite.js");
/* harmony import */ var _js_audio_loader__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/js/audio-loader */ "./js/audio-loader.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }




var Screen = /*#__PURE__*/function () {
  function Screen(width, height) {
    _classCallCheck(this, Screen);

    this.width = width;
    this.height = height;
    this.canvas = this.createCanvas(width, height);
    this.context = this.canvas.getContext('2d');
    this.images = {};
    this.isImagesLoaded = false;
    this.scale = 1.000;
    this.isChangeScale = false;
    this.audios = {};
    this.isAudiosLoaded = false;
  }

  _createClass(Screen, [{
    key: "createCanvas",
    value: function createCanvas(width, height) {
      var elements = document.getElementsByTagName('canvas');
      var canvas = elements[0] || document.createElement('canvas');
      document.body.appendChild(canvas);
      canvas.width = width;
      canvas.height = height; // const ratio = innerWidth/innerHeight;
      // canvas.width = innerHeight*ratio;
      // canvas.height = innerHeight;

      return canvas;
    }
  }, {
    key: "createMap",
    value: function createMap(name, tileSet) {
      var mapImage = document.createElement('canvas'); // если будет тайловая карта в формате json
      // mapImage.width = mapData.width * mapData.tileWidth;
      // mapImage.height = mapData.height * mapData.tileHeight;
      // сейчас это просто картинка

      mapImage.width = tileSet.imageWidth;
      mapImage.height = tileSet.imageHeight;
      var mapContext = mapImage.getContext('2d');
      mapContext.drawImage(this.images[tileSet.imageName], 0, 0, mapImage.width, mapImage.height);
      this.images[name] = mapImage;
      return new _sprite_js__WEBPACK_IMPORTED_MODULE_1__.Sprite({
        imageName: name,
        sourceX: 0,
        sourceY: 0,
        width: mapImage.width,
        height: mapImage.height
      });
    }
  }, {
    key: "fill",
    value: function fill(color) {
      this.context.fillStyle = '#000000';
      this.context.fillRect(0, 0, this.width, this.height);
    }
  }, {
    key: "loadImages",
    value: function loadImages(imageFiles) {
      var _this = this;

      var f = new FontFace('Comic', 'url(fonts/Comic.woff2)');
      f.load();
      var loader = new _image_loader_js__WEBPACK_IMPORTED_MODULE_0__.ImageLoader(imageFiles);
      loader.load().then(function (names) {
        _this.images = Object.assign(_this.images, loader.images);
        _this.isImagesLoaded = true;
      });
    }
  }, {
    key: "loadAudio",
    value: function loadAudio(audioFiles) {
      var _this2 = this;

      var audioLoader = new _js_audio_loader__WEBPACK_IMPORTED_MODULE_2__.AudioLoader(audioFiles);
      audioLoader.load().then(function () {
        _this2.audios = Object.assign(_this2.audios, audioLoader.audios);
        _this2.isAudiosLoaded = true;
      });
    }
  }, {
    key: "printText",
    value: function printText(x, y, text) {
      var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '23px';
      var color = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "#000000";
      this.context.fillStyle = color;
      this.context.font = "".concat(size, " Comic");
      this.context.fillText(text, x, y);
    }
  }, {
    key: "drawImage",
    value: function drawImage(x, y, imageName) {
      this.context.drawImage(this.images[imageName], x, y);
    }
  }, {
    key: "drawScaleImage",
    value: function drawScaleImage(imageName, x, y, sx, sy, sWidth, sHeight, dWidth, dHeight) {
      this.context.drawImage(this.images[imageName], sx, sy, sWidth, sHeight, x, y, dWidth, dHeight);
    }
  }, {
    key: "drawImageFullScreen",
    value: function drawImageFullScreen(x, y, imageName) {
      this.context.drawImage(this.images[imageName], x, y, this.canvas.width, this.canvas.height);
    }
  }, {
    key: "drawImageRotated",
    value: function drawImageRotated(imageName, x, y, scale, rot) {
      var isRotate = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;
      this.context.clearRect(0, 0, this.context.width, this.context.height);
      this.context.setTransform(scale, 0, 0, scale, x, y);

      if (isRotate) {
        this.context.rotate(rot);
      }

      this.context.drawImage(this.images[imageName], -this.images[imageName].width / 2, -this.images[imageName].height / 2);
      this.context.setTransform(1, 0, 0, 1, 0, 0);
    }
  }, {
    key: "changeScale",
    value: function changeScale(start, end, step) {
      if (this.scale.toFixed(3) === start) {
        this.isChangeScale = false;
      }

      if (this.scale.toFixed(3) === end) {
        this.isChangeScale = true;
      }

      if (this.scale.toFixed(3) <= start && !this.isChangeScale) {
        this.scale -= step;
      }

      if (this.scale.toFixed(3) >= end && this.isChangeScale) {
        this.scale += step;
      }

      return this.scale;
    }
  }, {
    key: "drawSprite",
    value: function drawSprite(sprite) {
      var spriteX = sprite.x;
      var spriteY = sprite.y;

      if (spriteX >= this.canvas.width || spriteY >= this.canvas.height || spriteX + sprite.width <= 0 || spriteY + sprite.height <= 0) {
        return;
      }

      var sourceX = sprite.sourceX + Math.abs(Math.min(0, spriteX));
      var sourceY = sprite.sourceY + Math.abs(Math.min(0, spriteY));
      var width = Math.min(this.canvas.width, spriteX + sprite.width) - Math.max(0, spriteX);
      var height = Math.min(this.canvas.height, spriteY + sprite.height) - Math.max(0, spriteY);
      this.context.drawImage(this.images[sprite.imageName], sourceX, sourceY, width, height, Math.max(0, spriteX), Math.max(0, spriteY), width, height);
    }
  }]);

  return Screen;
}();

/***/ }),

/***/ "./js/sprite-sheet.js":
/*!****************************!*\
  !*** ./js/sprite-sheet.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SpriteSheet": () => (/* binding */ SpriteSheet)
/* harmony export */ });
/* harmony import */ var _sprite_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sprite.js */ "./js/sprite.js");
/* harmony import */ var _animation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animation.js */ "./js/animation.js");
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }



var SpriteSheet = /*#__PURE__*/function () {
  function SpriteSheet(_ref) {
    var imageName = _ref.imageName,
        imageWidth = _ref.imageWidth,
        imageHeight = _ref.imageHeight,
        _ref$spriteWidth = _ref.spriteWidth,
        spriteWidth = _ref$spriteWidth === void 0 ? 64 : _ref$spriteWidth,
        _ref$spriteHeight = _ref.spriteHeight,
        spriteHeight = _ref$spriteHeight === void 0 ? 64 : _ref$spriteHeight;

    _classCallCheck(this, SpriteSheet);

    this.imageName = imageName;
    this.imageWidth = imageWidth;
    this.imageHeight = imageHeight;
    this.spriteWidth = spriteWidth;
    this.spriteHeight = spriteHeight;
  }

  _createClass(SpriteSheet, [{
    key: "getAnimation",
    value: function getAnimation(indexes, speed) {
      var _this = this;

      var repeat = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var autorun = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;
      return new _animation_js__WEBPACK_IMPORTED_MODULE_1__.Animation({
        imageName: this.imageName,
        frames: indexes.map(function (index) {
          return {
            sx: _this.getSourceX(index),
            sy: _this.getSourceY(index)
          };
        }),
        speed: speed,
        repeat: repeat,
        autorun: autorun,
        width: this.spriteWidth,
        height: this.spriteHeight
      });
    }
  }, {
    key: "getSprite",
    value: function getSprite(index) {
      return new _sprite_js__WEBPACK_IMPORTED_MODULE_0__.Sprite({
        imageName: this.imageName,
        sourceX: this.getSourceX(index),
        sourceY: this.getSourceY(index),
        width: this.spriteWidth,
        height: this.spriteHeight
      });
    }
  }, {
    key: "getSourceX",
    value: function getSourceX(index) {
      return --index * this.spriteWidth % this.imageWidth;
    }
  }, {
    key: "getSourceY",
    value: function getSourceY(index) {
      return Math.trunc(--index * this.spriteWidth / this.imageWidth) * this.spriteHeight;
    }
  }]);

  return SpriteSheet;
}();

/***/ }),

/***/ "./js/sprite.js":
/*!**********************!*\
  !*** ./js/sprite.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Sprite": () => (/* binding */ Sprite)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Sprite = /*#__PURE__*/function () {
  function Sprite(_ref) {
    var imageName = _ref.imageName,
        sourceX = _ref.sourceX,
        sourceY = _ref.sourceY,
        _ref$width = _ref.width,
        width = _ref$width === void 0 ? 64 : _ref$width,
        _ref$height = _ref.height,
        height = _ref$height === void 0 ? 64 : _ref$height;

    _classCallCheck(this, Sprite);

    this.imageName = imageName;
    this.sourceX = sourceX;
    this.sourceY = sourceY;
    this.width = width;
    this.height = height;
    this.x = 0;
    this.y = 0;
  }

  _createClass(Sprite, [{
    key: "setXY",
    value: function setXY(x, y) {
      this.x = x;
      this.y = y;
    }
  }]);

  return Sprite;
}();

/***/ }),

/***/ "./js/vector.js":
/*!**********************!*\
  !*** ./js/vector.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Vector": () => (/* binding */ Vector)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Vector = /*#__PURE__*/function () {
  function Vector(direction, speed) {
    _classCallCheck(this, Vector);

    this.setDirection(direction, speed);
  }

  _createClass(Vector, [{
    key: "setDirection",
    value: function setDirection(direction, speed) {
      this.direction = direction;
      this.speed = speed;
      this.x = 0;
      this.y = 0;

      switch (direction) {
        case "up":
          this.y = -speed;
          break;

        case "down":
          this.y = speed;
          break;

        case "right":
          this.x = speed;
          break;

        case "left":
          this.x = -speed;
          break;

        case "fly":
          this.x = this.x;
          this.y = this.y;
          break;
      }
    }
  }, {
    key: "move",
    value: function move(object, dt) {
      object.x += dt * (this.x / 1000);
      object.y += dt * (this.y / 10000);
    }
  }]);

  return Vector;
}();

/***/ }),

/***/ "../node_modules/core-js/es6/index.js":
/*!********************************************!*\
  !*** ../node_modules/core-js/es6/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../modules/es6.symbol */ "../node_modules/core-js/modules/es6.symbol.js");
__webpack_require__(/*! ../modules/es6.object.create */ "../node_modules/core-js/modules/es6.object.create.js");
__webpack_require__(/*! ../modules/es6.object.define-property */ "../node_modules/core-js/modules/es6.object.define-property.js");
__webpack_require__(/*! ../modules/es6.object.define-properties */ "../node_modules/core-js/modules/es6.object.define-properties.js");
__webpack_require__(/*! ../modules/es6.object.get-own-property-descriptor */ "../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es6.object.get-prototype-of */ "../node_modules/core-js/modules/es6.object.get-prototype-of.js");
__webpack_require__(/*! ../modules/es6.object.keys */ "../node_modules/core-js/modules/es6.object.keys.js");
__webpack_require__(/*! ../modules/es6.object.get-own-property-names */ "../node_modules/core-js/modules/es6.object.get-own-property-names.js");
__webpack_require__(/*! ../modules/es6.object.freeze */ "../node_modules/core-js/modules/es6.object.freeze.js");
__webpack_require__(/*! ../modules/es6.object.seal */ "../node_modules/core-js/modules/es6.object.seal.js");
__webpack_require__(/*! ../modules/es6.object.prevent-extensions */ "../node_modules/core-js/modules/es6.object.prevent-extensions.js");
__webpack_require__(/*! ../modules/es6.object.is-frozen */ "../node_modules/core-js/modules/es6.object.is-frozen.js");
__webpack_require__(/*! ../modules/es6.object.is-sealed */ "../node_modules/core-js/modules/es6.object.is-sealed.js");
__webpack_require__(/*! ../modules/es6.object.is-extensible */ "../node_modules/core-js/modules/es6.object.is-extensible.js");
__webpack_require__(/*! ../modules/es6.object.assign */ "../node_modules/core-js/modules/es6.object.assign.js");
__webpack_require__(/*! ../modules/es6.object.is */ "../node_modules/core-js/modules/es6.object.is.js");
__webpack_require__(/*! ../modules/es6.object.set-prototype-of */ "../node_modules/core-js/modules/es6.object.set-prototype-of.js");
__webpack_require__(/*! ../modules/es6.object.to-string */ "../node_modules/core-js/modules/es6.object.to-string.js");
__webpack_require__(/*! ../modules/es6.function.bind */ "../node_modules/core-js/modules/es6.function.bind.js");
__webpack_require__(/*! ../modules/es6.function.name */ "../node_modules/core-js/modules/es6.function.name.js");
__webpack_require__(/*! ../modules/es6.function.has-instance */ "../node_modules/core-js/modules/es6.function.has-instance.js");
__webpack_require__(/*! ../modules/es6.parse-int */ "../node_modules/core-js/modules/es6.parse-int.js");
__webpack_require__(/*! ../modules/es6.parse-float */ "../node_modules/core-js/modules/es6.parse-float.js");
__webpack_require__(/*! ../modules/es6.number.constructor */ "../node_modules/core-js/modules/es6.number.constructor.js");
__webpack_require__(/*! ../modules/es6.number.to-fixed */ "../node_modules/core-js/modules/es6.number.to-fixed.js");
__webpack_require__(/*! ../modules/es6.number.to-precision */ "../node_modules/core-js/modules/es6.number.to-precision.js");
__webpack_require__(/*! ../modules/es6.number.epsilon */ "../node_modules/core-js/modules/es6.number.epsilon.js");
__webpack_require__(/*! ../modules/es6.number.is-finite */ "../node_modules/core-js/modules/es6.number.is-finite.js");
__webpack_require__(/*! ../modules/es6.number.is-integer */ "../node_modules/core-js/modules/es6.number.is-integer.js");
__webpack_require__(/*! ../modules/es6.number.is-nan */ "../node_modules/core-js/modules/es6.number.is-nan.js");
__webpack_require__(/*! ../modules/es6.number.is-safe-integer */ "../node_modules/core-js/modules/es6.number.is-safe-integer.js");
__webpack_require__(/*! ../modules/es6.number.max-safe-integer */ "../node_modules/core-js/modules/es6.number.max-safe-integer.js");
__webpack_require__(/*! ../modules/es6.number.min-safe-integer */ "../node_modules/core-js/modules/es6.number.min-safe-integer.js");
__webpack_require__(/*! ../modules/es6.number.parse-float */ "../node_modules/core-js/modules/es6.number.parse-float.js");
__webpack_require__(/*! ../modules/es6.number.parse-int */ "../node_modules/core-js/modules/es6.number.parse-int.js");
__webpack_require__(/*! ../modules/es6.math.acosh */ "../node_modules/core-js/modules/es6.math.acosh.js");
__webpack_require__(/*! ../modules/es6.math.asinh */ "../node_modules/core-js/modules/es6.math.asinh.js");
__webpack_require__(/*! ../modules/es6.math.atanh */ "../node_modules/core-js/modules/es6.math.atanh.js");
__webpack_require__(/*! ../modules/es6.math.cbrt */ "../node_modules/core-js/modules/es6.math.cbrt.js");
__webpack_require__(/*! ../modules/es6.math.clz32 */ "../node_modules/core-js/modules/es6.math.clz32.js");
__webpack_require__(/*! ../modules/es6.math.cosh */ "../node_modules/core-js/modules/es6.math.cosh.js");
__webpack_require__(/*! ../modules/es6.math.expm1 */ "../node_modules/core-js/modules/es6.math.expm1.js");
__webpack_require__(/*! ../modules/es6.math.fround */ "../node_modules/core-js/modules/es6.math.fround.js");
__webpack_require__(/*! ../modules/es6.math.hypot */ "../node_modules/core-js/modules/es6.math.hypot.js");
__webpack_require__(/*! ../modules/es6.math.imul */ "../node_modules/core-js/modules/es6.math.imul.js");
__webpack_require__(/*! ../modules/es6.math.log10 */ "../node_modules/core-js/modules/es6.math.log10.js");
__webpack_require__(/*! ../modules/es6.math.log1p */ "../node_modules/core-js/modules/es6.math.log1p.js");
__webpack_require__(/*! ../modules/es6.math.log2 */ "../node_modules/core-js/modules/es6.math.log2.js");
__webpack_require__(/*! ../modules/es6.math.sign */ "../node_modules/core-js/modules/es6.math.sign.js");
__webpack_require__(/*! ../modules/es6.math.sinh */ "../node_modules/core-js/modules/es6.math.sinh.js");
__webpack_require__(/*! ../modules/es6.math.tanh */ "../node_modules/core-js/modules/es6.math.tanh.js");
__webpack_require__(/*! ../modules/es6.math.trunc */ "../node_modules/core-js/modules/es6.math.trunc.js");
__webpack_require__(/*! ../modules/es6.string.from-code-point */ "../node_modules/core-js/modules/es6.string.from-code-point.js");
__webpack_require__(/*! ../modules/es6.string.raw */ "../node_modules/core-js/modules/es6.string.raw.js");
__webpack_require__(/*! ../modules/es6.string.trim */ "../node_modules/core-js/modules/es6.string.trim.js");
__webpack_require__(/*! ../modules/es6.string.iterator */ "../node_modules/core-js/modules/es6.string.iterator.js");
__webpack_require__(/*! ../modules/es6.string.code-point-at */ "../node_modules/core-js/modules/es6.string.code-point-at.js");
__webpack_require__(/*! ../modules/es6.string.ends-with */ "../node_modules/core-js/modules/es6.string.ends-with.js");
__webpack_require__(/*! ../modules/es6.string.includes */ "../node_modules/core-js/modules/es6.string.includes.js");
__webpack_require__(/*! ../modules/es6.string.repeat */ "../node_modules/core-js/modules/es6.string.repeat.js");
__webpack_require__(/*! ../modules/es6.string.starts-with */ "../node_modules/core-js/modules/es6.string.starts-with.js");
__webpack_require__(/*! ../modules/es6.string.anchor */ "../node_modules/core-js/modules/es6.string.anchor.js");
__webpack_require__(/*! ../modules/es6.string.big */ "../node_modules/core-js/modules/es6.string.big.js");
__webpack_require__(/*! ../modules/es6.string.blink */ "../node_modules/core-js/modules/es6.string.blink.js");
__webpack_require__(/*! ../modules/es6.string.bold */ "../node_modules/core-js/modules/es6.string.bold.js");
__webpack_require__(/*! ../modules/es6.string.fixed */ "../node_modules/core-js/modules/es6.string.fixed.js");
__webpack_require__(/*! ../modules/es6.string.fontcolor */ "../node_modules/core-js/modules/es6.string.fontcolor.js");
__webpack_require__(/*! ../modules/es6.string.fontsize */ "../node_modules/core-js/modules/es6.string.fontsize.js");
__webpack_require__(/*! ../modules/es6.string.italics */ "../node_modules/core-js/modules/es6.string.italics.js");
__webpack_require__(/*! ../modules/es6.string.link */ "../node_modules/core-js/modules/es6.string.link.js");
__webpack_require__(/*! ../modules/es6.string.small */ "../node_modules/core-js/modules/es6.string.small.js");
__webpack_require__(/*! ../modules/es6.string.strike */ "../node_modules/core-js/modules/es6.string.strike.js");
__webpack_require__(/*! ../modules/es6.string.sub */ "../node_modules/core-js/modules/es6.string.sub.js");
__webpack_require__(/*! ../modules/es6.string.sup */ "../node_modules/core-js/modules/es6.string.sup.js");
__webpack_require__(/*! ../modules/es6.date.now */ "../node_modules/core-js/modules/es6.date.now.js");
__webpack_require__(/*! ../modules/es6.date.to-json */ "../node_modules/core-js/modules/es6.date.to-json.js");
__webpack_require__(/*! ../modules/es6.date.to-iso-string */ "../node_modules/core-js/modules/es6.date.to-iso-string.js");
__webpack_require__(/*! ../modules/es6.date.to-string */ "../node_modules/core-js/modules/es6.date.to-string.js");
__webpack_require__(/*! ../modules/es6.date.to-primitive */ "../node_modules/core-js/modules/es6.date.to-primitive.js");
__webpack_require__(/*! ../modules/es6.array.is-array */ "../node_modules/core-js/modules/es6.array.is-array.js");
__webpack_require__(/*! ../modules/es6.array.from */ "../node_modules/core-js/modules/es6.array.from.js");
__webpack_require__(/*! ../modules/es6.array.of */ "../node_modules/core-js/modules/es6.array.of.js");
__webpack_require__(/*! ../modules/es6.array.join */ "../node_modules/core-js/modules/es6.array.join.js");
__webpack_require__(/*! ../modules/es6.array.slice */ "../node_modules/core-js/modules/es6.array.slice.js");
__webpack_require__(/*! ../modules/es6.array.sort */ "../node_modules/core-js/modules/es6.array.sort.js");
__webpack_require__(/*! ../modules/es6.array.for-each */ "../node_modules/core-js/modules/es6.array.for-each.js");
__webpack_require__(/*! ../modules/es6.array.map */ "../node_modules/core-js/modules/es6.array.map.js");
__webpack_require__(/*! ../modules/es6.array.filter */ "../node_modules/core-js/modules/es6.array.filter.js");
__webpack_require__(/*! ../modules/es6.array.some */ "../node_modules/core-js/modules/es6.array.some.js");
__webpack_require__(/*! ../modules/es6.array.every */ "../node_modules/core-js/modules/es6.array.every.js");
__webpack_require__(/*! ../modules/es6.array.reduce */ "../node_modules/core-js/modules/es6.array.reduce.js");
__webpack_require__(/*! ../modules/es6.array.reduce-right */ "../node_modules/core-js/modules/es6.array.reduce-right.js");
__webpack_require__(/*! ../modules/es6.array.index-of */ "../node_modules/core-js/modules/es6.array.index-of.js");
__webpack_require__(/*! ../modules/es6.array.last-index-of */ "../node_modules/core-js/modules/es6.array.last-index-of.js");
__webpack_require__(/*! ../modules/es6.array.copy-within */ "../node_modules/core-js/modules/es6.array.copy-within.js");
__webpack_require__(/*! ../modules/es6.array.fill */ "../node_modules/core-js/modules/es6.array.fill.js");
__webpack_require__(/*! ../modules/es6.array.find */ "../node_modules/core-js/modules/es6.array.find.js");
__webpack_require__(/*! ../modules/es6.array.find-index */ "../node_modules/core-js/modules/es6.array.find-index.js");
__webpack_require__(/*! ../modules/es6.array.species */ "../node_modules/core-js/modules/es6.array.species.js");
__webpack_require__(/*! ../modules/es6.array.iterator */ "../node_modules/core-js/modules/es6.array.iterator.js");
__webpack_require__(/*! ../modules/es6.regexp.constructor */ "../node_modules/core-js/modules/es6.regexp.constructor.js");
__webpack_require__(/*! ../modules/es6.regexp.exec */ "../node_modules/core-js/modules/es6.regexp.exec.js");
__webpack_require__(/*! ../modules/es6.regexp.to-string */ "../node_modules/core-js/modules/es6.regexp.to-string.js");
__webpack_require__(/*! ../modules/es6.regexp.flags */ "../node_modules/core-js/modules/es6.regexp.flags.js");
__webpack_require__(/*! ../modules/es6.regexp.match */ "../node_modules/core-js/modules/es6.regexp.match.js");
__webpack_require__(/*! ../modules/es6.regexp.replace */ "../node_modules/core-js/modules/es6.regexp.replace.js");
__webpack_require__(/*! ../modules/es6.regexp.search */ "../node_modules/core-js/modules/es6.regexp.search.js");
__webpack_require__(/*! ../modules/es6.regexp.split */ "../node_modules/core-js/modules/es6.regexp.split.js");
__webpack_require__(/*! ../modules/es6.promise */ "../node_modules/core-js/modules/es6.promise.js");
__webpack_require__(/*! ../modules/es6.map */ "../node_modules/core-js/modules/es6.map.js");
__webpack_require__(/*! ../modules/es6.set */ "../node_modules/core-js/modules/es6.set.js");
__webpack_require__(/*! ../modules/es6.weak-map */ "../node_modules/core-js/modules/es6.weak-map.js");
__webpack_require__(/*! ../modules/es6.weak-set */ "../node_modules/core-js/modules/es6.weak-set.js");
__webpack_require__(/*! ../modules/es6.typed.array-buffer */ "../node_modules/core-js/modules/es6.typed.array-buffer.js");
__webpack_require__(/*! ../modules/es6.typed.data-view */ "../node_modules/core-js/modules/es6.typed.data-view.js");
__webpack_require__(/*! ../modules/es6.typed.int8-array */ "../node_modules/core-js/modules/es6.typed.int8-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint8-array */ "../node_modules/core-js/modules/es6.typed.uint8-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint8-clamped-array */ "../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js");
__webpack_require__(/*! ../modules/es6.typed.int16-array */ "../node_modules/core-js/modules/es6.typed.int16-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint16-array */ "../node_modules/core-js/modules/es6.typed.uint16-array.js");
__webpack_require__(/*! ../modules/es6.typed.int32-array */ "../node_modules/core-js/modules/es6.typed.int32-array.js");
__webpack_require__(/*! ../modules/es6.typed.uint32-array */ "../node_modules/core-js/modules/es6.typed.uint32-array.js");
__webpack_require__(/*! ../modules/es6.typed.float32-array */ "../node_modules/core-js/modules/es6.typed.float32-array.js");
__webpack_require__(/*! ../modules/es6.typed.float64-array */ "../node_modules/core-js/modules/es6.typed.float64-array.js");
__webpack_require__(/*! ../modules/es6.reflect.apply */ "../node_modules/core-js/modules/es6.reflect.apply.js");
__webpack_require__(/*! ../modules/es6.reflect.construct */ "../node_modules/core-js/modules/es6.reflect.construct.js");
__webpack_require__(/*! ../modules/es6.reflect.define-property */ "../node_modules/core-js/modules/es6.reflect.define-property.js");
__webpack_require__(/*! ../modules/es6.reflect.delete-property */ "../node_modules/core-js/modules/es6.reflect.delete-property.js");
__webpack_require__(/*! ../modules/es6.reflect.enumerate */ "../node_modules/core-js/modules/es6.reflect.enumerate.js");
__webpack_require__(/*! ../modules/es6.reflect.get */ "../node_modules/core-js/modules/es6.reflect.get.js");
__webpack_require__(/*! ../modules/es6.reflect.get-own-property-descriptor */ "../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es6.reflect.get-prototype-of */ "../node_modules/core-js/modules/es6.reflect.get-prototype-of.js");
__webpack_require__(/*! ../modules/es6.reflect.has */ "../node_modules/core-js/modules/es6.reflect.has.js");
__webpack_require__(/*! ../modules/es6.reflect.is-extensible */ "../node_modules/core-js/modules/es6.reflect.is-extensible.js");
__webpack_require__(/*! ../modules/es6.reflect.own-keys */ "../node_modules/core-js/modules/es6.reflect.own-keys.js");
__webpack_require__(/*! ../modules/es6.reflect.prevent-extensions */ "../node_modules/core-js/modules/es6.reflect.prevent-extensions.js");
__webpack_require__(/*! ../modules/es6.reflect.set */ "../node_modules/core-js/modules/es6.reflect.set.js");
__webpack_require__(/*! ../modules/es6.reflect.set-prototype-of */ "../node_modules/core-js/modules/es6.reflect.set-prototype-of.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "../node_modules/core-js/modules/_core.js");


/***/ }),

/***/ "../node_modules/core-js/fn/array/flat-map.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/fn/array/flat-map.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.array.flat-map */ "../node_modules/core-js/modules/es7.array.flat-map.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").Array.flatMap;


/***/ }),

/***/ "../node_modules/core-js/fn/array/includes.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/fn/array/includes.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.array.includes */ "../node_modules/core-js/modules/es7.array.includes.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").Array.includes;


/***/ }),

/***/ "../node_modules/core-js/fn/object/entries.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/fn/object/entries.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.object.entries */ "../node_modules/core-js/modules/es7.object.entries.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").Object.entries;


/***/ }),

/***/ "../node_modules/core-js/fn/object/get-own-property-descriptors.js":
/*!*************************************************************************!*\
  !*** ../node_modules/core-js/fn/object/get-own-property-descriptors.js ***!
  \*************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.object.get-own-property-descriptors */ "../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").Object.getOwnPropertyDescriptors;


/***/ }),

/***/ "../node_modules/core-js/fn/object/values.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/fn/object/values.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.object.values */ "../node_modules/core-js/modules/es7.object.values.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").Object.values;


/***/ }),

/***/ "../node_modules/core-js/fn/promise/finally.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/fn/promise/finally.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

__webpack_require__(/*! ../../modules/es6.promise */ "../node_modules/core-js/modules/es6.promise.js");
__webpack_require__(/*! ../../modules/es7.promise.finally */ "../node_modules/core-js/modules/es7.promise.finally.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").Promise.finally;


/***/ }),

/***/ "../node_modules/core-js/fn/string/pad-end.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/fn/string/pad-end.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.string.pad-end */ "../node_modules/core-js/modules/es7.string.pad-end.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").String.padEnd;


/***/ }),

/***/ "../node_modules/core-js/fn/string/pad-start.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/fn/string/pad-start.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.string.pad-start */ "../node_modules/core-js/modules/es7.string.pad-start.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").String.padStart;


/***/ }),

/***/ "../node_modules/core-js/fn/string/trim-end.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/fn/string/trim-end.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.string.trim-right */ "../node_modules/core-js/modules/es7.string.trim-right.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").String.trimRight;


/***/ }),

/***/ "../node_modules/core-js/fn/string/trim-start.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/fn/string/trim-start.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.string.trim-left */ "../node_modules/core-js/modules/es7.string.trim-left.js");
module.exports = __webpack_require__(/*! ../../modules/_core */ "../node_modules/core-js/modules/_core.js").String.trimLeft;


/***/ }),

/***/ "../node_modules/core-js/fn/symbol/async-iterator.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/fn/symbol/async-iterator.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../../modules/es7.symbol.async-iterator */ "../node_modules/core-js/modules/es7.symbol.async-iterator.js");
module.exports = __webpack_require__(/*! ../../modules/_wks-ext */ "../node_modules/core-js/modules/_wks-ext.js").f('asyncIterator');


/***/ }),

/***/ "../node_modules/core-js/library/fn/global.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/library/fn/global.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../modules/es7.global */ "../node_modules/core-js/library/modules/es7.global.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "../node_modules/core-js/library/modules/_core.js").global;


/***/ }),

/***/ "../node_modules/core-js/library/modules/_a-function.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_a-function.js ***!
  \**************************************************************/
/***/ ((module) => {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_an-object.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_an-object.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/library/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_core.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/library/modules/_core.js ***!
  \********************************************************/
/***/ ((module) => {

var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "../node_modules/core-js/library/modules/_ctx.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/library/modules/_ctx.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/library/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_descriptors.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_descriptors.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "../node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../node_modules/core-js/library/modules/_dom-create.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_dom-create.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/library/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "../node_modules/core-js/library/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_export.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/library/modules/_export.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/library/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../node_modules/core-js/library/modules/_core.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/library/modules/_ctx.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/library/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/library/modules/_has.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? ctx(out, global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "../node_modules/core-js/library/modules/_fails.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/library/modules/_fails.js ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_global.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/library/modules/_global.js ***!
  \**********************************************************/
/***/ ((module) => {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "../node_modules/core-js/library/modules/_has.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/library/modules/_has.js ***!
  \*******************************************************/
/***/ ((module) => {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_hide.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/library/modules/_hide.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/library/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/library/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/library/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_ie8-dom-define.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_ie8-dom-define.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = !__webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/library/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "../node_modules/core-js/library/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "../node_modules/core-js/library/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../node_modules/core-js/library/modules/_is-object.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_is-object.js ***!
  \*************************************************************/
/***/ ((module) => {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_object-dp.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_object-dp.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/library/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../node_modules/core-js/library/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/library/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/library/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_property-desc.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_property-desc.js ***!
  \*****************************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/_to-primitive.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/library/modules/_to-primitive.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/library/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../node_modules/core-js/library/modules/es7.global.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/library/modules/es7.global.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/tc39/proposal-global
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/library/modules/_export.js");

$export($export.G, { global: __webpack_require__(/*! ./_global */ "../node_modules/core-js/library/modules/_global.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/_a-function.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_a-function.js ***!
  \******************************************************/
/***/ ((module) => {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_a-number-value.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/_a-number-value.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var cof = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js");
module.exports = function (it, msg) {
  if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
  return +it;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_add-to-unscopables.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/_add-to-unscopables.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js")(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_advance-string-index.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/_advance-string-index.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var at = __webpack_require__(/*! ./_string-at */ "../node_modules/core-js/modules/_string-at.js")(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_an-instance.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_an-instance.js ***!
  \*******************************************************/
/***/ ((module) => {

module.exports = function (it, Constructor, name, forbiddenField) {
  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
    throw TypeError(name + ': incorrect invocation!');
  } return it;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_an-object.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_an-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_array-copy-within.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/_array-copy-within.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");

module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = toLength(O.length);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_array-fill.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_array-fill.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = toLength(O.length);
  var aLen = arguments.length;
  var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
  var end = aLen > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_array-includes.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/_array-includes.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../node_modules/core-js/modules/_to-absolute-index.js");
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_array-methods.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_array-methods.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var IObject = __webpack_require__(/*! ./_iobject */ "../node_modules/core-js/modules/_iobject.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var asc = __webpack_require__(/*! ./_array-species-create */ "../node_modules/core-js/modules/_array-species-create.js");
module.exports = function (TYPE, $create) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  var create = $create || asc;
  return function ($this, callbackfn, that) {
    var O = toObject($this);
    var self = IObject(O);
    var f = ctx(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
    var val, res;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      val = self[index];
      res = f(val, index, O);
      if (TYPE) {
        if (IS_MAP) result[index] = res;   // map
        else if (res) switch (TYPE) {
          case 3: return true;             // some
          case 5: return val;              // find
          case 6: return index;            // findIndex
          case 2: result.push(val);        // filter
        } else if (IS_EVERY) return false; // every
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
  };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_array-reduce.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/_array-reduce.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "../node_modules/core-js/modules/_iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");

module.exports = function (that, callbackfn, aLen, memo, isRight) {
  aFunction(callbackfn);
  var O = toObject(that);
  var self = IObject(O);
  var length = toLength(O.length);
  var index = isRight ? length - 1 : 0;
  var i = isRight ? -1 : 1;
  if (aLen < 2) for (;;) {
    if (index in self) {
      memo = self[index];
      index += i;
      break;
    }
    index += i;
    if (isRight ? index < 0 : length <= index) {
      throw TypeError('Reduce of empty array with no initial value');
    }
  }
  for (;isRight ? index >= 0 : length > index; index += i) if (index in self) {
    memo = callbackfn(memo, self[index], index, O);
  }
  return memo;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_array-species-constructor.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/modules/_array-species-constructor.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var isArray = __webpack_require__(/*! ./_is-array */ "../node_modules/core-js/modules/_is-array.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('species');

module.exports = function (original) {
  var C;
  if (isArray(original)) {
    C = original.constructor;
    // cross-realm fallback
    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
    if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_array-species-create.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/_array-species-create.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
var speciesConstructor = __webpack_require__(/*! ./_array-species-constructor */ "../node_modules/core-js/modules/_array-species-constructor.js");

module.exports = function (original, length) {
  return new (speciesConstructor(original))(length);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_bind.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/modules/_bind.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var invoke = __webpack_require__(/*! ./_invoke */ "../node_modules/core-js/modules/_invoke.js");
var arraySlice = [].slice;
var factories = {};

var construct = function (F, len, args) {
  if (!(len in factories)) {
    for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
    // eslint-disable-next-line no-new-func
    factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
  } return factories[len](F, args);
};

module.exports = Function.bind || function bind(that /* , ...args */) {
  var fn = aFunction(this);
  var partArgs = arraySlice.call(arguments, 1);
  var bound = function (/* args... */) {
    var args = partArgs.concat(arraySlice.call(arguments));
    return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
  };
  if (isObject(fn.prototype)) bound.prototype = fn.prototype;
  return bound;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_classof.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/modules/_classof.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js");
var TAG = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_cof.js":
/*!***********************************************!*\
  !*** ../node_modules/core-js/modules/_cof.js ***!
  \***********************************************/
/***/ ((module) => {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_collection-strong.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/_collection-strong.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
var create = __webpack_require__(/*! ./_object-create */ "../node_modules/core-js/modules/_object-create.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "../node_modules/core-js/modules/_redefine-all.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "../node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "../node_modules/core-js/modules/_for-of.js");
var $iterDefine = __webpack_require__(/*! ./_iter-define */ "../node_modules/core-js/modules/_iter-define.js");
var step = __webpack_require__(/*! ./_iter-step */ "../node_modules/core-js/modules/_iter-step.js");
var setSpecies = __webpack_require__(/*! ./_set-species */ "../node_modules/core-js/modules/_set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js");
var fastKey = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js").fastKey;
var validate = __webpack_require__(/*! ./_validate-collection */ "../node_modules/core-js/modules/_validate-collection.js");
var SIZE = DESCRIPTORS ? '_s' : 'size';

var getEntry = function (that, key) {
  // fast case
  var index = fastKey(key);
  var entry;
  if (index !== 'F') return that._i[index];
  // frozen object case
  for (entry = that._f; entry; entry = entry.n) {
    if (entry.k == key) return entry;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;         // collection type
      that._i = create(null); // index
      that._f = undefined;    // first entry
      that._l = undefined;    // last entry
      that[SIZE] = 0;         // size
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
          entry.r = true;
          if (entry.p) entry.p = entry.p.n = undefined;
          delete data[entry.i];
        }
        that._f = that._l = undefined;
        that[SIZE] = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = validate(this, NAME);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.n;
          var prev = entry.p;
          delete that._i[entry.i];
          entry.r = true;
          if (prev) prev.n = next;
          if (next) next.p = prev;
          if (that._f == entry) that._f = next;
          if (that._l == entry) that._l = prev;
          that[SIZE]--;
        } return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn /* , that = undefined */) {
        validate(this, NAME);
        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;
        while (entry = entry ? entry.n : this._f) {
          f(entry.v, entry.k, this);
          // revert to the last existing entry
          while (entry && entry.r) entry = entry.p;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(validate(this, NAME), key);
      }
    });
    if (DESCRIPTORS) dP(C.prototype, 'size', {
      get: function () {
        return validate(this, NAME)[SIZE];
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var entry = getEntry(that, key);
    var prev, index;
    // change existing entry
    if (entry) {
      entry.v = value;
    // create new entry
    } else {
      that._l = entry = {
        i: index = fastKey(key, true), // <- index
        k: key,                        // <- key
        v: value,                      // <- value
        p: prev = that._l,             // <- previous entry
        n: undefined,                  // <- next entry
        r: false                       // <- removed
      };
      if (!that._f) that._f = entry;
      if (prev) prev.n = entry;
      that[SIZE]++;
      // add to index
      if (index !== 'F') that._i[index] = entry;
    } return that;
  },
  getEntry: getEntry,
  setStrong: function (C, NAME, IS_MAP) {
    // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
    $iterDefine(C, NAME, function (iterated, kind) {
      this._t = validate(iterated, NAME); // target
      this._k = kind;                     // kind
      this._l = undefined;                // previous
    }, function () {
      var that = this;
      var kind = that._k;
      var entry = that._l;
      // revert to the last existing entry
      while (entry && entry.r) entry = entry.p;
      // get next entry
      if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
        // or finish the iteration
        that._t = undefined;
        return step(1);
      }
      // return step by kind
      if (kind == 'keys') return step(0, entry.k);
      if (kind == 'values') return step(0, entry.v);
      return step(0, [entry.k, entry.v]);
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // add [@@species], 23.1.2.2, 23.2.2.2
    setSpecies(NAME);
  }
};


/***/ }),

/***/ "../node_modules/core-js/modules/_collection-weak.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/_collection-weak.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var redefineAll = __webpack_require__(/*! ./_redefine-all */ "../node_modules/core-js/modules/_redefine-all.js");
var getWeak = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js").getWeak;
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "../node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "../node_modules/core-js/modules/_for-of.js");
var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js");
var $has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "../node_modules/core-js/modules/_validate-collection.js");
var arrayFind = createArrayMethod(5);
var arrayFindIndex = createArrayMethod(6);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (that) {
  return that._l || (that._l = new UncaughtFrozenStore());
};
var UncaughtFrozenStore = function () {
  this.a = [];
};
var findUncaughtFrozen = function (store, key) {
  return arrayFind(store.a, function (it) {
    return it[0] === key;
  });
};
UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.a.push([key, value]);
  },
  'delete': function (key) {
    var index = arrayFindIndex(this.a, function (it) {
      return it[0] === key;
    });
    if (~index) this.a.splice(index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, NAME, '_i');
      that._t = NAME;      // collection type
      that._i = id++;      // collection id
      that._l = undefined; // leak store for uncaught frozen objects
      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
    });
    redefineAll(C.prototype, {
      // 23.3.3.2 WeakMap.prototype.delete(key)
      // 23.4.3.3 WeakSet.prototype.delete(value)
      'delete': function (key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
        return data && $has(data, this._i) && delete data[this._i];
      },
      // 23.3.3.4 WeakMap.prototype.has(key)
      // 23.4.3.4 WeakSet.prototype.has(value)
      has: function has(key) {
        if (!isObject(key)) return false;
        var data = getWeak(key);
        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
        return data && $has(data, this._i);
      }
    });
    return C;
  },
  def: function (that, key, value) {
    var data = getWeak(anObject(key), true);
    if (data === true) uncaughtFrozenStore(that).set(key, value);
    else data[that._i] = value;
    return that;
  },
  ufstore: uncaughtFrozenStore
};


/***/ }),

/***/ "../node_modules/core-js/modules/_collection.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_collection.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "../node_modules/core-js/modules/_redefine-all.js");
var meta = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js");
var forOf = __webpack_require__(/*! ./_for-of */ "../node_modules/core-js/modules/_for-of.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "../node_modules/core-js/modules/_an-instance.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "../node_modules/core-js/modules/_iter-detect.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../node_modules/core-js/modules/_set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "../node_modules/core-js/modules/_inherit-if-required.js");

module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
  var Base = global[NAME];
  var C = Base;
  var ADDER = IS_MAP ? 'set' : 'add';
  var proto = C && C.prototype;
  var O = {};
  var fixMethod = function (KEY) {
    var fn = proto[KEY];
    redefine(proto, KEY,
      KEY == 'delete' ? function (a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'has' ? function has(a) {
        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'get' ? function get(a) {
        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
      } : KEY == 'add' ? function add(a) { fn.call(this, a === 0 ? 0 : a); return this; }
        : function set(a, b) { fn.call(this, a === 0 ? 0 : a, b); return this; }
    );
  };
  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
    new C().entries().next();
  }))) {
    // create collection constructor
    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
    redefineAll(C.prototype, methods);
    meta.NEED = true;
  } else {
    var instance = new C();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    var ACCEPT_ITERABLES = $iterDetect(function (iter) { new C(iter); }); // eslint-disable-line no-new
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new C();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });
    if (!ACCEPT_ITERABLES) {
      C = wrapper(function (target, iterable) {
        anInstance(target, C, NAME);
        var that = inheritIfRequired(new Base(), target, C);
        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
        return that;
      });
      C.prototype = proto;
      proto.constructor = C;
    }
    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }
    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
    // weak collections should not contains .clear method
    if (IS_WEAK && proto.clear) delete proto.clear;
  }

  setToStringTag(C, NAME);

  O[NAME] = C;
  $export($export.G + $export.W + $export.F * (C != Base), O);

  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

  return C;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_core.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/modules/_core.js ***!
  \************************************************/
/***/ ((module) => {

var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),

/***/ "../node_modules/core-js/modules/_create-property.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/_create-property.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $defineProperty = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/modules/_property-desc.js");

module.exports = function (object, index, value) {
  if (index in object) $defineProperty.f(object, index, createDesc(0, value));
  else object[index] = value;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_ctx.js":
/*!***********************************************!*\
  !*** ../node_modules/core-js/modules/_ctx.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// optional / simple context binding
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_date-to-iso-string.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/_date-to-iso-string.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var getTime = Date.prototype.getTime;
var $toISOString = Date.prototype.toISOString;

var lz = function (num) {
  return num > 9 ? num : '0' + num;
};

// PhantomJS / old WebKit has a broken implementations
module.exports = (fails(function () {
  return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  $toISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
  var d = this;
  var y = d.getUTCFullYear();
  var m = d.getUTCMilliseconds();
  var s = y < 0 ? '-' : y > 9999 ? '+' : '';
  return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
    '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
    'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
    ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
} : $toISOString;


/***/ }),

/***/ "../node_modules/core-js/modules/_date-to-primitive.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/_date-to-primitive.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");
var NUMBER = 'number';

module.exports = function (hint) {
  if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
  return toPrimitive(anObject(this), hint != NUMBER);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_defined.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/modules/_defined.js ***!
  \***************************************************/
/***/ ((module) => {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_descriptors.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_descriptors.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../node_modules/core-js/modules/_dom-create.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_dom-create.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var document = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),

/***/ "../node_modules/core-js/modules/_enum-bug-keys.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_enum-bug-keys.js ***!
  \*********************************************************/
/***/ ((module) => {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),

/***/ "../node_modules/core-js/modules/_enum-keys.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_enum-keys.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(/*! ./_object-keys */ "../node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "../node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "../node_modules/core-js/modules/_object-pie.js");
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_export.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/_export.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),

/***/ "../node_modules/core-js/modules/_fails-is-regexp.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/_fails-is-regexp.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var MATCH = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('match');
module.exports = function (KEY) {
  var re = /./;
  try {
    '/./'[KEY](re);
  } catch (e) {
    try {
      re[MATCH] = false;
      return !'/./'[KEY](re);
    } catch (f) { /* empty */ }
  } return true;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_fails.js":
/*!*************************************************!*\
  !*** ../node_modules/core-js/modules/_fails.js ***!
  \*************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),

/***/ "../node_modules/core-js/modules/_fix-re-wks.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_fix-re-wks.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

__webpack_require__(/*! ./es6.regexp.exec */ "../node_modules/core-js/modules/es6.regexp.exec.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");
var wks = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js");
var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "../node_modules/core-js/modules/_regexp-exec.js");

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),

/***/ "../node_modules/core-js/modules/_flags.js":
/*!*************************************************!*\
  !*** ../node_modules/core-js/modules/_flags.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_flatten-into-array.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/_flatten-into-array.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var isArray = __webpack_require__(/*! ./_is-array */ "../node_modules/core-js/modules/_is-array.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var IS_CONCAT_SPREADABLE = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('isConcatSpreadable');

function flattenIntoArray(target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? ctx(mapper, thisArg, 3) : false;
  var element, spreadable;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      spreadable = false;
      if (isObject(element)) {
        spreadable = element[IS_CONCAT_SPREADABLE];
        spreadable = spreadable !== undefined ? !!spreadable : isArray(element);
      }

      if (spreadable && depth > 0) {
        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1fffffffffffff) throw TypeError();
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
}

module.exports = flattenIntoArray;


/***/ }),

/***/ "../node_modules/core-js/modules/_for-of.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/_for-of.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var call = __webpack_require__(/*! ./_iter-call */ "../node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "../node_modules/core-js/modules/_is-array-iter.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "../node_modules/core-js/modules/core.get-iterator-method.js");
var BREAK = {};
var RETURN = {};
var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);
  var f = ctx(fn, that, entries ? 2 : 1);
  var index = 0;
  var length, step, iterator, result;
  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
  // fast case for arrays with default iterator
  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
    if (result === BREAK || result === RETURN) return result;
  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
    result = call(iterator, f, step.value, entries);
    if (result === BREAK || result === RETURN) return result;
  }
};
exports.BREAK = BREAK;
exports.RETURN = RETURN;


/***/ }),

/***/ "../node_modules/core-js/modules/_function-to-string.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/_function-to-string.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(/*! ./_shared */ "../node_modules/core-js/modules/_shared.js")('native-function-to-string', Function.toString);


/***/ }),

/***/ "../node_modules/core-js/modules/_global.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/_global.js ***!
  \**************************************************/
/***/ ((module) => {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),

/***/ "../node_modules/core-js/modules/_has.js":
/*!***********************************************!*\
  !*** ../node_modules/core-js/modules/_has.js ***!
  \***********************************************/
/***/ ((module) => {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_hide.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/modules/_hide.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/modules/_property-desc.js");
module.exports = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_html.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/modules/_html.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var document = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").document;
module.exports = document && document.documentElement;


/***/ }),

/***/ "../node_modules/core-js/modules/_ie8-dom-define.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/_ie8-dom-define.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = !__webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") && !__webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  return Object.defineProperty(__webpack_require__(/*! ./_dom-create */ "../node_modules/core-js/modules/_dom-create.js")('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),

/***/ "../node_modules/core-js/modules/_inherit-if-required.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/_inherit-if-required.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var setPrototypeOf = __webpack_require__(/*! ./_set-proto */ "../node_modules/core-js/modules/_set-proto.js").set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_invoke.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/_invoke.js ***!
  \**************************************************/
/***/ ((module) => {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
module.exports = function (fn, args, that) {
  var un = that === undefined;
  switch (args.length) {
    case 0: return un ? fn()
                      : fn.call(that);
    case 1: return un ? fn(args[0])
                      : fn.call(that, args[0]);
    case 2: return un ? fn(args[0], args[1])
                      : fn.call(that, args[0], args[1]);
    case 3: return un ? fn(args[0], args[1], args[2])
                      : fn.call(that, args[0], args[1], args[2]);
    case 4: return un ? fn(args[0], args[1], args[2], args[3])
                      : fn.call(that, args[0], args[1], args[2], args[3]);
  } return fn.apply(that, args);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_iobject.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/modules/_iobject.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js");
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_is-array-iter.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_is-array-iter.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// check on default Array iterator
var Iterators = __webpack_require__(/*! ./_iterators */ "../node_modules/core-js/modules/_iterators.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('iterator');
var ArrayProto = Array.prototype;

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_is-array.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/modules/_is-array.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js");
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),

/***/ "../node_modules/core-js/modules/_is-integer.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_is-integer.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.3 Number.isInteger(number)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var floor = Math.floor;
module.exports = function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_is-object.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_is-object.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),

/***/ "../node_modules/core-js/modules/_is-regexp.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_is-regexp.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var cof = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js");
var MATCH = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),

/***/ "../node_modules/core-js/modules/_iter-call.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_iter-call.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// call something on iterator step with safe closing on error
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
module.exports = function (iterator, fn, value, entries) {
  try {
    return entries ? fn(anObject(value)[0], value[1]) : fn(value);
  // 7.4.6 IteratorClose(iterator, completion)
  } catch (e) {
    var ret = iterator['return'];
    if (ret !== undefined) anObject(ret.call(iterator));
    throw e;
  }
};


/***/ }),

/***/ "../node_modules/core-js/modules/_iter-create.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_iter-create.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var create = __webpack_require__(/*! ./_object-create */ "../node_modules/core-js/modules/_object-create.js");
var descriptor = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/modules/_property-desc.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../node_modules/core-js/modules/_set-to-string-tag.js");
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js")(IteratorPrototype, __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),

/***/ "../node_modules/core-js/modules/_iter-define.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_iter-define.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "../node_modules/core-js/modules/_library.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../node_modules/core-js/modules/_iterators.js");
var $iterCreate = __webpack_require__(/*! ./_iter-create */ "../node_modules/core-js/modules/_iter-create.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../node_modules/core-js/modules/_set-to-string-tag.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../node_modules/core-js/modules/_object-gpo.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_iter-detect.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_iter-detect.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ITERATOR = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('iterator');
var SAFE_CLOSING = false;

try {
  var riter = [7][ITERATOR]();
  riter['return'] = function () { SAFE_CLOSING = true; };
  // eslint-disable-next-line no-throw-literal
  Array.from(riter, function () { throw 2; });
} catch (e) { /* empty */ }

module.exports = function (exec, skipClosing) {
  if (!skipClosing && !SAFE_CLOSING) return false;
  var safe = false;
  try {
    var arr = [7];
    var iter = arr[ITERATOR]();
    iter.next = function () { return { done: safe = true }; };
    arr[ITERATOR] = function () { return iter; };
    exec(arr);
  } catch (e) { /* empty */ }
  return safe;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_iter-step.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_iter-step.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_iterators.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_iterators.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = {};


/***/ }),

/***/ "../node_modules/core-js/modules/_library.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/modules/_library.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = false;


/***/ }),

/***/ "../node_modules/core-js/modules/_math-expm1.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_math-expm1.js ***!
  \******************************************************/
/***/ ((module) => {

// 20.2.2.14 Math.expm1(x)
var $expm1 = Math.expm1;
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
} : $expm1;


/***/ }),

/***/ "../node_modules/core-js/modules/_math-fround.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_math-fround.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.16 Math.fround(x)
var sign = __webpack_require__(/*! ./_math-sign */ "../node_modules/core-js/modules/_math-sign.js");
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

module.exports = Math.fround || function fround(x) {
  var $abs = Math.abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_math-log1p.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_math-log1p.js ***!
  \******************************************************/
/***/ ((module) => {

// 20.2.2.20 Math.log1p(x)
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_math-sign.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_math-sign.js ***!
  \*****************************************************/
/***/ ((module) => {

// 20.2.2.28 Math.sign(x)
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_meta.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/modules/_meta.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var META = __webpack_require__(/*! ./_uid */ "../node_modules/core-js/modules/_uid.js")('meta');
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var setDesc = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),

/***/ "../node_modules/core-js/modules/_microtask.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_microtask.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var macrotask = __webpack_require__(/*! ./_task */ "../node_modules/core-js/modules/_task.js").set;
var Observer = global.MutationObserver || global.WebKitMutationObserver;
var process = global.process;
var Promise = global.Promise;
var isNode = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js")(process) == 'process';

module.exports = function () {
  var head, last, notify;

  var flush = function () {
    var parent, fn;
    if (isNode && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (e) {
        if (head) notify();
        else last = undefined;
        throw e;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // Node.js
  if (isNode) {
    notify = function () {
      process.nextTick(flush);
    };
  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
  } else if (Observer && !(global.navigator && global.navigator.standalone)) {
    var toggle = true;
    var node = document.createTextNode('');
    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    var promise = Promise.resolve(undefined);
    notify = function () {
      promise.then(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }

  return function (fn) {
    var task = { fn: fn, next: undefined };
    if (last) last.next = task;
    if (!head) {
      head = task;
      notify();
    } last = task;
  };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_new-promise-capability.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/_new-promise-capability.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 25.4.1.5 NewPromiseCapability(C)
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");

function PromiseCapability(C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}

module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-assign.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_object-assign.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 19.1.2.1 Object.assign(target, source, ...)
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../node_modules/core-js/modules/_object-keys.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "../node_modules/core-js/modules/_object-gops.js");
var pIE = __webpack_require__(/*! ./_object-pie */ "../node_modules/core-js/modules/_object-pie.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var IObject = __webpack_require__(/*! ./_iobject */ "../node_modules/core-js/modules/_iobject.js");
var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
module.exports = !$assign || __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = gOPS.f;
  var isEnum = pIE.f;
  while (aLen > index) {
    var S = IObject(arguments[index++]);
    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "../node_modules/core-js/modules/_object-create.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_object-create.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var dPs = __webpack_require__(/*! ./_object-dps */ "../node_modules/core-js/modules/_object-dps.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../node_modules/core-js/modules/_enum-bug-keys.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(/*! ./_dom-create */ "../node_modules/core-js/modules/_dom-create.js")('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(/*! ./_html */ "../node_modules/core-js/modules/_html.js").appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-dp.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_object-dp.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../node_modules/core-js/modules/_ie8-dom-define.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");
var dP = Object.defineProperty;

exports.f = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-dps.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-dps.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../node_modules/core-js/modules/_object-keys.js");

module.exports = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-gopd.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-gopd.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var pIE = __webpack_require__(/*! ./_object-pie */ "../node_modules/core-js/modules/_object-pie.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/modules/_property-desc.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ./_ie8-dom-define */ "../node_modules/core-js/modules/_ie8-dom-define.js");
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-gopn-ext.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/_object-gopn-ext.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "../node_modules/core-js/modules/_object-gopn.js").f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-gopn.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-gopn.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "../node_modules/core-js/modules/_object-keys-internal.js");
var hiddenKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../node_modules/core-js/modules/_enum-bug-keys.js").concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-gops.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-gops.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports) => {

exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "../node_modules/core-js/modules/_object-gpo.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-gpo.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../node_modules/core-js/modules/_shared-key.js")('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-keys-internal.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/_object-keys-internal.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var arrayIndexOf = __webpack_require__(/*! ./_array-includes */ "../node_modules/core-js/modules/_array-includes.js")(false);
var IE_PROTO = __webpack_require__(/*! ./_shared-key */ "../node_modules/core-js/modules/_shared-key.js")('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-keys.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-keys.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(/*! ./_object-keys-internal */ "../node_modules/core-js/modules/_object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ./_enum-bug-keys */ "../node_modules/core-js/modules/_enum-bug-keys.js");

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-pie.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-pie.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

exports.f = {}.propertyIsEnumerable;


/***/ }),

/***/ "../node_modules/core-js/modules/_object-sap.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_object-sap.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// most Object methods by ES6 should accept primitives
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
module.exports = function (KEY, exec) {
  var fn = (core.Object || {})[KEY] || Object[KEY];
  var exp = {};
  exp[KEY] = exec(fn);
  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_object-to-array.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/_object-to-array.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../node_modules/core-js/modules/_object-keys.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var isEnum = __webpack_require__(/*! ./_object-pie */ "../node_modules/core-js/modules/_object-pie.js").f;
module.exports = function (isEntries) {
  return function (it) {
    var O = toIObject(it);
    var keys = getKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || isEnum.call(O, key)) {
        result.push(isEntries ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_own-keys.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/modules/_own-keys.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// all object keys, includes non-enumerable and symbols
var gOPN = __webpack_require__(/*! ./_object-gopn */ "../node_modules/core-js/modules/_object-gopn.js");
var gOPS = __webpack_require__(/*! ./_object-gops */ "../node_modules/core-js/modules/_object-gops.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var Reflect = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").Reflect;
module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
  var keys = gOPN.f(anObject(it));
  var getSymbols = gOPS.f;
  return getSymbols ? keys.concat(getSymbols(it)) : keys;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_parse-float.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_parse-float.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var $parseFloat = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").parseFloat;
var $trim = __webpack_require__(/*! ./_string-trim */ "../node_modules/core-js/modules/_string-trim.js").trim;

module.exports = 1 / $parseFloat(__webpack_require__(/*! ./_string-ws */ "../node_modules/core-js/modules/_string-ws.js") + '-0') !== -Infinity ? function parseFloat(str) {
  var string = $trim(String(str), 3);
  var result = $parseFloat(string);
  return result === 0 && string.charAt(0) == '-' ? -0 : result;
} : $parseFloat;


/***/ }),

/***/ "../node_modules/core-js/modules/_parse-int.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_parse-int.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var $parseInt = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").parseInt;
var $trim = __webpack_require__(/*! ./_string-trim */ "../node_modules/core-js/modules/_string-trim.js").trim;
var ws = __webpack_require__(/*! ./_string-ws */ "../node_modules/core-js/modules/_string-ws.js");
var hex = /^[-+]?0[xX]/;

module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
  var string = $trim(String(str), 3);
  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
} : $parseInt;


/***/ }),

/***/ "../node_modules/core-js/modules/_perform.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/modules/_perform.js ***!
  \***************************************************/
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return { e: false, v: exec() };
  } catch (e) {
    return { e: true, v: e };
  }
};


/***/ }),

/***/ "../node_modules/core-js/modules/_promise-resolve.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/_promise-resolve.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var newPromiseCapability = __webpack_require__(/*! ./_new-promise-capability */ "../node_modules/core-js/modules/_new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_property-desc.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_property-desc.js ***!
  \*********************************************************/
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_redefine-all.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/_redefine-all.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
module.exports = function (target, src, safe) {
  for (var key in src) redefine(target, key, src[key], safe);
  return target;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_redefine.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/modules/_redefine.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var SRC = __webpack_require__(/*! ./_uid */ "../node_modules/core-js/modules/_uid.js")('src');
var $toString = __webpack_require__(/*! ./_function-to-string */ "../node_modules/core-js/modules/_function-to-string.js");
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js").inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),

/***/ "../node_modules/core-js/modules/_regexp-exec-abstract.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/_regexp-exec-abstract.js ***!
  \****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var classof = __webpack_require__(/*! ./_classof */ "../node_modules/core-js/modules/_classof.js");
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_regexp-exec.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_regexp-exec.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var regexpFlags = __webpack_require__(/*! ./_flags */ "../node_modules/core-js/modules/_flags.js");

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "../node_modules/core-js/modules/_same-value.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_same-value.js ***!
  \******************************************************/
/***/ ((module) => {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_set-proto.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_set-proto.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js")(Function.call, __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js").f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),

/***/ "../node_modules/core-js/modules/_set-species.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_set-species.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),

/***/ "../node_modules/core-js/modules/_set-to-string-tag.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/_set-to-string-tag.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var def = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var TAG = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),

/***/ "../node_modules/core-js/modules/_shared-key.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_shared-key.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var shared = __webpack_require__(/*! ./_shared */ "../node_modules/core-js/modules/_shared.js")('keys');
var uid = __webpack_require__(/*! ./_uid */ "../node_modules/core-js/modules/_uid.js");
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),

/***/ "../node_modules/core-js/modules/_shared.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/_shared.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var core = __webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(/*! ./_library */ "../node_modules/core-js/modules/_library.js") ? 'pure' : 'global',
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});


/***/ }),

/***/ "../node_modules/core-js/modules/_species-constructor.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/_species-constructor.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var SPECIES = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_strict-method.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_strict-method.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),

/***/ "../node_modules/core-js/modules/_string-at.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_string-at.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),

/***/ "../node_modules/core-js/modules/_string-context.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/_string-context.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// helper for String#{startsWith, endsWith, includes}
var isRegExp = __webpack_require__(/*! ./_is-regexp */ "../node_modules/core-js/modules/_is-regexp.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");

module.exports = function (that, searchString, NAME) {
  if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
  return String(defined(that));
};


/***/ }),

/***/ "../node_modules/core-js/modules/_string-html.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_string-html.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");
var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
var createHTML = function (string, tag, attribute, value) {
  var S = String(defined(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};
module.exports = function (NAME, exec) {
  var O = {};
  O[NAME] = exec(createHTML);
  $export($export.P + $export.F * fails(function () {
    var test = ''[NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  }), 'String', O);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_string-pad.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_string-pad.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/tc39/proposal-string-pad-start-end
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var repeat = __webpack_require__(/*! ./_string-repeat */ "../node_modules/core-js/modules/_string-repeat.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");

module.exports = function (that, maxLength, fillString, left) {
  var S = String(defined(that));
  var stringLength = S.length;
  var fillStr = fillString === undefined ? ' ' : String(fillString);
  var intMaxLength = toLength(maxLength);
  if (intMaxLength <= stringLength || fillStr == '') return S;
  var fillLen = intMaxLength - stringLength;
  var stringFiller = repeat.call(fillStr, Math.ceil(fillLen / fillStr.length));
  if (stringFiller.length > fillLen) stringFiller = stringFiller.slice(0, fillLen);
  return left ? stringFiller + S : S + stringFiller;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_string-repeat.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/_string-repeat.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");

module.exports = function repeat(count) {
  var str = String(defined(this));
  var res = '';
  var n = toInteger(count);
  if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
  return res;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_string-trim.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_string-trim.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var spaces = __webpack_require__(/*! ./_string-ws */ "../node_modules/core-js/modules/_string-ws.js");
var space = '[' + spaces + ']';
var non = '\u200b\u0085';
var ltrim = RegExp('^' + space + space + '*');
var rtrim = RegExp(space + space + '*$');

var exporter = function (KEY, exec, ALIAS) {
  var exp = {};
  var FORCE = fails(function () {
    return !!spaces[KEY]() || non[KEY]() != non;
  });
  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
  if (ALIAS) exp[ALIAS] = fn;
  $export($export.P + $export.F * FORCE, 'String', exp);
};

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
var trim = exporter.trim = function (string, TYPE) {
  string = String(defined(string));
  if (TYPE & 1) string = string.replace(ltrim, '');
  if (TYPE & 2) string = string.replace(rtrim, '');
  return string;
};

module.exports = exporter;


/***/ }),

/***/ "../node_modules/core-js/modules/_string-ws.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_string-ws.js ***!
  \*****************************************************/
/***/ ((module) => {

module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
  '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "../node_modules/core-js/modules/_task.js":
/*!************************************************!*\
  !*** ../node_modules/core-js/modules/_task.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var invoke = __webpack_require__(/*! ./_invoke */ "../node_modules/core-js/modules/_invoke.js");
var html = __webpack_require__(/*! ./_html */ "../node_modules/core-js/modules/_html.js");
var cel = __webpack_require__(/*! ./_dom-create */ "../node_modules/core-js/modules/_dom-create.js");
var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var process = global.process;
var setTask = global.setImmediate;
var clearTask = global.clearImmediate;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;
var run = function () {
  var id = +this;
  // eslint-disable-next-line no-prototype-builtins
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};
var listener = function (event) {
  run.call(event.data);
};
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!setTask || !clearTask) {
  setTask = function setImmediate(fn) {
    var args = [];
    var i = 1;
    while (arguments.length > i) args.push(arguments[i++]);
    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func
      invoke(typeof fn == 'function' ? fn : Function(fn), args);
    };
    defer(counter);
    return counter;
  };
  clearTask = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (__webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js")(process) == 'process') {
    defer = function (id) {
      process.nextTick(ctx(run, id, 1));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(ctx(run, id, 1));
    };
  // Browsers with MessageChannel, includes WebWorkers
  } else if (MessageChannel) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = ctx(port.postMessage, port, 1);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
    defer = function (id) {
      global.postMessage(id + '', '*');
    };
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in cel('script')) {
    defer = function (id) {
      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run.call(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(ctx(run, id, 1), 0);
    };
  }
}
module.exports = {
  set: setTask,
  clear: clearTask
};


/***/ }),

/***/ "../node_modules/core-js/modules/_to-absolute-index.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/_to-absolute-index.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_to-index.js":
/*!****************************************************!*\
  !*** ../node_modules/core-js/modules/_to-index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// https://tc39.github.io/ecma262/#sec-toindex
var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toInteger(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length!');
  return length;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_to-integer.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_to-integer.js ***!
  \******************************************************/
/***/ ((module) => {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),

/***/ "../node_modules/core-js/modules/_to-iobject.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_to-iobject.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(/*! ./_iobject */ "../node_modules/core-js/modules/_iobject.js");
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),

/***/ "../node_modules/core-js/modules/_to-length.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_to-length.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.15 ToLength
var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),

/***/ "../node_modules/core-js/modules/_to-object.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/_to-object.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(/*! ./_defined */ "../node_modules/core-js/modules/_defined.js");
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),

/***/ "../node_modules/core-js/modules/_to-primitive.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/_to-primitive.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../node_modules/core-js/modules/_typed-array.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/_typed-array.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

if (__webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js")) {
  var LIBRARY = __webpack_require__(/*! ./_library */ "../node_modules/core-js/modules/_library.js");
  var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
  var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
  var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
  var $typed = __webpack_require__(/*! ./_typed */ "../node_modules/core-js/modules/_typed.js");
  var $buffer = __webpack_require__(/*! ./_typed-buffer */ "../node_modules/core-js/modules/_typed-buffer.js");
  var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
  var anInstance = __webpack_require__(/*! ./_an-instance */ "../node_modules/core-js/modules/_an-instance.js");
  var propertyDesc = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/modules/_property-desc.js");
  var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
  var redefineAll = __webpack_require__(/*! ./_redefine-all */ "../node_modules/core-js/modules/_redefine-all.js");
  var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
  var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
  var toIndex = __webpack_require__(/*! ./_to-index */ "../node_modules/core-js/modules/_to-index.js");
  var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../node_modules/core-js/modules/_to-absolute-index.js");
  var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");
  var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
  var classof = __webpack_require__(/*! ./_classof */ "../node_modules/core-js/modules/_classof.js");
  var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
  var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
  var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "../node_modules/core-js/modules/_is-array-iter.js");
  var create = __webpack_require__(/*! ./_object-create */ "../node_modules/core-js/modules/_object-create.js");
  var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../node_modules/core-js/modules/_object-gpo.js");
  var gOPN = __webpack_require__(/*! ./_object-gopn */ "../node_modules/core-js/modules/_object-gopn.js").f;
  var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "../node_modules/core-js/modules/core.get-iterator-method.js");
  var uid = __webpack_require__(/*! ./_uid */ "../node_modules/core-js/modules/_uid.js");
  var wks = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js");
  var createArrayMethod = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js");
  var createArrayIncludes = __webpack_require__(/*! ./_array-includes */ "../node_modules/core-js/modules/_array-includes.js");
  var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "../node_modules/core-js/modules/_species-constructor.js");
  var ArrayIterators = __webpack_require__(/*! ./es6.array.iterator */ "../node_modules/core-js/modules/es6.array.iterator.js");
  var Iterators = __webpack_require__(/*! ./_iterators */ "../node_modules/core-js/modules/_iterators.js");
  var $iterDetect = __webpack_require__(/*! ./_iter-detect */ "../node_modules/core-js/modules/_iter-detect.js");
  var setSpecies = __webpack_require__(/*! ./_set-species */ "../node_modules/core-js/modules/_set-species.js");
  var arrayFill = __webpack_require__(/*! ./_array-fill */ "../node_modules/core-js/modules/_array-fill.js");
  var arrayCopyWithin = __webpack_require__(/*! ./_array-copy-within */ "../node_modules/core-js/modules/_array-copy-within.js");
  var $DP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
  var $GOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js");
  var dP = $DP.f;
  var gOPD = $GOPD.f;
  var RangeError = global.RangeError;
  var TypeError = global.TypeError;
  var Uint8Array = global.Uint8Array;
  var ARRAY_BUFFER = 'ArrayBuffer';
  var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
  var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
  var PROTOTYPE = 'prototype';
  var ArrayProto = Array[PROTOTYPE];
  var $ArrayBuffer = $buffer.ArrayBuffer;
  var $DataView = $buffer.DataView;
  var arrayForEach = createArrayMethod(0);
  var arrayFilter = createArrayMethod(2);
  var arraySome = createArrayMethod(3);
  var arrayEvery = createArrayMethod(4);
  var arrayFind = createArrayMethod(5);
  var arrayFindIndex = createArrayMethod(6);
  var arrayIncludes = createArrayIncludes(true);
  var arrayIndexOf = createArrayIncludes(false);
  var arrayValues = ArrayIterators.values;
  var arrayKeys = ArrayIterators.keys;
  var arrayEntries = ArrayIterators.entries;
  var arrayLastIndexOf = ArrayProto.lastIndexOf;
  var arrayReduce = ArrayProto.reduce;
  var arrayReduceRight = ArrayProto.reduceRight;
  var arrayJoin = ArrayProto.join;
  var arraySort = ArrayProto.sort;
  var arraySlice = ArrayProto.slice;
  var arrayToString = ArrayProto.toString;
  var arrayToLocaleString = ArrayProto.toLocaleString;
  var ITERATOR = wks('iterator');
  var TAG = wks('toStringTag');
  var TYPED_CONSTRUCTOR = uid('typed_constructor');
  var DEF_CONSTRUCTOR = uid('def_constructor');
  var ALL_CONSTRUCTORS = $typed.CONSTR;
  var TYPED_ARRAY = $typed.TYPED;
  var VIEW = $typed.VIEW;
  var WRONG_LENGTH = 'Wrong length!';

  var $map = createArrayMethod(1, function (O, length) {
    return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
  });

  var LITTLE_ENDIAN = fails(function () {
    // eslint-disable-next-line no-undef
    return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
  });

  var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
    new Uint8Array(1).set({});
  });

  var toOffset = function (it, BYTES) {
    var offset = toInteger(it);
    if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
    return offset;
  };

  var validate = function (it) {
    if (isObject(it) && TYPED_ARRAY in it) return it;
    throw TypeError(it + ' is not a typed array!');
  };

  var allocate = function (C, length) {
    if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
      throw TypeError('It is not a typed array constructor!');
    } return new C(length);
  };

  var speciesFromList = function (O, list) {
    return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
  };

  var fromList = function (C, list) {
    var index = 0;
    var length = list.length;
    var result = allocate(C, length);
    while (length > index) result[index] = list[index++];
    return result;
  };

  var addGetter = function (it, key, internal) {
    dP(it, key, { get: function () { return this._d[internal]; } });
  };

  var $from = function from(source /* , mapfn, thisArg */) {
    var O = toObject(source);
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var iterFn = getIterFn(O);
    var i, length, values, result, step, iterator;
    if (iterFn != undefined && !isArrayIter(iterFn)) {
      for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
        values.push(step.value);
      } O = values;
    }
    if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
    for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
      result[i] = mapping ? mapfn(O[i], i) : O[i];
    }
    return result;
  };

  var $of = function of(/* ...items */) {
    var index = 0;
    var length = arguments.length;
    var result = allocate(this, length);
    while (length > index) result[index] = arguments[index++];
    return result;
  };

  // iOS Safari 6.x fails here
  var TO_LOCALE_BUG = !!Uint8Array && fails(function () { arrayToLocaleString.call(new Uint8Array(1)); });

  var $toLocaleString = function toLocaleString() {
    return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
  };

  var proto = {
    copyWithin: function copyWithin(target, start /* , end */) {
      return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
    },
    every: function every(callbackfn /* , thisArg */) {
      return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
      return arrayFill.apply(validate(this), arguments);
    },
    filter: function filter(callbackfn /* , thisArg */) {
      return speciesFromList(this, arrayFilter(validate(this), callbackfn,
        arguments.length > 1 ? arguments[1] : undefined));
    },
    find: function find(predicate /* , thisArg */) {
      return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    findIndex: function findIndex(predicate /* , thisArg */) {
      return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
    },
    forEach: function forEach(callbackfn /* , thisArg */) {
      arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    indexOf: function indexOf(searchElement /* , fromIndex */) {
      return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    includes: function includes(searchElement /* , fromIndex */) {
      return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
    },
    join: function join(separator) { // eslint-disable-line no-unused-vars
      return arrayJoin.apply(validate(this), arguments);
    },
    lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
      return arrayLastIndexOf.apply(validate(this), arguments);
    },
    map: function map(mapfn /* , thisArg */) {
      return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduce.apply(validate(this), arguments);
    },
    reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
      return arrayReduceRight.apply(validate(this), arguments);
    },
    reverse: function reverse() {
      var that = this;
      var length = validate(that).length;
      var middle = Math.floor(length / 2);
      var index = 0;
      var value;
      while (index < middle) {
        value = that[index];
        that[index++] = that[--length];
        that[length] = value;
      } return that;
    },
    some: function some(callbackfn /* , thisArg */) {
      return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    },
    sort: function sort(comparefn) {
      return arraySort.call(validate(this), comparefn);
    },
    subarray: function subarray(begin, end) {
      var O = validate(this);
      var length = O.length;
      var $begin = toAbsoluteIndex(begin, length);
      return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
        O.buffer,
        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
      );
    }
  };

  var $slice = function slice(start, end) {
    return speciesFromList(this, arraySlice.call(validate(this), start, end));
  };

  var $set = function set(arrayLike /* , offset */) {
    validate(this);
    var offset = toOffset(arguments[1], 1);
    var length = this.length;
    var src = toObject(arrayLike);
    var len = toLength(src.length);
    var index = 0;
    if (len + offset > length) throw RangeError(WRONG_LENGTH);
    while (index < len) this[offset + index] = src[index++];
  };

  var $iterators = {
    entries: function entries() {
      return arrayEntries.call(validate(this));
    },
    keys: function keys() {
      return arrayKeys.call(validate(this));
    },
    values: function values() {
      return arrayValues.call(validate(this));
    }
  };

  var isTAIndex = function (target, key) {
    return isObject(target)
      && target[TYPED_ARRAY]
      && typeof key != 'symbol'
      && key in target
      && String(+key) == String(key);
  };
  var $getDesc = function getOwnPropertyDescriptor(target, key) {
    return isTAIndex(target, key = toPrimitive(key, true))
      ? propertyDesc(2, target[key])
      : gOPD(target, key);
  };
  var $setDesc = function defineProperty(target, key, desc) {
    if (isTAIndex(target, key = toPrimitive(key, true))
      && isObject(desc)
      && has(desc, 'value')
      && !has(desc, 'get')
      && !has(desc, 'set')
      // TODO: add validation descriptor w/o calling accessors
      && !desc.configurable
      && (!has(desc, 'writable') || desc.writable)
      && (!has(desc, 'enumerable') || desc.enumerable)
    ) {
      target[key] = desc.value;
      return target;
    } return dP(target, key, desc);
  };

  if (!ALL_CONSTRUCTORS) {
    $GOPD.f = $getDesc;
    $DP.f = $setDesc;
  }

  $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
    getOwnPropertyDescriptor: $getDesc,
    defineProperty: $setDesc
  });

  if (fails(function () { arrayToString.call({}); })) {
    arrayToString = arrayToLocaleString = function toString() {
      return arrayJoin.call(this);
    };
  }

  var $TypedArrayPrototype$ = redefineAll({}, proto);
  redefineAll($TypedArrayPrototype$, $iterators);
  hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
  redefineAll($TypedArrayPrototype$, {
    slice: $slice,
    set: $set,
    constructor: function () { /* noop */ },
    toString: arrayToString,
    toLocaleString: $toLocaleString
  });
  addGetter($TypedArrayPrototype$, 'buffer', 'b');
  addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
  addGetter($TypedArrayPrototype$, 'byteLength', 'l');
  addGetter($TypedArrayPrototype$, 'length', 'e');
  dP($TypedArrayPrototype$, TAG, {
    get: function () { return this[TYPED_ARRAY]; }
  });

  // eslint-disable-next-line max-statements
  module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
    CLAMPED = !!CLAMPED;
    var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + KEY;
    var SETTER = 'set' + KEY;
    var TypedArray = global[NAME];
    var Base = TypedArray || {};
    var TAC = TypedArray && getPrototypeOf(TypedArray);
    var FORCED = !TypedArray || !$typed.ABV;
    var O = {};
    var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
    var getter = function (that, index) {
      var data = that._d;
      return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
    };
    var setter = function (that, index, value) {
      var data = that._d;
      if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
      data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
    };
    var addElement = function (that, index) {
      dP(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };
    if (FORCED) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME, '_d');
        var index = 0;
        var offset = 0;
        var buffer, byteLength, length, klass;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new $ArrayBuffer(byteLength);
        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          buffer = data;
          offset = toOffset($offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - offset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (TYPED_ARRAY in data) {
          return fromList(TypedArray, data);
        } else {
          return $from.call(TypedArray, data);
        }
        hide(that, '_d', {
          b: buffer,
          o: offset,
          l: byteLength,
          e: length,
          v: new $DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });
      TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
      hide(TypedArrayPrototype, 'constructor', TypedArray);
    } else if (!fails(function () {
      TypedArray(1);
    }) || !fails(function () {
      new TypedArray(-1); // eslint-disable-line no-new
    }) || !$iterDetect(function (iter) {
      new TypedArray(); // eslint-disable-line no-new
      new TypedArray(null); // eslint-disable-line no-new
      new TypedArray(1.5); // eslint-disable-line no-new
      new TypedArray(iter); // eslint-disable-line no-new
    }, true)) {
      TypedArray = wrapper(function (that, data, $offset, $length) {
        anInstance(that, TypedArray, NAME);
        var klass;
        // `ws` module bug, temporarily remove validation length for Uint8Array
        // https://github.com/websockets/ws/pull/645
        if (!isObject(data)) return new Base(toIndex(data));
        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
          return $length !== undefined
            ? new Base(data, toOffset($offset, BYTES), $length)
            : $offset !== undefined
              ? new Base(data, toOffset($offset, BYTES))
              : new Base(data);
        }
        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
        return $from.call(TypedArray, data);
      });
      arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
      });
      TypedArray[PROTOTYPE] = TypedArrayPrototype;
      if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
    }
    var $nativeIterator = TypedArrayPrototype[ITERATOR];
    var CORRECT_ITER_NAME = !!$nativeIterator
      && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
    var $iterator = $iterators.values;
    hide(TypedArray, TYPED_CONSTRUCTOR, true);
    hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
    hide(TypedArrayPrototype, VIEW, true);
    hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

    if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
      dP(TypedArrayPrototype, TAG, {
        get: function () { return NAME; }
      });
    }

    O[NAME] = TypedArray;

    $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

    $export($export.S, NAME, {
      BYTES_PER_ELEMENT: BYTES
    });

    $export($export.S + $export.F * fails(function () { Base.of.call(TypedArray, 1); }), NAME, {
      from: $from,
      of: $of
    });

    if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

    $export($export.P, NAME, proto);

    setSpecies(NAME);

    $export($export.P + $export.F * FORCED_SET, NAME, { set: $set });

    $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

    if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

    $export($export.P + $export.F * fails(function () {
      new TypedArray(1).slice();
    }), NAME, { slice: $slice });

    $export($export.P + $export.F * (fails(function () {
      return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
    }) || !fails(function () {
      TypedArrayPrototype.toLocaleString.call([1, 2]);
    })), NAME, { toLocaleString: $toLocaleString });

    Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
    if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "../node_modules/core-js/modules/_typed-buffer.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/_typed-buffer.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "../node_modules/core-js/modules/_library.js");
var $typed = __webpack_require__(/*! ./_typed */ "../node_modules/core-js/modules/_typed.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
var redefineAll = __webpack_require__(/*! ./_redefine-all */ "../node_modules/core-js/modules/_redefine-all.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "../node_modules/core-js/modules/_an-instance.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var toIndex = __webpack_require__(/*! ./_to-index */ "../node_modules/core-js/modules/_to-index.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "../node_modules/core-js/modules/_object-gopn.js").f;
var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
var arrayFill = __webpack_require__(/*! ./_array-fill */ "../node_modules/core-js/modules/_array-fill.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../node_modules/core-js/modules/_set-to-string-tag.js");
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length!';
var WRONG_INDEX = 'Wrong index!';
var $ArrayBuffer = global[ARRAY_BUFFER];
var $DataView = global[DATA_VIEW];
var Math = global.Math;
var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
var Infinity = global.Infinity;
var BaseBuffer = $ArrayBuffer;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;
var BUFFER = 'buffer';
var BYTE_LENGTH = 'byteLength';
var BYTE_OFFSET = 'byteOffset';
var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
function packIEEE754(value, mLen, nBytes) {
  var buffer = new Array(nBytes);
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var i = 0;
  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
  var e, m, c;
  value = abs(value);
  // eslint-disable-next-line no-self-compare
  if (value != value || value === Infinity) {
    // eslint-disable-next-line no-self-compare
    m = value != value ? 1 : 0;
    e = eMax;
  } else {
    e = floor(log(value) / LN2);
    if (value * (c = pow(2, -e)) < 1) {
      e--;
      c *= 2;
    }
    if (e + eBias >= 1) {
      value += rt / c;
    } else {
      value += rt * pow(2, 1 - eBias);
    }
    if (value * c >= 2) {
      e++;
      c /= 2;
    }
    if (e + eBias >= eMax) {
      m = 0;
      e = eMax;
    } else if (e + eBias >= 1) {
      m = (value * c - 1) * pow(2, mLen);
      e = e + eBias;
    } else {
      m = value * pow(2, eBias - 1) * pow(2, mLen);
      e = 0;
    }
  }
  for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8);
  e = e << mLen | m;
  eLen += mLen;
  for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8);
  buffer[--i] |= s * 128;
  return buffer;
}
function unpackIEEE754(buffer, mLen, nBytes) {
  var eLen = nBytes * 8 - mLen - 1;
  var eMax = (1 << eLen) - 1;
  var eBias = eMax >> 1;
  var nBits = eLen - 7;
  var i = nBytes - 1;
  var s = buffer[i--];
  var e = s & 127;
  var m;
  s >>= 7;
  for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8);
  m = e & (1 << -nBits) - 1;
  e >>= -nBits;
  nBits += mLen;
  for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8);
  if (e === 0) {
    e = 1 - eBias;
  } else if (e === eMax) {
    return m ? NaN : s ? -Infinity : Infinity;
  } else {
    m = m + pow(2, mLen);
    e = e - eBias;
  } return (s ? -1 : 1) * m * pow(2, e - mLen);
}

function unpackI32(bytes) {
  return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
}
function packI8(it) {
  return [it & 0xff];
}
function packI16(it) {
  return [it & 0xff, it >> 8 & 0xff];
}
function packI32(it) {
  return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
}
function packF64(it) {
  return packIEEE754(it, 52, 8);
}
function packF32(it) {
  return packIEEE754(it, 23, 4);
}

function addGetter(C, key, internal) {
  dP(C[PROTOTYPE], key, { get: function () { return this[internal]; } });
}

function get(view, bytes, index, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = store.slice(start, start + bytes);
  return isLittleEndian ? pack : pack.reverse();
}
function set(view, bytes, index, conversion, value, isLittleEndian) {
  var numIndex = +index;
  var intIndex = toIndex(numIndex);
  if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
  var store = view[$BUFFER]._b;
  var start = intIndex + view[$OFFSET];
  var pack = conversion(+value);
  for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
}

if (!$typed.ABV) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
    var byteLength = toIndex(length);
    this._b = arrayFill.call(new Array(byteLength), 0);
    this[$LENGTH] = byteLength;
  };

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, $DataView, DATA_VIEW);
    anInstance(buffer, $ArrayBuffer, DATA_VIEW);
    var bufferLength = buffer[$LENGTH];
    var offset = toInteger(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    this[$BUFFER] = buffer;
    this[$OFFSET] = offset;
    this[$LENGTH] = byteLength;
  };

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
    addGetter($DataView, BUFFER, '_b');
    addGetter($DataView, BYTE_LENGTH, '_l');
    addGetter($DataView, BYTE_OFFSET, '_o');
  }

  redefineAll($DataView[PROTOTYPE], {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments[1]);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1]));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packI8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packI16, value, arguments[2]);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packI32, value, arguments[2]);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packF32, value, arguments[2]);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packF64, value, arguments[2]);
    }
  });
} else {
  if (!fails(function () {
    $ArrayBuffer(1);
  }) || !fails(function () {
    new $ArrayBuffer(-1); // eslint-disable-line no-new
  }) || fails(function () {
    new $ArrayBuffer(); // eslint-disable-line no-new
    new $ArrayBuffer(1.5); // eslint-disable-line no-new
    new $ArrayBuffer(NaN); // eslint-disable-line no-new
    return $ArrayBuffer.name != ARRAY_BUFFER;
  })) {
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, $ArrayBuffer);
      return new BaseBuffer(toIndex(length));
    };
    var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
    for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
    }
    if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
  }
  // iOS Safari 7.x bug
  var view = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = $DataView[PROTOTYPE].setInt8;
  view.setInt8(0, 2147483648);
  view.setInt8(1, 2147483649);
  if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8.call(this, byteOffset, value << 24 >> 24);
    }
  }, true);
}
setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);
hide($DataView[PROTOTYPE], $typed.VIEW, true);
exports[ARRAY_BUFFER] = $ArrayBuffer;
exports[DATA_VIEW] = $DataView;


/***/ }),

/***/ "../node_modules/core-js/modules/_typed.js":
/*!*************************************************!*\
  !*** ../node_modules/core-js/modules/_typed.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
var uid = __webpack_require__(/*! ./_uid */ "../node_modules/core-js/modules/_uid.js");
var TYPED = uid('typed_array');
var VIEW = uid('view');
var ABV = !!(global.ArrayBuffer && global.DataView);
var CONSTR = ABV;
var i = 0;
var l = 9;
var Typed;

var TypedArrayConstructors = (
  'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
).split(',');

while (i < l) {
  if (Typed = global[TypedArrayConstructors[i++]]) {
    hide(Typed.prototype, TYPED, true);
    hide(Typed.prototype, VIEW, true);
  } else CONSTR = false;
}

module.exports = {
  ABV: ABV,
  CONSTR: CONSTR,
  TYPED: TYPED,
  VIEW: VIEW
};


/***/ }),

/***/ "../node_modules/core-js/modules/_uid.js":
/*!***********************************************!*\
  !*** ../node_modules/core-js/modules/_uid.js ***!
  \***********************************************/
/***/ ((module) => {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),

/***/ "../node_modules/core-js/modules/_user-agent.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_user-agent.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var navigator = global.navigator;

module.exports = navigator && navigator.userAgent || '';


/***/ }),

/***/ "../node_modules/core-js/modules/_validate-collection.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/_validate-collection.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
module.exports = function (it, TYPE) {
  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
  return it;
};


/***/ }),

/***/ "../node_modules/core-js/modules/_wks-define.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/_wks-define.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var core = __webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js");
var LIBRARY = __webpack_require__(/*! ./_library */ "../node_modules/core-js/modules/_library.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "../node_modules/core-js/modules/_wks-ext.js");
var defineProperty = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),

/***/ "../node_modules/core-js/modules/_wks-ext.js":
/*!***************************************************!*\
  !*** ../node_modules/core-js/modules/_wks-ext.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

exports.f = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js");


/***/ }),

/***/ "../node_modules/core-js/modules/_wks.js":
/*!***********************************************!*\
  !*** ../node_modules/core-js/modules/_wks.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var store = __webpack_require__(/*! ./_shared */ "../node_modules/core-js/modules/_shared.js")('wks');
var uid = __webpack_require__(/*! ./_uid */ "../node_modules/core-js/modules/_uid.js");
var Symbol = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),

/***/ "../node_modules/core-js/modules/core.get-iterator-method.js":
/*!*******************************************************************!*\
  !*** ../node_modules/core-js/modules/core.get-iterator-method.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(/*! ./_classof */ "../node_modules/core-js/modules/_classof.js");
var ITERATOR = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('iterator');
var Iterators = __webpack_require__(/*! ./_iterators */ "../node_modules/core-js/modules/_iterators.js");
module.exports = __webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js").getIteratorMethod = function (it) {
  if (it != undefined) return it[ITERATOR]
    || it['@@iterator']
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.copy-within.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.copy-within.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.P, 'Array', { copyWithin: __webpack_require__(/*! ./_array-copy-within */ "../node_modules/core-js/modules/_array-copy-within.js") });

__webpack_require__(/*! ./_add-to-unscopables */ "../node_modules/core-js/modules/_add-to-unscopables.js")('copyWithin');


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.every.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.every.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $every = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(4);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")([].every, true), 'Array', {
  // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.fill.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.fill.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.P, 'Array', { fill: __webpack_require__(/*! ./_array-fill */ "../node_modules/core-js/modules/_array-fill.js") });

__webpack_require__(/*! ./_add-to-unscopables */ "../node_modules/core-js/modules/_add-to-unscopables.js")('fill');


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.filter.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.filter.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $filter = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(2);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")([].filter, true), 'Array', {
  // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.find-index.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.find-index.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $find = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(6);
var KEY = 'findIndex';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(/*! ./_add-to-unscopables */ "../node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.find.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.find.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $find = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(5);
var KEY = 'find';
var forced = true;
// Shouldn't skip holes
if (KEY in []) Array(1)[KEY](function () { forced = false; });
$export($export.P + $export.F * forced, 'Array', {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});
__webpack_require__(/*! ./_add-to-unscopables */ "../node_modules/core-js/modules/_add-to-unscopables.js")(KEY);


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.for-each.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.for-each.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $forEach = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(0);
var STRICT = __webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")([].forEach, true);

$export($export.P + $export.F * !STRICT, 'Array', {
  // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
  forEach: function forEach(callbackfn /* , thisArg */) {
    return $forEach(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.from.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.from.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var call = __webpack_require__(/*! ./_iter-call */ "../node_modules/core-js/modules/_iter-call.js");
var isArrayIter = __webpack_require__(/*! ./_is-array-iter */ "../node_modules/core-js/modules/_is-array-iter.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "../node_modules/core-js/modules/_create-property.js");
var getIterFn = __webpack_require__(/*! ./core.get-iterator-method */ "../node_modules/core-js/modules/core.get-iterator-method.js");

$export($export.S + $export.F * !__webpack_require__(/*! ./_iter-detect */ "../node_modules/core-js/modules/_iter-detect.js")(function (iter) { Array.from(iter); }), 'Array', {
  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
    var O = toObject(arrayLike);
    var C = typeof this == 'function' ? this : Array;
    var aLen = arguments.length;
    var mapfn = aLen > 1 ? arguments[1] : undefined;
    var mapping = mapfn !== undefined;
    var index = 0;
    var iterFn = getIterFn(O);
    var length, result, step, iterator;
    if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
    // if object isn't iterable or it's array with default iterator - use simple case
    if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
      }
    } else {
      length = toLength(O.length);
      for (result = new C(length); length > index; index++) {
        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
      }
    }
    result.length = index;
    return result;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.index-of.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.index-of.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $indexOf = __webpack_require__(/*! ./_array-includes */ "../node_modules/core-js/modules/_array-includes.js")(false);
var $native = [].indexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")($native)), 'Array', {
  // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? $native.apply(this, arguments) || 0
      : $indexOf(this, searchElement, arguments[1]);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.is-array.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.is-array.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Array', { isArray: __webpack_require__(/*! ./_is-array */ "../node_modules/core-js/modules/_is-array.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.iterator.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.iterator.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var addToUnscopables = __webpack_require__(/*! ./_add-to-unscopables */ "../node_modules/core-js/modules/_add-to-unscopables.js");
var step = __webpack_require__(/*! ./_iter-step */ "../node_modules/core-js/modules/_iter-step.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../node_modules/core-js/modules/_iterators.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(/*! ./_iter-define */ "../node_modules/core-js/modules/_iter-define.js")(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.join.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.join.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 22.1.3.13 Array.prototype.join(separator)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var arrayJoin = [].join;

// fallback for not array-like strings
$export($export.P + $export.F * (__webpack_require__(/*! ./_iobject */ "../node_modules/core-js/modules/_iobject.js") != Object || !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")(arrayJoin)), 'Array', {
  join: function join(separator) {
    return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.last-index-of.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.last-index-of.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var $native = [].lastIndexOf;
var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

$export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")($native)), 'Array', {
  // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
  lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
    // convert -0 to +0
    if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
    var O = toIObject(this);
    var length = toLength(O.length);
    var index = length - 1;
    if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
    if (index < 0) index = length + index;
    for (;index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
    return -1;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.map.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.map.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $map = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(1);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")([].map, true), 'Array', {
  // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.of.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.of.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "../node_modules/core-js/modules/_create-property.js");

// WebKit Array.of isn't generic
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
}), 'Array', {
  // 22.1.2.3 Array.of( ...items)
  of: function of(/* ...args */) {
    var index = 0;
    var aLen = arguments.length;
    var result = new (typeof this == 'function' ? this : Array)(aLen);
    while (aLen > index) createProperty(result, index, arguments[index++]);
    result.length = aLen;
    return result;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.reduce-right.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.reduce-right.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $reduce = __webpack_require__(/*! ./_array-reduce */ "../node_modules/core-js/modules/_array-reduce.js");

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")([].reduceRight, true), 'Array', {
  // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], true);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.reduce.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.reduce.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $reduce = __webpack_require__(/*! ./_array-reduce */ "../node_modules/core-js/modules/_array-reduce.js");

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")([].reduce, true), 'Array', {
  // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
  reduce: function reduce(callbackfn /* , initialValue */) {
    return $reduce(this, callbackfn, arguments.length, arguments[1], false);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.slice.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.slice.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var html = __webpack_require__(/*! ./_html */ "../node_modules/core-js/modules/_html.js");
var cof = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
$export($export.P + $export.F * __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  if (html) arraySlice.call(html);
}), 'Array', {
  slice: function slice(begin, end) {
    var len = toLength(this.length);
    var klass = cof(this);
    end = end === undefined ? len : end;
    if (klass == 'Array') return arraySlice.call(this, begin, end);
    var start = toAbsoluteIndex(begin, len);
    var upTo = toAbsoluteIndex(end, len);
    var size = toLength(upTo - start);
    var cloned = new Array(size);
    var i = 0;
    for (; i < size; i++) cloned[i] = klass == 'String'
      ? this.charAt(start + i)
      : this[start + i];
    return cloned;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.some.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.some.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $some = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(3);

$export($export.P + $export.F * !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")([].some, true), 'Array', {
  // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments[1]);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.sort.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.sort.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__(/*! ./_strict-method */ "../node_modules/core-js/modules/_strict-method.js")($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.array.species.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.array.species.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_set-species */ "../node_modules/core-js/modules/_set-species.js")('Array');


/***/ }),

/***/ "../node_modules/core-js/modules/es6.date.now.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/es6.date.now.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.3.3.1 / 15.9.4.4 Date.now()
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Date', { now: function () { return new Date().getTime(); } });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.date.to-iso-string.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.date.to-iso-string.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toISOString = __webpack_require__(/*! ./_date-to-iso-string */ "../node_modules/core-js/modules/_date-to-iso-string.js");

// PhantomJS / old WebKit has a broken implementations
$export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
  toISOString: toISOString
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.date.to-json.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.date.to-json.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");

$export($export.P + $export.F * __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
}), 'Date', {
  // eslint-disable-next-line no-unused-vars
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O);
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.date.to-primitive.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.date.to-primitive.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var TO_PRIMITIVE = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('toPrimitive');
var proto = Date.prototype;

if (!(TO_PRIMITIVE in proto)) __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js")(proto, TO_PRIMITIVE, __webpack_require__(/*! ./_date-to-primitive */ "../node_modules/core-js/modules/_date-to-primitive.js"));


/***/ }),

/***/ "../node_modules/core-js/modules/es6.date.to-string.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.date.to-string.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var DateProto = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var $toString = DateProto[TO_STRING];
var getTime = DateProto.getTime;
if (new Date(NaN) + '' != INVALID_DATE) {
  __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js")(DateProto, TO_STRING, function toString() {
    var value = getTime.call(this);
    // eslint-disable-next-line no-self-compare
    return value === value ? $toString.call(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es6.function.bind.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.function.bind.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.P, 'Function', { bind: __webpack_require__(/*! ./_bind */ "../node_modules/core-js/modules/_bind.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.function.has-instance.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.function.has-instance.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../node_modules/core-js/modules/_object-gpo.js");
var HAS_INSTANCE = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('hasInstance');
var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f(FunctionProto, HAS_INSTANCE, { value: function (O) {
  if (typeof this != 'function' || !isObject(O)) return false;
  if (!isObject(this.prototype)) return O instanceof this;
  // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
  while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
  return false;
} });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.function.name.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.function.name.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
var FProto = Function.prototype;
var nameRE = /^\s*function ([^ (]*)/;
var NAME = 'name';

// 19.2.4.2 name
NAME in FProto || __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") && dP(FProto, NAME, {
  configurable: true,
  get: function () {
    try {
      return ('' + this).match(nameRE)[1];
    } catch (e) {
      return '';
    }
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.map.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/es6.map.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "../node_modules/core-js/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "../node_modules/core-js/modules/_validate-collection.js");
var MAP = 'Map';

// 23.1 Map Objects
module.exports = __webpack_require__(/*! ./_collection */ "../node_modules/core-js/modules/_collection.js")(MAP, function (get) {
  return function Map() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.1.3.6 Map.prototype.get(key)
  get: function get(key) {
    var entry = strong.getEntry(validate(this, MAP), key);
    return entry && entry.v;
  },
  // 23.1.3.9 Map.prototype.set(key, value)
  set: function set(key, value) {
    return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
  }
}, strong, true);


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.acosh.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.acosh.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.3 Math.acosh(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var log1p = __webpack_require__(/*! ./_math-log1p */ "../node_modules/core-js/modules/_math-log1p.js");
var sqrt = Math.sqrt;
var $acosh = Math.acosh;

$export($export.S + $export.F * !($acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  && Math.floor($acosh(Number.MAX_VALUE)) == 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  && $acosh(Infinity) == Infinity
), 'Math', {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? Math.log(x) + Math.LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.asinh.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.asinh.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.5 Math.asinh(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $asinh = Math.asinh;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
}

// Tor Browser bug: Math.asinh(0) -> -0
$export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', { asinh: asinh });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.atanh.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.atanh.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.7 Math.atanh(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
$export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.cbrt.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.cbrt.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.9 Math.cbrt(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var sign = __webpack_require__(/*! ./_math-sign */ "../node_modules/core-js/modules/_math-sign.js");

$export($export.S, 'Math', {
  cbrt: function cbrt(x) {
    return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.clz32.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.clz32.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.11 Math.clz32(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.cosh.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.cosh.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.12 Math.cosh(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var exp = Math.exp;

$export($export.S, 'Math', {
  cosh: function cosh(x) {
    return (exp(x = +x) + exp(-x)) / 2;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.expm1.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.expm1.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.14 Math.expm1(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $expm1 = __webpack_require__(/*! ./_math-expm1 */ "../node_modules/core-js/modules/_math-expm1.js");

$export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', { expm1: $expm1 });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.fround.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.fround.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.16 Math.fround(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', { fround: __webpack_require__(/*! ./_math-fround */ "../node_modules/core-js/modules/_math-fround.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.hypot.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.hypot.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var abs = Math.abs;

$export($export.S, 'Math', {
  hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.imul.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.imul.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.18 Math.imul(x, y)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
}), 'Math', {
  imul: function imul(x, y) {
    var UINT16 = 0xffff;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.log10.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.log10.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.21 Math.log10(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  log10: function log10(x) {
    return Math.log(x) * Math.LOG10E;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.log1p.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.log1p.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.20 Math.log1p(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', { log1p: __webpack_require__(/*! ./_math-log1p */ "../node_modules/core-js/modules/_math-log1p.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.log2.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.log2.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.22 Math.log2(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  log2: function log2(x) {
    return Math.log(x) / Math.LN2;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.sign.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.sign.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.28 Math.sign(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', { sign: __webpack_require__(/*! ./_math-sign */ "../node_modules/core-js/modules/_math-sign.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.sinh.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.sinh.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.30 Math.sinh(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var expm1 = __webpack_require__(/*! ./_math-expm1 */ "../node_modules/core-js/modules/_math-expm1.js");
var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  return !Math.sinh(-2e-17) != -2e-17;
}), 'Math', {
  sinh: function sinh(x) {
    return Math.abs(x = +x) < 1
      ? (expm1(x) - expm1(-x)) / 2
      : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.tanh.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.tanh.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.33 Math.tanh(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var expm1 = __webpack_require__(/*! ./_math-expm1 */ "../node_modules/core-js/modules/_math-expm1.js");
var exp = Math.exp;

$export($export.S, 'Math', {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.math.trunc.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.math.trunc.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.2.2.34 Math.trunc(x)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Math', {
  trunc: function trunc(it) {
    return (it > 0 ? Math.floor : Math.ceil)(it);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.constructor.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.constructor.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var cof = __webpack_require__(/*! ./_cof */ "../node_modules/core-js/modules/_cof.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "../node_modules/core-js/modules/_inherit-if-required.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var gOPN = __webpack_require__(/*! ./_object-gopn */ "../node_modules/core-js/modules/_object-gopn.js").f;
var gOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js").f;
var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
var $trim = __webpack_require__(/*! ./_string-trim */ "../node_modules/core-js/modules/_string-trim.js").trim;
var NUMBER = 'Number';
var $Number = global[NUMBER];
var Base = $Number;
var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
var BROKEN_COF = cof(__webpack_require__(/*! ./_object-create */ "../node_modules/core-js/modules/_object-create.js")(proto)) == NUMBER;
var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
var toNumber = function (argument) {
  var it = toPrimitive(argument, false);
  if (typeof it == 'string' && it.length > 2) {
    it = TRIM ? it.trim() : $trim(it, 3);
    var first = it.charCodeAt(0);
    var third, radix, maxCode;
    if (first === 43 || first === 45) {
      third = it.charCodeAt(2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (it.charCodeAt(1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i
        default: return +it;
      }
      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
        code = digits.charCodeAt(i);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
  $Number = function Number(value) {
    var it = arguments.length < 1 ? 0 : value;
    var that = this;
    return that instanceof $Number
      // check on 1..constructor(foo) case
      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)
        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
  };
  for (var keys = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") ? gOPN(Base) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES6 (in case, if modules with ES6 Number statics required before):
    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (has(Base, key = keys[j]) && !has($Number, key)) {
      dP($Number, key, gOPD(Base, key));
    }
  }
  $Number.prototype = proto;
  proto.constructor = $Number;
  __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js")(global, NUMBER, $Number);
}


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.epsilon.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.epsilon.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.1 Number.EPSILON
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { EPSILON: Math.pow(2, -52) });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.is-finite.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.is-finite.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.2 Number.isFinite(number)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var _isFinite = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").isFinite;

$export($export.S, 'Number', {
  isFinite: function isFinite(it) {
    return typeof it == 'number' && _isFinite(it);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.is-integer.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.is-integer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.3 Number.isInteger(number)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { isInteger: __webpack_require__(/*! ./_is-integer */ "../node_modules/core-js/modules/_is-integer.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.is-nan.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.is-nan.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.4 Number.isNaN(number)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare
    return number != number;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.is-safe-integer.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.is-safe-integer.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.5 Number.isSafeInteger(number)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var isInteger = __webpack_require__(/*! ./_is-integer */ "../node_modules/core-js/modules/_is-integer.js");
var abs = Math.abs;

$export($export.S, 'Number', {
  isSafeInteger: function isSafeInteger(number) {
    return isInteger(number) && abs(number) <= 0x1fffffffffffff;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.max-safe-integer.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.max-safe-integer.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { MAX_SAFE_INTEGER: 0x1fffffffffffff });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.min-safe-integer.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.min-safe-integer.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Number', { MIN_SAFE_INTEGER: -0x1fffffffffffff });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.parse-float.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.parse-float.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $parseFloat = __webpack_require__(/*! ./_parse-float */ "../node_modules/core-js/modules/_parse-float.js");
// 20.1.2.12 Number.parseFloat(string)
$export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', { parseFloat: $parseFloat });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.parse-int.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.parse-int.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $parseInt = __webpack_require__(/*! ./_parse-int */ "../node_modules/core-js/modules/_parse-int.js");
// 20.1.2.13 Number.parseInt(string, radix)
$export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', { parseInt: $parseInt });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.to-fixed.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.to-fixed.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var aNumberValue = __webpack_require__(/*! ./_a-number-value */ "../node_modules/core-js/modules/_a-number-value.js");
var repeat = __webpack_require__(/*! ./_string-repeat */ "../node_modules/core-js/modules/_string-repeat.js");
var $toFixed = 1.0.toFixed;
var floor = Math.floor;
var data = [0, 0, 0, 0, 0, 0];
var ERROR = 'Number.toFixed: incorrect invocation!';
var ZERO = '0';

var multiply = function (n, c) {
  var i = -1;
  var c2 = c;
  while (++i < 6) {
    c2 += n * data[i];
    data[i] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};
var divide = function (n) {
  var i = 6;
  var c = 0;
  while (--i >= 0) {
    c += data[i];
    data[i] = floor(c / n);
    c = (c % n) * 1e7;
  }
};
var numToString = function () {
  var i = 6;
  var s = '';
  while (--i >= 0) {
    if (s !== '' || i === 0 || data[i] !== 0) {
      var t = String(data[i]);
      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
    }
  } return s;
};
var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};
var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

$export($export.P + $export.F * (!!$toFixed && (
  0.00008.toFixed(3) !== '0.000' ||
  0.9.toFixed(0) !== '1' ||
  1.255.toFixed(2) !== '1.25' ||
  1000000000000000128.0.toFixed(0) !== '1000000000000000128'
) || !__webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  // V8 ~ Android 4.3-
  $toFixed.call({});
})), 'Number', {
  toFixed: function toFixed(fractionDigits) {
    var x = aNumberValue(this, ERROR);
    var f = toInteger(fractionDigits);
    var s = '';
    var m = ZERO;
    var e, z, j, k;
    if (f < 0 || f > 20) throw RangeError(ERROR);
    // eslint-disable-next-line no-self-compare
    if (x != x) return 'NaN';
    if (x <= -1e21 || x >= 1e21) return String(x);
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x > 1e-21) {
      e = log(x * pow(2, 69, 1)) - 69;
      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(0, z);
        j = f;
        while (j >= 7) {
          multiply(1e7, 0);
          j -= 7;
        }
        multiply(pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(1 << 23);
          j -= 23;
        }
        divide(1 << j);
        multiply(1, 1);
        divide(2);
        m = numToString();
      } else {
        multiply(0, z);
        multiply(1 << -e, 0);
        m = numToString() + repeat.call(ZERO, f);
      }
    }
    if (f > 0) {
      k = m.length;
      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
    } else {
      m = s + m;
    } return m;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.number.to-precision.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.number.to-precision.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var aNumberValue = __webpack_require__(/*! ./_a-number-value */ "../node_modules/core-js/modules/_a-number-value.js");
var $toPrecision = 1.0.toPrecision;

$export($export.P + $export.F * ($fails(function () {
  // IE7-
  return $toPrecision.call(1, undefined) !== '1';
}) || !$fails(function () {
  // V8 ~ Android 4.3-
  $toPrecision.call({});
})), 'Number', {
  toPrecision: function toPrecision(precision) {
    var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
    return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.assign.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.assign.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.3.1 Object.assign(target, source)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S + $export.F, 'Object', { assign: __webpack_require__(/*! ./_object-assign */ "../node_modules/core-js/modules/_object-assign.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.create.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.create.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
$export($export.S, 'Object', { create: __webpack_require__(/*! ./_object-create */ "../node_modules/core-js/modules/_object-create.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.define-properties.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.define-properties.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js"), 'Object', { defineProperties: __webpack_require__(/*! ./_object-dps */ "../node_modules/core-js/modules/_object-dps.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.define-property.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.define-property.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
$export($export.S + $export.F * !__webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js"), 'Object', { defineProperty: __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.freeze.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.freeze.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.5 Object.freeze(O)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var meta = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js").onFreeze;

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('freeze', function ($freeze) {
  return function freeze(it) {
    return $freeze && isObject(it) ? $freeze(meta(it)) : it;
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.get-own-property-descriptor.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var $getOwnPropertyDescriptor = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js").f;

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('getOwnPropertyDescriptor', function () {
  return function getOwnPropertyDescriptor(it, key) {
    return $getOwnPropertyDescriptor(toIObject(it), key);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.get-own-property-names.js":
/*!****************************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.get-own-property-names.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.7 Object.getOwnPropertyNames(O)
__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('getOwnPropertyNames', function () {
  return __webpack_require__(/*! ./_object-gopn-ext */ "../node_modules/core-js/modules/_object-gopn-ext.js").f;
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.get-prototype-of.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.get-prototype-of.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.9 Object.getPrototypeOf(O)
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var $getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../node_modules/core-js/modules/_object-gpo.js");

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('getPrototypeOf', function () {
  return function getPrototypeOf(it) {
    return $getPrototypeOf(toObject(it));
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.is-extensible.js":
/*!*******************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.is-extensible.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.11 Object.isExtensible(O)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('isExtensible', function ($isExtensible) {
  return function isExtensible(it) {
    return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.is-frozen.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.is-frozen.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.12 Object.isFrozen(O)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('isFrozen', function ($isFrozen) {
  return function isFrozen(it) {
    return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.is-sealed.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.is-sealed.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.13 Object.isSealed(O)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('isSealed', function ($isSealed) {
  return function isSealed(it) {
    return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.is.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.is.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.3.10 Object.is(value1, value2)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
$export($export.S, 'Object', { is: __webpack_require__(/*! ./_same-value */ "../node_modules/core-js/modules/_same-value.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.keys.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.keys.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.14 Object.keys(O)
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "../node_modules/core-js/modules/_object-keys.js");

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('keys', function () {
  return function keys(it) {
    return $keys(toObject(it));
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.prevent-extensions.js":
/*!************************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.prevent-extensions.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.15 Object.preventExtensions(O)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var meta = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js").onFreeze;

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('preventExtensions', function ($preventExtensions) {
  return function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.seal.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.seal.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.2.17 Object.seal(O)
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var meta = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js").onFreeze;

__webpack_require__(/*! ./_object-sap */ "../node_modules/core-js/modules/_object-sap.js")('seal', function ($seal) {
  return function seal(it) {
    return $seal && isObject(it) ? $seal(meta(it)) : it;
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.set-prototype-of.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.set-prototype-of.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
$export($export.S, 'Object', { setPrototypeOf: __webpack_require__(/*! ./_set-proto */ "../node_modules/core-js/modules/_set-proto.js").set });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.object.to-string.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.object.to-string.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 19.1.3.6 Object.prototype.toString()
var classof = __webpack_require__(/*! ./_classof */ "../node_modules/core-js/modules/_classof.js");
var test = {};
test[__webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('toStringTag')] = 'z';
if (test + '' != '[object z]') {
  __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js")(Object.prototype, 'toString', function toString() {
    return '[object ' + classof(this) + ']';
  }, true);
}


/***/ }),

/***/ "../node_modules/core-js/modules/es6.parse-float.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.parse-float.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $parseFloat = __webpack_require__(/*! ./_parse-float */ "../node_modules/core-js/modules/_parse-float.js");
// 18.2.4 parseFloat(string)
$export($export.G + $export.F * (parseFloat != $parseFloat), { parseFloat: $parseFloat });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.parse-int.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.parse-int.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $parseInt = __webpack_require__(/*! ./_parse-int */ "../node_modules/core-js/modules/_parse-int.js");
// 18.2.5 parseInt(string, radix)
$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.promise.js":
/*!******************************************************!*\
  !*** ../node_modules/core-js/modules/es6.promise.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var LIBRARY = __webpack_require__(/*! ./_library */ "../node_modules/core-js/modules/_library.js");
var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var ctx = __webpack_require__(/*! ./_ctx */ "../node_modules/core-js/modules/_ctx.js");
var classof = __webpack_require__(/*! ./_classof */ "../node_modules/core-js/modules/_classof.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var anInstance = __webpack_require__(/*! ./_an-instance */ "../node_modules/core-js/modules/_an-instance.js");
var forOf = __webpack_require__(/*! ./_for-of */ "../node_modules/core-js/modules/_for-of.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "../node_modules/core-js/modules/_species-constructor.js");
var task = __webpack_require__(/*! ./_task */ "../node_modules/core-js/modules/_task.js").set;
var microtask = __webpack_require__(/*! ./_microtask */ "../node_modules/core-js/modules/_microtask.js")();
var newPromiseCapabilityModule = __webpack_require__(/*! ./_new-promise-capability */ "../node_modules/core-js/modules/_new-promise-capability.js");
var perform = __webpack_require__(/*! ./_perform */ "../node_modules/core-js/modules/_perform.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "../node_modules/core-js/modules/_user-agent.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "../node_modules/core-js/modules/_promise-resolve.js");
var PROMISE = 'Promise';
var TypeError = global.TypeError;
var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8 || '';
var $Promise = global[PROMISE];
var isNode = classof(process) == 'process';
var empty = function () { /* empty */ };
var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

var USE_NATIVE = !!function () {
  try {
    // correct subclassing with @@species support
    var promise = $Promise.resolve(1);
    var FakePromise = (promise.constructor = {})[__webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('species')] = function (exec) {
      exec(empty, empty);
    };
    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
    return (isNode || typeof PromiseRejectionEvent == 'function')
      && promise.then(empty) instanceof FakePromise
      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
      // we can't detect it synchronously, so just check versions
      && v8.indexOf('6.6') !== 0
      && userAgent.indexOf('Chrome/66') === -1;
  } catch (e) { /* empty */ }
}();

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};
var notify = function (promise, isReject) {
  if (promise._n) return;
  promise._n = true;
  var chain = promise._c;
  microtask(function () {
    var value = promise._v;
    var ok = promise._s == 1;
    var i = 0;
    var run = function (reaction) {
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;
      try {
        if (handler) {
          if (!ok) {
            if (promise._h == 2) onHandleUnhandled(promise);
            promise._h = 1;
          }
          if (handler === true) result = value;
          else {
            if (domain) domain.enter();
            result = handler(value); // may throw
            if (domain) {
              domain.exit();
              exited = true;
            }
          }
          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (e) {
        if (domain && !exited) domain.exit();
        reject(e);
      }
    };
    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
    promise._c = [];
    promise._n = false;
    if (isReject && !promise._h) onUnhandled(promise);
  });
};
var onUnhandled = function (promise) {
  task.call(global, function () {
    var value = promise._v;
    var unhandled = isUnhandled(promise);
    var result, handler, console;
    if (unhandled) {
      result = perform(function () {
        if (isNode) {
          process.emit('unhandledRejection', value, promise);
        } else if (handler = global.onunhandledrejection) {
          handler({ promise: promise, reason: value });
        } else if ((console = global.console) && console.error) {
          console.error('Unhandled promise rejection', value);
        }
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      promise._h = isNode || isUnhandled(promise) ? 2 : 1;
    } promise._a = undefined;
    if (unhandled && result.e) throw result.v;
  });
};
var isUnhandled = function (promise) {
  return promise._h !== 1 && (promise._a || promise._c).length === 0;
};
var onHandleUnhandled = function (promise) {
  task.call(global, function () {
    var handler;
    if (isNode) {
      process.emit('rejectionHandled', promise);
    } else if (handler = global.onrejectionhandled) {
      handler({ promise: promise, reason: promise._v });
    }
  });
};
var $reject = function (value) {
  var promise = this;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  promise._v = value;
  promise._s = 2;
  if (!promise._a) promise._a = promise._c.slice();
  notify(promise, true);
};
var $resolve = function (value) {
  var promise = this;
  var then;
  if (promise._d) return;
  promise._d = true;
  promise = promise._w || promise; // unwrap
  try {
    if (promise === value) throw TypeError("Promise can't be resolved itself");
    if (then = isThenable(value)) {
      microtask(function () {
        var wrapper = { _w: promise, _d: false }; // wrap
        try {
          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
        } catch (e) {
          $reject.call(wrapper, e);
        }
      });
    } else {
      promise._v = value;
      promise._s = 1;
      notify(promise, false);
    }
  } catch (e) {
    $reject.call({ _w: promise, _d: false }, e); // wrap
  }
};

// constructor polyfill
if (!USE_NATIVE) {
  // 25.4.3.1 Promise(executor)
  $Promise = function Promise(executor) {
    anInstance(this, $Promise, PROMISE, '_h');
    aFunction(executor);
    Internal.call(this);
    try {
      executor(ctx($resolve, this, 1), ctx($reject, this, 1));
    } catch (err) {
      $reject.call(this, err);
    }
  };
  // eslint-disable-next-line no-unused-vars
  Internal = function Promise(executor) {
    this._c = [];             // <- awaiting reactions
    this._a = undefined;      // <- checked in isUnhandled reactions
    this._s = 0;              // <- state
    this._d = false;          // <- done
    this._v = undefined;      // <- value
    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
    this._n = false;          // <- notify
  };
  Internal.prototype = __webpack_require__(/*! ./_redefine-all */ "../node_modules/core-js/modules/_redefine-all.js")($Promise.prototype, {
    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
    then: function then(onFulfilled, onRejected) {
      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = isNode ? process.domain : undefined;
      this._c.push(reaction);
      if (this._a) this._a.push(reaction);
      if (this._s) notify(this, false);
      return reaction.promise;
    },
    // 25.4.5.1 Promise.prototype.catch(onRejected)
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    this.promise = promise;
    this.resolve = ctx($resolve, promise, 1);
    this.reject = ctx($reject, promise, 1);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === $Promise || C === Wrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });
__webpack_require__(/*! ./_set-to-string-tag */ "../node_modules/core-js/modules/_set-to-string-tag.js")($Promise, PROMISE);
__webpack_require__(/*! ./_set-species */ "../node_modules/core-js/modules/_set-species.js")(PROMISE);
Wrapper = __webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js")[PROMISE];

// statics
$export($export.S + $export.F * !USE_NATIVE, PROMISE, {
  // 25.4.4.5 Promise.reject(r)
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    var $$reject = capability.reject;
    $$reject(r);
    return capability.promise;
  }
});
$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
  // 25.4.4.6 Promise.resolve(x)
  resolve: function resolve(x) {
    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
  }
});
$export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(/*! ./_iter-detect */ "../node_modules/core-js/modules/_iter-detect.js")(function (iter) {
  $Promise.all(iter)['catch'](empty);
})), PROMISE, {
  // 25.4.4.1 Promise.all(iterable)
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var values = [];
      var index = 0;
      var remaining = 1;
      forOf(iterable, false, function (promise) {
        var $index = index++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        C.resolve(promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[$index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.e) reject(result.v);
    return capability.promise;
  },
  // 25.4.4.4 Promise.race(iterable)
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      forOf(iterable, false, function (promise) {
        C.resolve(promise).then(capability.resolve, reject);
      });
    });
    if (result.e) reject(result.v);
    return capability.promise;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.apply.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.apply.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var rApply = (__webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").Reflect || {}).apply;
var fApply = Function.apply;
// MS Edge argumentsList argument is optional
$export($export.S + $export.F * !__webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  rApply(function () { /* empty */ });
}), 'Reflect', {
  apply: function apply(target, thisArgument, argumentsList) {
    var T = aFunction(target);
    var L = anObject(argumentsList);
    return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.construct.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.construct.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var create = __webpack_require__(/*! ./_object-create */ "../node_modules/core-js/modules/_object-create.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var bind = __webpack_require__(/*! ./_bind */ "../node_modules/core-js/modules/_bind.js");
var rConstruct = (__webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(rConstruct(function () { /* empty */ }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  rConstruct(function () { /* empty */ });
});

$export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
  construct: function construct(Target, args /* , newTarget */) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.define-property.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.define-property.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
$export($export.S + $export.F * __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  // eslint-disable-next-line no-undef
  Reflect.defineProperty(dP.f({}, 1, { value: 1 }), 1, { value: 2 });
}), 'Reflect', {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    propertyKey = toPrimitive(propertyKey, true);
    anObject(attributes);
    try {
      dP.f(target, propertyKey, attributes);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.delete-property.js":
/*!**********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.delete-property.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.4 Reflect.deleteProperty(target, propertyKey)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var gOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js").f;
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");

$export($export.S, 'Reflect', {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var desc = gOPD(anObject(target), propertyKey);
    return desc && !desc.configurable ? false : delete target[propertyKey];
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.enumerate.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.enumerate.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 26.1.5 Reflect.enumerate(target)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var Enumerate = function (iterated) {
  this._t = anObject(iterated); // target
  this._i = 0;                  // next index
  var keys = this._k = [];      // keys
  var key;
  for (key in iterated) keys.push(key);
};
__webpack_require__(/*! ./_iter-create */ "../node_modules/core-js/modules/_iter-create.js")(Enumerate, 'Object', function () {
  var that = this;
  var keys = that._k;
  var key;
  do {
    if (that._i >= keys.length) return { value: undefined, done: true };
  } while (!((key = keys[that._i++]) in that._t));
  return { value: key, done: false };
});

$export($export.S, 'Reflect', {
  enumerate: function enumerate(target) {
    return new Enumerate(target);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.get-own-property-descriptor.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
var gOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");

$export($export.S, 'Reflect', {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return gOPD.f(anObject(target), propertyKey);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.get-prototype-of.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.get-prototype-of.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.8 Reflect.getPrototypeOf(target)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var getProto = __webpack_require__(/*! ./_object-gpo */ "../node_modules/core-js/modules/_object-gpo.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");

$export($export.S, 'Reflect', {
  getPrototypeOf: function getPrototypeOf(target) {
    return getProto(anObject(target));
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.get.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.get.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
var gOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../node_modules/core-js/modules/_object-gpo.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");

function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var desc, proto;
  if (anObject(target) === receiver) return target[propertyKey];
  if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
    ? desc.value
    : desc.get !== undefined
      ? desc.get.call(receiver)
      : undefined;
  if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
}

$export($export.S, 'Reflect', { get: get });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.has.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.has.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.9 Reflect.has(target, propertyKey)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Reflect', {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.is-extensible.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.is-extensible.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.10 Reflect.isExtensible(target)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var $isExtensible = Object.isExtensible;

$export($export.S, 'Reflect', {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible ? $isExtensible(target) : true;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.own-keys.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.own-keys.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.11 Reflect.ownKeys(target)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.S, 'Reflect', { ownKeys: __webpack_require__(/*! ./_own-keys */ "../node_modules/core-js/modules/_own-keys.js") });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.prevent-extensions.js":
/*!*************************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.prevent-extensions.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.12 Reflect.preventExtensions(target)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var $preventExtensions = Object.preventExtensions;

$export($export.S, 'Reflect', {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      if ($preventExtensions) $preventExtensions(target);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.set-prototype-of.js":
/*!***********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.set-prototype-of.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.14 Reflect.setPrototypeOf(target, proto)
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var setProto = __webpack_require__(/*! ./_set-proto */ "../node_modules/core-js/modules/_set-proto.js");

if (setProto) $export($export.S, 'Reflect', {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    setProto.check(target, proto);
    try {
      setProto.set(target, proto);
      return true;
    } catch (e) {
      return false;
    }
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.reflect.set.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.reflect.set.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
var gOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js");
var getPrototypeOf = __webpack_require__(/*! ./_object-gpo */ "../node_modules/core-js/modules/_object-gpo.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/modules/_property-desc.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");

function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDesc = gOPD.f(anObject(target), propertyKey);
  var existingDescriptor, proto;
  if (!ownDesc) {
    if (isObject(proto = getPrototypeOf(target))) {
      return set(proto, propertyKey, V, receiver);
    }
    ownDesc = createDesc(0);
  }
  if (has(ownDesc, 'value')) {
    if (ownDesc.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      dP.f(receiver, propertyKey, existingDescriptor);
    } else dP.f(receiver, propertyKey, createDesc(0, V));
    return true;
  }
  return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
}

$export($export.S, 'Reflect', { set: set });


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.constructor.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.constructor.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var inheritIfRequired = __webpack_require__(/*! ./_inherit-if-required */ "../node_modules/core-js/modules/_inherit-if-required.js");
var dP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f;
var gOPN = __webpack_require__(/*! ./_object-gopn */ "../node_modules/core-js/modules/_object-gopn.js").f;
var isRegExp = __webpack_require__(/*! ./_is-regexp */ "../node_modules/core-js/modules/_is-regexp.js");
var $flags = __webpack_require__(/*! ./_flags */ "../node_modules/core-js/modules/_flags.js");
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") && (!CORRECT_NEW || __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  re2[__webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js")('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js")(global, 'RegExp', $RegExp);
}

__webpack_require__(/*! ./_set-species */ "../node_modules/core-js/modules/_set-species.js")('RegExp');


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.exec.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.exec.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "../node_modules/core-js/modules/_regexp-exec.js");
__webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js")({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.flags.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.flags.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js") && /./g.flags != 'g') __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js").f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(/*! ./_flags */ "../node_modules/core-js/modules/_flags.js")
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.match.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.match.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "../node_modules/core-js/modules/_advance-string-index.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "../node_modules/core-js/modules/_regexp-exec-abstract.js");

// @@match logic
__webpack_require__(/*! ./_fix-re-wks */ "../node_modules/core-js/modules/_fix-re-wks.js")('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.replace.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.replace.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var toInteger = __webpack_require__(/*! ./_to-integer */ "../node_modules/core-js/modules/_to-integer.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "../node_modules/core-js/modules/_advance-string-index.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "../node_modules/core-js/modules/_regexp-exec-abstract.js");
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__(/*! ./_fix-re-wks */ "../node_modules/core-js/modules/_fix-re-wks.js")('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.search.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.search.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var sameValue = __webpack_require__(/*! ./_same-value */ "../node_modules/core-js/modules/_same-value.js");
var regExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "../node_modules/core-js/modules/_regexp-exec-abstract.js");

// @@search logic
__webpack_require__(/*! ./_fix-re-wks */ "../node_modules/core-js/modules/_fix-re-wks.js")('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.split.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.split.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var isRegExp = __webpack_require__(/*! ./_is-regexp */ "../node_modules/core-js/modules/_is-regexp.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "../node_modules/core-js/modules/_species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ./_advance-string-index */ "../node_modules/core-js/modules/_advance-string-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var callRegExpExec = __webpack_require__(/*! ./_regexp-exec-abstract */ "../node_modules/core-js/modules/_regexp-exec-abstract.js");
var regexpExec = __webpack_require__(/*! ./_regexp-exec */ "../node_modules/core-js/modules/_regexp-exec.js");
var fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__(/*! ./_fix-re-wks */ "../node_modules/core-js/modules/_fix-re-wks.js")('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.regexp.to-string.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.regexp.to-string.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

__webpack_require__(/*! ./es6.regexp.flags */ "../node_modules/core-js/modules/es6.regexp.flags.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var $flags = __webpack_require__(/*! ./_flags */ "../node_modules/core-js/modules/_flags.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js");
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js")(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es6.set.js":
/*!**************************************************!*\
  !*** ../node_modules/core-js/modules/es6.set.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var strong = __webpack_require__(/*! ./_collection-strong */ "../node_modules/core-js/modules/_collection-strong.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "../node_modules/core-js/modules/_validate-collection.js");
var SET = 'Set';

// 23.2 Set Objects
module.exports = __webpack_require__(/*! ./_collection */ "../node_modules/core-js/modules/_collection.js")(SET, function (get) {
  return function Set() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.2.3.1 Set.prototype.add(value)
  add: function add(value) {
    return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
  }
}, strong);


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.anchor.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.anchor.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.2 String.prototype.anchor(name)
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('anchor', function (createHTML) {
  return function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.big.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.big.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.3 String.prototype.big()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('big', function (createHTML) {
  return function big() {
    return createHTML(this, 'big', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.blink.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.blink.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.4 String.prototype.blink()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('blink', function (createHTML) {
  return function blink() {
    return createHTML(this, 'blink', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.bold.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.bold.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.5 String.prototype.bold()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('bold', function (createHTML) {
  return function bold() {
    return createHTML(this, 'b', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.code-point-at.js":
/*!*******************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.code-point-at.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $at = __webpack_require__(/*! ./_string-at */ "../node_modules/core-js/modules/_string-at.js")(false);
$export($export.P, 'String', {
  // 21.1.3.3 String.prototype.codePointAt(pos)
  codePointAt: function codePointAt(pos) {
    return $at(this, pos);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.ends-with.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.ends-with.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var context = __webpack_require__(/*! ./_string-context */ "../node_modules/core-js/modules/_string-context.js");
var ENDS_WITH = 'endsWith';
var $endsWith = ''[ENDS_WITH];

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "../node_modules/core-js/modules/_fails-is-regexp.js")(ENDS_WITH), 'String', {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = context(this, searchString, ENDS_WITH);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = toLength(that.length);
    var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
    var search = String(searchString);
    return $endsWith
      ? $endsWith.call(that, search, end)
      : that.slice(end - search.length, end) === search;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.fixed.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.fixed.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.6 String.prototype.fixed()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('fixed', function (createHTML) {
  return function fixed() {
    return createHTML(this, 'tt', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.fontcolor.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.fontcolor.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.7 String.prototype.fontcolor(color)
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('fontcolor', function (createHTML) {
  return function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.fontsize.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.fontsize.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.8 String.prototype.fontsize(size)
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('fontsize', function (createHTML) {
  return function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.from-code-point.js":
/*!*********************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.from-code-point.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../node_modules/core-js/modules/_to-absolute-index.js");
var fromCharCode = String.fromCharCode;
var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
$export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
  // 21.1.2.2 String.fromCodePoint(...codePoints)
  fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
    var res = [];
    var aLen = arguments.length;
    var i = 0;
    var code;
    while (aLen > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
      res.push(code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
      );
    } return res.join('');
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.includes.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.includes.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var context = __webpack_require__(/*! ./_string-context */ "../node_modules/core-js/modules/_string-context.js");
var INCLUDES = 'includes';

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "../node_modules/core-js/modules/_fails-is-regexp.js")(INCLUDES), 'String', {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~context(this, searchString, INCLUDES)
      .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.italics.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.italics.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.9 String.prototype.italics()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('italics', function (createHTML) {
  return function italics() {
    return createHTML(this, 'i', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.iterator.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.iterator.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $at = __webpack_require__(/*! ./_string-at */ "../node_modules/core-js/modules/_string-at.js")(true);

// 21.1.3.27 String.prototype[@@iterator]()
__webpack_require__(/*! ./_iter-define */ "../node_modules/core-js/modules/_iter-define.js")(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.link.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.link.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.10 String.prototype.link(url)
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('link', function (createHTML) {
  return function link(url) {
    return createHTML(this, 'a', 'href', url);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.raw.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.raw.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");

$export($export.S, 'String', {
  // 21.1.2.4 String.raw(callSite, ...substitutions)
  raw: function raw(callSite) {
    var tpl = toIObject(callSite.raw);
    var len = toLength(tpl.length);
    var aLen = arguments.length;
    var res = [];
    var i = 0;
    while (len > i) {
      res.push(String(tpl[i++]));
      if (i < aLen) res.push(String(arguments[i]));
    } return res.join('');
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.repeat.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.repeat.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");

$export($export.P, 'String', {
  // 21.1.3.13 String.prototype.repeat(count)
  repeat: __webpack_require__(/*! ./_string-repeat */ "../node_modules/core-js/modules/_string-repeat.js")
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.small.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.small.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.11 String.prototype.small()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('small', function (createHTML) {
  return function small() {
    return createHTML(this, 'small', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.starts-with.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.starts-with.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var context = __webpack_require__(/*! ./_string-context */ "../node_modules/core-js/modules/_string-context.js");
var STARTS_WITH = 'startsWith';
var $startsWith = ''[STARTS_WITH];

$export($export.P + $export.F * __webpack_require__(/*! ./_fails-is-regexp */ "../node_modules/core-js/modules/_fails-is-regexp.js")(STARTS_WITH), 'String', {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = context(this, searchString, STARTS_WITH);
    var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith
      ? $startsWith.call(that, search, index)
      : that.slice(index, index + search.length) === search;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.strike.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.strike.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.12 String.prototype.strike()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('strike', function (createHTML) {
  return function strike() {
    return createHTML(this, 'strike', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.sub.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.sub.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.13 String.prototype.sub()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('sub', function (createHTML) {
  return function sub() {
    return createHTML(this, 'sub', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.sup.js":
/*!*********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.sup.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// B.2.3.14 String.prototype.sup()
__webpack_require__(/*! ./_string-html */ "../node_modules/core-js/modules/_string-html.js")('sup', function (createHTML) {
  return function sup() {
    return createHTML(this, 'sup', '', '');
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.string.trim.js":
/*!**********************************************************!*\
  !*** ../node_modules/core-js/modules/es6.string.trim.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// 21.1.3.25 String.prototype.trim()
__webpack_require__(/*! ./_string-trim */ "../node_modules/core-js/modules/_string-trim.js")('trim', function ($trim) {
  return function trim() {
    return $trim(this, 3);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.symbol.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/es6.symbol.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var has = __webpack_require__(/*! ./_has */ "../node_modules/core-js/modules/_has.js");
var DESCRIPTORS = __webpack_require__(/*! ./_descriptors */ "../node_modules/core-js/modules/_descriptors.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
var META = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js").KEY;
var $fails = __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js");
var shared = __webpack_require__(/*! ./_shared */ "../node_modules/core-js/modules/_shared.js");
var setToStringTag = __webpack_require__(/*! ./_set-to-string-tag */ "../node_modules/core-js/modules/_set-to-string-tag.js");
var uid = __webpack_require__(/*! ./_uid */ "../node_modules/core-js/modules/_uid.js");
var wks = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js");
var wksExt = __webpack_require__(/*! ./_wks-ext */ "../node_modules/core-js/modules/_wks-ext.js");
var wksDefine = __webpack_require__(/*! ./_wks-define */ "../node_modules/core-js/modules/_wks-define.js");
var enumKeys = __webpack_require__(/*! ./_enum-keys */ "../node_modules/core-js/modules/_enum-keys.js");
var isArray = __webpack_require__(/*! ./_is-array */ "../node_modules/core-js/modules/_is-array.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var toPrimitive = __webpack_require__(/*! ./_to-primitive */ "../node_modules/core-js/modules/_to-primitive.js");
var createDesc = __webpack_require__(/*! ./_property-desc */ "../node_modules/core-js/modules/_property-desc.js");
var _create = __webpack_require__(/*! ./_object-create */ "../node_modules/core-js/modules/_object-create.js");
var gOPNExt = __webpack_require__(/*! ./_object-gopn-ext */ "../node_modules/core-js/modules/_object-gopn-ext.js");
var $GOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js");
var $GOPS = __webpack_require__(/*! ./_object-gops */ "../node_modules/core-js/modules/_object-gops.js");
var $DP = __webpack_require__(/*! ./_object-dp */ "../node_modules/core-js/modules/_object-dp.js");
var $keys = __webpack_require__(/*! ./_object-keys */ "../node_modules/core-js/modules/_object-keys.js");
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(/*! ./_object-gopn */ "../node_modules/core-js/modules/_object-gopn.js").f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(/*! ./_object-pie */ "../node_modules/core-js/modules/_object-pie.js").f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(/*! ./_library */ "../node_modules/core-js/modules/_library.js")) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js")($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.array-buffer.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.array-buffer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $typed = __webpack_require__(/*! ./_typed */ "../node_modules/core-js/modules/_typed.js");
var buffer = __webpack_require__(/*! ./_typed-buffer */ "../node_modules/core-js/modules/_typed-buffer.js");
var anObject = __webpack_require__(/*! ./_an-object */ "../node_modules/core-js/modules/_an-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ./_to-absolute-index */ "../node_modules/core-js/modules/_to-absolute-index.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var ArrayBuffer = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js").ArrayBuffer;
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "../node_modules/core-js/modules/_species-constructor.js");
var $ArrayBuffer = buffer.ArrayBuffer;
var $DataView = buffer.DataView;
var $isView = $typed.ABV && ArrayBuffer.isView;
var $slice = $ArrayBuffer.prototype.slice;
var VIEW = $typed.VIEW;
var ARRAY_BUFFER = 'ArrayBuffer';

$export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), { ArrayBuffer: $ArrayBuffer });

$export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
  // 24.1.3.1 ArrayBuffer.isView(arg)
  isView: function isView(it) {
    return $isView && $isView(it) || isObject(it) && VIEW in it;
  }
});

$export($export.P + $export.U + $export.F * __webpack_require__(/*! ./_fails */ "../node_modules/core-js/modules/_fails.js")(function () {
  return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
}), ARRAY_BUFFER, {
  // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
  slice: function slice(start, end) {
    if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
    var len = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, len);
    var fin = toAbsoluteIndex(end === undefined ? len : end, len);
    var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
    var viewS = new $DataView(this);
    var viewT = new $DataView(result);
    var index = 0;
    while (first < fin) {
      viewT.setUint8(index++, viewS.getUint8(first++));
    } return result;
  }
});

__webpack_require__(/*! ./_set-species */ "../node_modules/core-js/modules/_set-species.js")(ARRAY_BUFFER);


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.data-view.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.data-view.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
$export($export.G + $export.W + $export.F * !__webpack_require__(/*! ./_typed */ "../node_modules/core-js/modules/_typed.js").ABV, {
  DataView: __webpack_require__(/*! ./_typed-buffer */ "../node_modules/core-js/modules/_typed-buffer.js").DataView
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.float32-array.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.float32-array.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Float32', 4, function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.float64-array.js":
/*!******************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.float64-array.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Float64', 8, function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.int16-array.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.int16-array.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Int16', 2, function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.int32-array.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.int32-array.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Int32', 4, function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.int8-array.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.int8-array.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Int8', 1, function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.uint16-array.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.uint16-array.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Uint16', 2, function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.uint32-array.js":
/*!*****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.uint32-array.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Uint32', 4, function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.uint8-array.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.uint8-array.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js":
/*!************************************************************************!*\
  !*** ../node_modules/core-js/modules/es6.typed.uint8-clamped-array.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_typed-array */ "../node_modules/core-js/modules/_typed-array.js")('Uint8', 1, function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);


/***/ }),

/***/ "../node_modules/core-js/modules/es6.weak-map.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/es6.weak-map.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var each = __webpack_require__(/*! ./_array-methods */ "../node_modules/core-js/modules/_array-methods.js")(0);
var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
var meta = __webpack_require__(/*! ./_meta */ "../node_modules/core-js/modules/_meta.js");
var assign = __webpack_require__(/*! ./_object-assign */ "../node_modules/core-js/modules/_object-assign.js");
var weak = __webpack_require__(/*! ./_collection-weak */ "../node_modules/core-js/modules/_collection-weak.js");
var isObject = __webpack_require__(/*! ./_is-object */ "../node_modules/core-js/modules/_is-object.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "../node_modules/core-js/modules/_validate-collection.js");
var NATIVE_WEAK_MAP = __webpack_require__(/*! ./_validate-collection */ "../node_modules/core-js/modules/_validate-collection.js");
var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var WEAK_MAP = 'WeakMap';
var getWeak = meta.getWeak;
var isExtensible = Object.isExtensible;
var uncaughtFrozenStore = weak.ufstore;
var InternalMap;

var wrapper = function (get) {
  return function WeakMap() {
    return get(this, arguments.length > 0 ? arguments[0] : undefined);
  };
};

var methods = {
  // 23.3.3.3 WeakMap.prototype.get(key)
  get: function get(key) {
    if (isObject(key)) {
      var data = getWeak(key);
      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
      return data ? data[this._i] : undefined;
    }
  },
  // 23.3.3.5 WeakMap.prototype.set(key, value)
  set: function set(key, value) {
    return weak.def(validate(this, WEAK_MAP), key, value);
  }
};

// 23.3 WeakMap Objects
var $WeakMap = module.exports = __webpack_require__(/*! ./_collection */ "../node_modules/core-js/modules/_collection.js")(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
  assign(InternalMap.prototype, methods);
  meta.NEED = true;
  each(['delete', 'has', 'get', 'set'], function (key) {
    var proto = $WeakMap.prototype;
    var method = proto[key];
    redefine(proto, key, function (a, b) {
      // store frozen objects on internal weakmap shim
      if (isObject(a) && !isExtensible(a)) {
        if (!this._f) this._f = new InternalMap();
        var result = this._f[key](a, b);
        return key == 'set' ? this : result;
      // store all the rest on native weakmap
      } return method.call(this, a, b);
    });
  });
}


/***/ }),

/***/ "../node_modules/core-js/modules/es6.weak-set.js":
/*!*******************************************************!*\
  !*** ../node_modules/core-js/modules/es6.weak-set.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

var weak = __webpack_require__(/*! ./_collection-weak */ "../node_modules/core-js/modules/_collection-weak.js");
var validate = __webpack_require__(/*! ./_validate-collection */ "../node_modules/core-js/modules/_validate-collection.js");
var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
__webpack_require__(/*! ./_collection */ "../node_modules/core-js/modules/_collection.js")(WEAK_SET, function (get) {
  return function WeakSet() { return get(this, arguments.length > 0 ? arguments[0] : undefined); };
}, {
  // 23.4.3.1 WeakSet.prototype.add(value)
  add: function add(value) {
    return weak.def(validate(this, WEAK_SET), value, true);
  }
}, weak, false, true);


/***/ }),

/***/ "../node_modules/core-js/modules/es7.array.flat-map.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.array.flat-map.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// https://tc39.github.io/proposal-flatMap/#sec-Array.prototype.flatMap
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var flattenIntoArray = __webpack_require__(/*! ./_flatten-into-array */ "../node_modules/core-js/modules/_flatten-into-array.js");
var toObject = __webpack_require__(/*! ./_to-object */ "../node_modules/core-js/modules/_to-object.js");
var toLength = __webpack_require__(/*! ./_to-length */ "../node_modules/core-js/modules/_to-length.js");
var aFunction = __webpack_require__(/*! ./_a-function */ "../node_modules/core-js/modules/_a-function.js");
var arraySpeciesCreate = __webpack_require__(/*! ./_array-species-create */ "../node_modules/core-js/modules/_array-species-create.js");

$export($export.P, 'Array', {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen, A;
    aFunction(callbackfn);
    sourceLen = toLength(O.length);
    A = arraySpeciesCreate(O, 0);
    flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments[1]);
    return A;
  }
});

__webpack_require__(/*! ./_add-to-unscopables */ "../node_modules/core-js/modules/_add-to-unscopables.js")('flatMap');


/***/ }),

/***/ "../node_modules/core-js/modules/es7.array.includes.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.array.includes.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// https://github.com/tc39/Array.prototype.includes
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $includes = __webpack_require__(/*! ./_array-includes */ "../node_modules/core-js/modules/_array-includes.js")(true);

$export($export.P, 'Array', {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

__webpack_require__(/*! ./_add-to-unscopables */ "../node_modules/core-js/modules/_add-to-unscopables.js")('includes');


/***/ }),

/***/ "../node_modules/core-js/modules/es7.object.entries.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.object.entries.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $entries = __webpack_require__(/*! ./_object-to-array */ "../node_modules/core-js/modules/_object-to-array.js")(true);

$export($export.S, 'Object', {
  entries: function entries(it) {
    return $entries(it);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.object.get-own-property-descriptors.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/tc39/proposal-object-getownpropertydescriptors
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var ownKeys = __webpack_require__(/*! ./_own-keys */ "../node_modules/core-js/modules/_own-keys.js");
var toIObject = __webpack_require__(/*! ./_to-iobject */ "../node_modules/core-js/modules/_to-iobject.js");
var gOPD = __webpack_require__(/*! ./_object-gopd */ "../node_modules/core-js/modules/_object-gopd.js");
var createProperty = __webpack_require__(/*! ./_create-property */ "../node_modules/core-js/modules/_create-property.js");

$export($export.S, 'Object', {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIObject(object);
    var getDesc = gOPD.f;
    var keys = ownKeys(O);
    var result = {};
    var i = 0;
    var key, desc;
    while (keys.length > i) {
      desc = getDesc(O, key = keys[i++]);
      if (desc !== undefined) createProperty(result, key, desc);
    }
    return result;
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es7.object.values.js":
/*!************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.object.values.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// https://github.com/tc39/proposal-object-values-entries
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $values = __webpack_require__(/*! ./_object-to-array */ "../node_modules/core-js/modules/_object-to-array.js")(false);

$export($export.S, 'Object', {
  values: function values(it) {
    return $values(it);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es7.promise.finally.js":
/*!**************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.promise.finally.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
// https://github.com/tc39/proposal-promise-finally

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var core = __webpack_require__(/*! ./_core */ "../node_modules/core-js/modules/_core.js");
var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var speciesConstructor = __webpack_require__(/*! ./_species-constructor */ "../node_modules/core-js/modules/_species-constructor.js");
var promiseResolve = __webpack_require__(/*! ./_promise-resolve */ "../node_modules/core-js/modules/_promise-resolve.js");

$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {
  var C = speciesConstructor(this, core.Promise || global.Promise);
  var isFunction = typeof onFinally == 'function';
  return this.then(
    isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () { return x; });
    } : onFinally,
    isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () { throw e; });
    } : onFinally
  );
} });


/***/ }),

/***/ "../node_modules/core-js/modules/es7.string.pad-end.js":
/*!*************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.string.pad-end.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $pad = __webpack_require__(/*! ./_string-pad */ "../node_modules/core-js/modules/_string-pad.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "../node_modules/core-js/modules/_user-agent.js");

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, false);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es7.string.pad-start.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.string.pad-start.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// https://github.com/tc39/proposal-string-pad-start-end
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $pad = __webpack_require__(/*! ./_string-pad */ "../node_modules/core-js/modules/_string-pad.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "../node_modules/core-js/modules/_user-agent.js");

// https://github.com/zloirock/core-js/issues/280
var WEBKIT_BUG = /Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(userAgent);

$export($export.P + $export.F * WEBKIT_BUG, 'String', {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $pad(this, maxLength, arguments.length > 1 ? arguments[1] : undefined, true);
  }
});


/***/ }),

/***/ "../node_modules/core-js/modules/es7.string.trim-left.js":
/*!***************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.string.trim-left.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(/*! ./_string-trim */ "../node_modules/core-js/modules/_string-trim.js")('trimLeft', function ($trim) {
  return function trimLeft() {
    return $trim(this, 1);
  };
}, 'trimStart');


/***/ }),

/***/ "../node_modules/core-js/modules/es7.string.trim-right.js":
/*!****************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.string.trim-right.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

// https://github.com/sebmarkbage/ecmascript-string-left-right-trim
__webpack_require__(/*! ./_string-trim */ "../node_modules/core-js/modules/_string-trim.js")('trimRight', function ($trim) {
  return function trimRight() {
    return $trim(this, 2);
  };
}, 'trimEnd');


/***/ }),

/***/ "../node_modules/core-js/modules/es7.symbol.async-iterator.js":
/*!********************************************************************!*\
  !*** ../node_modules/core-js/modules/es7.symbol.async-iterator.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ./_wks-define */ "../node_modules/core-js/modules/_wks-define.js")('asyncIterator');


/***/ }),

/***/ "../node_modules/core-js/modules/web.dom.iterable.js":
/*!***********************************************************!*\
  !*** ../node_modules/core-js/modules/web.dom.iterable.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $iterators = __webpack_require__(/*! ./es6.array.iterator */ "../node_modules/core-js/modules/es6.array.iterator.js");
var getKeys = __webpack_require__(/*! ./_object-keys */ "../node_modules/core-js/modules/_object-keys.js");
var redefine = __webpack_require__(/*! ./_redefine */ "../node_modules/core-js/modules/_redefine.js");
var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var hide = __webpack_require__(/*! ./_hide */ "../node_modules/core-js/modules/_hide.js");
var Iterators = __webpack_require__(/*! ./_iterators */ "../node_modules/core-js/modules/_iterators.js");
var wks = __webpack_require__(/*! ./_wks */ "../node_modules/core-js/modules/_wks.js");
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),

/***/ "../node_modules/core-js/modules/web.immediate.js":
/*!********************************************************!*\
  !*** ../node_modules/core-js/modules/web.immediate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var $task = __webpack_require__(/*! ./_task */ "../node_modules/core-js/modules/_task.js");
$export($export.G + $export.B, {
  setImmediate: $task.set,
  clearImmediate: $task.clear
});


/***/ }),

/***/ "../node_modules/core-js/modules/web.timers.js":
/*!*****************************************************!*\
  !*** ../node_modules/core-js/modules/web.timers.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// ie9- setTimeout & setInterval additional parameters fix
var global = __webpack_require__(/*! ./_global */ "../node_modules/core-js/modules/_global.js");
var $export = __webpack_require__(/*! ./_export */ "../node_modules/core-js/modules/_export.js");
var userAgent = __webpack_require__(/*! ./_user-agent */ "../node_modules/core-js/modules/_user-agent.js");
var slice = [].slice;
var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var wrap = function (set) {
  return function (fn, time /* , ...args */) {
    var boundArgs = arguments.length > 2;
    var args = boundArgs ? slice.call(arguments, 2) : false;
    return set(boundArgs ? function () {
      // eslint-disable-next-line no-new-func
      (typeof fn == 'function' ? fn : Function(fn)).apply(this, args);
    } : fn, time);
  };
};
$export($export.G + $export.B + $export.F * MSIE, {
  setTimeout: wrap(global.setTimeout),
  setInterval: wrap(global.setInterval)
});


/***/ }),

/***/ "../node_modules/core-js/web/index.js":
/*!********************************************!*\
  !*** ../node_modules/core-js/web/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(/*! ../modules/web.timers */ "../node_modules/core-js/modules/web.timers.js");
__webpack_require__(/*! ../modules/web.immediate */ "../node_modules/core-js/modules/web.immediate.js");
__webpack_require__(/*! ../modules/web.dom.iterable */ "../node_modules/core-js/modules/web.dom.iterable.js");
module.exports = __webpack_require__(/*! ../modules/_core */ "../node_modules/core-js/modules/_core.js");


/***/ }),

/***/ "./index.css":
/*!*******************!*\
  !*** ./index.css ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "../node_modules/regenerator-runtime/runtime.js":
/*!******************************************************!*\
  !*** ../node_modules/regenerator-runtime/runtime.js ***!
  \******************************************************/
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  Gp[iteratorSymbol] = function() {
    return this;
  };

  Gp.toString = function() {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : 0
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	__webpack_require__("../node_modules/@babel/polyfill/lib/index.js");
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./js/index.js");
/******/ 	
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL0BiYWJlbC9wb2x5ZmlsbC9saWIvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcG9seWZpbGwvbGliL25vQ29uZmxpY3QuanMiLCJ3ZWJwYWNrOi8vLy4vanMvYW5pbWF0ZU9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi9qcy9hbmltYXRpb24uanMiLCJ3ZWJwYWNrOi8vLy4vanMvYXVkaW8tbG9hZGVyLmpzIiwid2VicGFjazovLy8uL2pzL2NvbnRyb2xzLmpzIiwid2VicGFjazovLy8uL2pzL2ZseUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vanMvZ2FtZS1kZXNjdG9wLmpzIiwid2VicGFjazovLy8uL2pzL2ltYWdlLWxvYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9qcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9qcy9tYXRoLmpzIiwid2VicGFjazovLy8uL2pzL29ic3RhY2xlLmpzIiwid2VicGFjazovLy8uL2pzL3BsYXllci5qcyIsIndlYnBhY2s6Ly8vLi9qcy9zY2VuZS5qcyIsIndlYnBhY2s6Ly8vLi9qcy9zY2VuZXMvZ2FtZS1vdmVyLWRlc2N0b3AuanMiLCJ3ZWJwYWNrOi8vLy4vanMvc2NlbmVzL2xvYWRpbmctZGVzY3RvcC5qcyIsIndlYnBhY2s6Ly8vLi9qcy9zY2VuZXMvbWVudS1kZXNjdG9wLmpzIiwid2VicGFjazovLy8uL2pzL3NjZW5lcy9wcmUtc3RhcnQtZGVzY3RvcC5qcyIsIndlYnBhY2s6Ly8vLi9qcy9zY2VuZXMvcnVubmluZy1kZXNjdG9wLmpzIiwid2VicGFjazovLy8uL2pzL3NjZW5lcy9ydW5uaW5nLmpzIiwid2VicGFjazovLy8uL2pzL3NjcmVlbi1kZXNjdG9wLmpzIiwid2VicGFjazovLy8uL2pzL3Nwcml0ZS1zaGVldC5qcyIsIndlYnBhY2s6Ly8vLi9qcy9zcHJpdGUuanMiLCJ3ZWJwYWNrOi8vLy4vanMvdmVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9lczYvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL2FycmF5L2ZsYXQtbWFwLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9hcnJheS9pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvZm4vb2JqZWN0L2VudHJpZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL29iamVjdC9nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9vYmplY3QvdmFsdWVzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9wcm9taXNlL2ZpbmFsbHkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL3N0cmluZy9wYWQtZW5kLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvcGFkLXN0YXJ0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zdHJpbmcvdHJpbS1lbmQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2ZuL3N0cmluZy90cmltLXN0YXJ0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9mbi9zeW1ib2wvYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vZ2xvYmFsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fYW4tb2JqZWN0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NvcmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2ZhaWxzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faGlkZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pZTgtZG9tLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tcHJpbWl0aXZlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM3Lmdsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1mdW5jdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYS1udW1iZXItdmFsdWUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FkZC10by11bnNjb3BhYmxlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYWR2YW5jZS1zdHJpbmctaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FuLWluc3RhbmNlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2FycmF5LWNvcHktd2l0aGluLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1maWxsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktbWV0aG9kcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYXJyYXktcmVkdWNlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19hcnJheS1zcGVjaWVzLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fYmluZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY2xhc3NvZi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLXN0cm9uZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fY29sbGVjdGlvbi13ZWFrLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb2xsZWN0aW9uLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19jcmVhdGUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2N0eC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGF0ZS10by1pc28tc3RyaW5nLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19kYXRlLXRvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2RvbS1jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2VudW0ta2V5cy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZXhwb3J0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mYWlscy1pcy1yZWdleHAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2ZhaWxzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19maXgtcmUtd2tzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mbGFncy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZmxhdHRlbi1pbnRvLWFycmF5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19mb3Itb2YuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2Z1bmN0aW9uLXRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fZ2xvYmFsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19oYXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2h0bWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2llOC1kb20tZGVmaW5lLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbmhlcml0LWlmLXJlcXVpcmVkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pbnZva2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lvYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LWl0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLWFycmF5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pcy1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2lzLXJlZ2V4cC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1jYWxsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXItZGV0ZWN0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19pdGVyLXN0ZXAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX2l0ZXJhdG9ycy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbGlicmFyeS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1leHBtMS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWF0aC1mcm91bmQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtbG9nMXAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX21hdGgtc2lnbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWV0YS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fbWljcm90YXNrLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19uZXctcHJvbWlzZS1jYXBhYmlsaXR5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtYXNzaWduLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZHAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1kcHMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wbi1leHQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1nb3BuLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtZ29wcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWdwby5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fb2JqZWN0LWtleXMtaW50ZXJuYWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtcGllLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3Qtc2FwLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19vYmplY3QtdG8tYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX293bi1rZXlzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wYXJzZS1mbG9hdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcGFyc2UtaW50LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wZXJmb3JtLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19wcm9taXNlLXJlc29sdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Byb3BlcnR5LWRlc2MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZGVmaW5lLWFsbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fcmVkZWZpbmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3JlZ2V4cC1leGVjLWFic3RyYWN0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19yZWdleHAtZXhlYy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2FtZS12YWx1ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXByb3RvLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zZXQtc3BlY2llcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC1rZXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3NoYXJlZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3BlY2llcy1jb25zdHJ1Y3Rvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaWN0LW1ldGhvZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctY29udGV4dC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fc3RyaW5nLWh0bWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1wYWQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy1yZXBlYXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3N0cmluZy10cmltLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL19zdHJpbmctd3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3Rhc2suanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLWFic29sdXRlLWluZGV4LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdG8tbGVuZ3RoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL190by1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdHlwZWQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3R5cGVkLWJ1ZmZlci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdHlwZWQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdXNlci1hZ2VudC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fdmFsaWRhdGUtY29sbGVjdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWRlZmluZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLWV4dC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9fd2tzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuY29weS13aXRoaW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmV2ZXJ5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWxsLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5maWx0ZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQtaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZpbmQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LmZvci1lYWNoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5mcm9tLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5pbmRleC1vZi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lml0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5qb2luLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5tYXAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5Lm9mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnJlZHVjZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuYXJyYXkuc2xpY2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvbWUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNvcnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmFycmF5LnNwZWNpZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUubm93LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5kYXRlLnRvLWlzby1zdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tanNvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuZGF0ZS50by1wcmltaXRpdmUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5iaW5kLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5mdW5jdGlvbi5oYXMtaW5zdGFuY2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hcC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hY29zaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hc2luaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5hdGFuaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5jYnJ0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNsejMyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmNvc2guanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguZXhwbTEuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGguZnJvdW5kLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmh5cG90LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLmltdWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMTAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMXAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgubG9nMi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC5zaWduLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5tYXRoLnNpbmguanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm1hdGgudGFuaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubWF0aC50cnVuYy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIuZXBzaWxvbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWZpbml0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLmlzLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1uYW4uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5pcy1zYWZlLWludGVnZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci5tYXgtc2FmZS1pbnRlZ2VyLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIubWluLXNhZmUtaW50ZWdlci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYubnVtYmVyLnBhcnNlLWZsb2F0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtaW50LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm51bWJlci50by1wcmVjaXNpb24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24uanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5jcmVhdGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydGllcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmZyZWV6ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmdldC1vd24tcHJvcGVydHktbmFtZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QuaXMtZXh0ZW5zaWJsZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LmlzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3Qua2V5cy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYub2JqZWN0LnNlYWwuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5zZXQtcHJvdG90eXBlLW9mLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5vYmplY3QudG8tc3RyaW5nLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wYXJzZS1mbG9hdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucGFyc2UtaW50LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5wcm9taXNlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmFwcGx5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmNvbnN0cnVjdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZGVsZXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmVudW1lcmF0ZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZi5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVmbGVjdC5nZXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QuaGFzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LmlzLWV4dGVuc2libGUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Qub3duLWtleXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3QucHJldmVudC1leHRlbnNpb25zLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuY29uc3RydWN0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5leGVjLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5yZWdleHAuZmxhZ3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5tYXRjaC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnJlcGxhY2UuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zZWFyY2guanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnJlZ2V4cC5zcGxpdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYucmVnZXhwLnRvLXN0cmluZy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc2V0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYW5jaG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmlnLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuYmxpbmsuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5ib2xkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuY29kZS1wb2ludC1hdC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmVuZHMtd2l0aC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5mcm9tLWNvZGUtcG9pbnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLml0YWxpY3MuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLmxpbmsuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5yYXcuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnN0cmluZy5zbWFsbC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi5zdHJpbmcudHJpbS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYuc3ltYm9sLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXIuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmRhdGEtdmlldy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQzMi1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuZmxvYXQ2NC1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQuaW50MTYtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLmludDMyLWFycmF5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC5pbnQ4LWFycmF5LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQzMi1hcnJheS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWNsYW1wZWQtYXJyYXkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM2LndlYWstbWFwLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNi53ZWFrLXNldC5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LmFycmF5LmluY2x1ZGVzLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC52YWx1ZXMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnByb21pc2UuZmluYWxseS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy9lczcuc3RyaW5nLnBhZC1lbmQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy50cmltLWxlZnQuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvZXM3LnN0cmluZy50cmltLXJpZ2h0LmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL2VzNy5zeW1ib2wuYXN5bmMtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZS5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbW9kdWxlcy93ZWIuaW1tZWRpYXRlLmpzIiwid2VicGFjazovLy8uLi9ub2RlX21vZHVsZXMvY29yZS1qcy9tb2R1bGVzL3dlYi50aW1lcnMuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jb3JlLWpzL3dlYi9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9pbmRleC5jc3M/YmYzOSIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3JlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyIsIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vL3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly8vd2VicGFjay9ydW50aW1lL21ha2UgbmFtZXNwYWNlIG9iamVjdCIsIndlYnBhY2s6Ly8vd2VicGFjay9zdGFydHVwIl0sIm5hbWVzIjpbIkFuaW1hdGVPYmplY3QiLCJpbWFnZU5hbWUiLCJ4IiwieSIsInNjYWxlIiwiZGVnIiwiY29udGV4dCIsImltYWdlcyIsImRpcmVjdGlvbiIsImVuZFgiLCJlbmRZIiwiaXNDaGFuZ2VTY2FsZTEiLCJpc0NoYW5nZURlZzEiLCJ2ZWxvY2l0eSIsIlZlY3RvciIsInZlY3RvcjEiLCJpc0NoYW5nZVZlY3RvclgxIiwiaXNDaGFuZ2VWZWN0b3JZMSIsImltYWdlTmFtZTEiLCJpc0xldml0YXRpb24iLCJpc1JvdGF0aW9uIiwiaXNTY2FsZSIsInN0YXJ0IiwiZW5kIiwic3RlcCIsInJvdCIsImlzUm90YXRlIiwiY2hhbmdlU2NhbGUiLCJjbGVhclJlY3QiLCJ3aWR0aCIsImhlaWdodCIsInNldFRyYW5zZm9ybSIsInJvdGF0ZSIsImRyYXdJbWFnZSIsInN4Iiwic3kiLCJzV2lkdGgiLCJzSGVpZ2h0IiwiZFdpZHRoIiwiZEhlaWdodCIsImNoYW5nZURlZyIsImNoYW5nZVZlY3RvclgiLCJjaGFuZ2VWZWN0b3JZIiwiTWF0aCIsInJvdW5kIiwic2luIiwidG9GaXhlZCIsInRpbWUiLCJBbmltYXRpb24iLCJmcmFtZXMiLCJzcGVlZCIsInJlcGVhdCIsImF1dG9ydW4iLCJzb3VyY2VYIiwic291cmNlWSIsInJ1bm5pbmciLCJsYXN0VGltZSIsImN1cnJlbnRGcmFtZSIsInRvdGFsRnJhbWVzIiwibGVuZ3RoIiwib25FbmQiLCJpbmRleCIsInNldEZyYW1lIiwic3RvcCIsIm5leHRGcmFtZSIsIlNwcml0ZSIsIkF1ZGlvTG9hZGVyIiwiYXVkaW9GaWxlcyIsImF1ZGlvcyIsIm5hbWUiLCJoYXNPd25Qcm9wZXJ0eSIsImxvYWRBdWRpbyIsInNyYyIsImF1ZGlvIiwiQXVkaW8iLCJsb2FkIiwiQ29udHJvbHMiLCJqdW1wIiwiZG93biIsImtleU1hcCIsIk1hcCIsImRvY3VtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwidXBkYXRlIiwicHJlc3NlZCIsImhhcyIsImtleUNvZGUiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImdldCIsIkZseUVsZW1lbnQiLCJpbWFnZVdpZHRoIiwiaW1hZ2VIZWlnaHQiLCJzcHJpdGVXaWR0aCIsInNwcml0ZUhlaWdodCIsImlzSnVtcGluZyIsInN0YXJ0UG9zWCIsInRpbGUiLCJTcHJpdGVTaGVldCIsIndhbGsiLCJzdGFydFBvc1kiLCJpc1N0b3BlZCIsInN0YXJ0Rmx5IiwiZ2V0UmFuZG9tSW50Iiwic3RhcnRXYXZlRmx5Iiwic2V0RGlyZWN0aW9uIiwidmlldyIsImdldEFuaW1hdGlvbiIsInNldFhZIiwidHJ1bmMiLCJydW4iLCJ3YXZlRmx5IiwiZmx5IiwiR2FtZSIsImlzUmV0cnkiLCJzY3JlZW4iLCJTY3JlZW4iLCJsb2FkSW1hZ2VzIiwib2JzdGFjbGVzIiwicGxheWVyIiwibWVudSIsInRpbGVzIiwiYmcxIiwiYmcyIiwiYmczIiwiYmc0IiwiYmc1IiwiYmdMb2FkaW5nIiwiYmdNZW51IiwidHJlZTEiLCJ0cmVlMiIsInRyZWUzIiwidHJlZTQiLCJ0cmVlNSIsImdyb3VuZCIsInN1biIsInN1bkJsdXIiLCJiaXJkIiwibW91c2UiLCJnYW1lT3ZlclBsYXllciIsIm1vb24iLCJza3kxIiwic2t5MiIsInNreTMiLCJza3lCaWciLCJza3lCaWczIiwiY2xvdWRMb2dvIiwibG9nbyIsImJ0blN0YXJ0IiwiYnRuUmV0cnkiLCJidG5DbG9zZSIsImJ0blN0YXRzIiwiYnRuTXV0ZSIsImJ0bk11dGVPZmYiLCJidG5TaGFyZSIsInRleHRHYW1lT3ZlciIsInRleHRDb3VudCIsImNvbGxpZGVUZXh0MSIsImNvbGxpZGVUZXh0MiIsImNvbGxpZGVUZXh0MyIsImNvbGxpZGVUZXh0NCIsImNvdW50VGV4dDEiLCJjb3VudFRleHQyIiwiY291bnRUZXh0MyIsImNvdW50VGV4dDQiLCJzbGVlcFRleHQiLCJ0ZXh0QmciLCJjbG91ZFRleHQiLCJwcm9ncmVzcyIsInByb2dyZXNzU3RhcnQiLCJwcm9ncmVzc1dyYXAiLCJwcm9ncmVzc0xhbWEiLCJtZW51TGFtYSIsIm1lbnVMYW1hU2xlZXAiLCJjcmFzaDEiLCJjcmFzaDIiLCJpbnRybyIsIm1haW4iLCJjb3VudCIsImNvbnRyb2wiLCJzY2VuZXMiLCJsb2FkaW5nIiwiTG9hZGluZyIsIk1lbnUiLCJwcmVTdGFydCIsIlByZVN0YXJ0IiwiUnVubmluZyIsImdhbWVPdmVyIiwiR2FtZU92ZXIiLCJjdXJyZW50U2NlbmUiLCJpbml0IiwiaXNNdXRlIiwicmF0aW8iLCJpbm5lcldpZHRoIiwiaW5uZXJIZWlnaHQiLCJjYW52YXMiLCJzdGF0dXMiLCJTY2VuZSIsImNoYW5nZVNjZW5lIiwicmVuZGVyIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZnJhbWUiLCJJbWFnZUxvYWRlciIsImltYWdlRmlsZXMiLCJsb2FkSW1hZ2UiLCJpbWFnZSIsIkltYWdlIiwiVksiLCJwdWJsaXNoIiwiYWxlcnQiLCJ1c2VyIiwiY29uc29sZSIsImxvZyIsImFwaSIsImRhdGEiLCJ1c2VyX25hbWUiLCJyZXNwb25zZSIsImxhc3RfbmFtZSIsImZpcnN0X25hbWUiLCJ1cGxvYWRfdXJsIiwicGhvdG82MDQiLCJpdGVtcyIsInNjcmVlbnNob3RzIiwicGhvdG9fNjA0IiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJGb3JtRGF0YSIsInJlc3BvbnNlVHlwZSIsIm9ubG9hZCIsImFwcGVuZCIsIm9wZW4iLCJzZW5kIiwiZXJyIiwicG9zdF9pZCIsImdldFVzZXIiLCJhZGRDb3VudCIsInZhbHVlIiwidXNlcl9pZCIsImdldENvdW50Iiwid2luZG93IiwibGFtYUdhbWUiLCJzdGFydEJ0biIsImdldEVsZW1lbnRCeUlkIiwiZSIsInN0YXJ0R2FtZSIsImNsb3NlQnRuIiwic2V0Q2xvc2VCdG4iLCJyZXRyeUJ0biIsInJldHJ5IiwidG9nZ2xlTXV0ZUJ0biIsInN0eWxlIiwiYmFja2dyb3VuZEltYWdlIiwidm9sdW1lIiwibWluIiwibWF4IiwiY2VpbCIsImZsb29yIiwicmFuZG9tIiwiT2JzdGFjbGUiLCJnYW1lV2lkdGgiLCJnYW1lSGVpZ2h0IiwiZ2V0U3ByaXRlIiwiY29sbGlzaW9uU2hhcGUiLCJkZWFkIiwiaXNDcmFzaCIsIlBsYXllciIsInNwZWVkV2FsayIsImRlYWRDb3VudCIsImp1bXBBdWRpbyIsInBsYXkiLCJvYnN0YWNsZSIsImZvckVhY2giLCJpIiwib2JzIiwiaGl0IiwiY3Jhc2giLCJ1cGRhdGVQb3NpdGlvbiIsImdhbWUiLCJjb25zdHJ1Y3RvciIsIldPUktJTkciLCJzYXZlIiwicmVzdG9yZSIsInJlc2l6ZSIsImlzU2hvd01vZGFsIiwicG9zaXRpb24iLCJvcGFjaXR5Iiwic2t5NSIsImxvZ29DbG91ZCIsImxhbWEiLCJpc0NoYW5nZVNjYWxlIiwidGV4dEdhbWVPdmVyWSIsImlzU3RhcnRMZXZpdGF0aW9uIiwibW9kYWxHYW1lT3ZlciIsIm1vZGFsR2FtZU92ZXJUZXh0IiwibW9kYWxHYW1lT3ZlckJ0bnMiLCJiZXN0Q291bnQiLCJkaXNwbGF5IiwiaW5uZXJIVE1MIiwic2t5QmlnMiIsIm9ic3RhY2xlMSIsIm9ic3RhY2xlMiIsIm9ic3RhY2xlMyIsIm9ic3RhY2xlNCIsIm9ic3RhY2xlNSIsIm9ic3RhY2xlNiIsIm9ic3RhY2xlNyIsImxhbWFTbGVlcCIsInNldFRpbWVvdXQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiT2JqZWN0Iiwia2V5cyIsImlzU3RvcEFuaW1hdGlvbiIsImxldml0YXRpb24iLCJkcmF3SW1hZ2VTY2FsZSIsImdsb2JhbEFscGhhIiwiZHJhd1RleHQiLCJzaG93TW9kYWxSZXRyeSIsInJ1blNwcml0ZSIsImRyYXdJbWFnZVNwcml0ZVJvdGF0ZWQiLCJkcmF3SW1hZ2VGdWxsU2NyZWVuIiwicmVuZGVyQ2xvdWRzIiwicmVuZGVyR2FtZU92ZXJJbWciLCJyZW5kZXJGcm9udE9ic3RhY2xlcyIsInJlbmRlckxhbWEiLCJyZW5kZXJHYW1lT3Zlck1vZGFsIiwibG9hZGVkQXQiLCJpc1ByZXNzZWQiLCJwZXJzZW50IiwicHJvZ3Jlc3NXaWR0aCIsImR1cmF0aW9uIiwiaXNJbWFnZXNMb2FkZWQiLCJpc0F1ZGlvc0xvYWRlZCIsImZpbmlzaCIsImRyYXdTY2FsZUltYWdlIiwicHJpbnRUZXh0IiwicmVuZGVyUHJvZ3Jlc3NCYXIiLCJpc1Nob3dCdG4iLCJtdXRlQnRuIiwibG9vcCIsIm11dGVkIiwiZHJhd0ltYWdlUm90YXRlZCIsImRyYXdTcHJpdGUiLCJyZW5kZXJMb2dvIiwicG9zaXRpb24xIiwibW9kYWwiLCJtb2RhbFRleHQiLCJwYXVzZSIsImludGVydmFsIiwic2V0SW50ZXJ2YWwiLCJjbGVhckludGVydmFsIiwicmVuZGVyQm90dG9tR3JvdW5kIiwic2hvd01vZGFsU3RhcnQiLCJwb3NpdGlvblRleHQiLCJwb3NpdGlvbkdyb3VuZCIsInBvc2l0aW9uR3JvdW5kMSIsInBvc2l0aW9uVHJlZSIsInBvc2l0aW9uVHJlZTEiLCJwb3NpdGlvbk1vb24iLCJiYWNrZ3JvdW5kcyIsImlzQ29sbGlkZSIsImJhY2tncm91bmRzVHJlZSIsImNvbGxpZGVUZXh0IiwiY291bnRUZXh0IiwiaW1nVGV4dCIsImlzQWRkQ291bnQiLCJsYXN0VGltZUNvdW50VGV4dCIsInN1bkhlaWdodCIsImlzU3VuUmF5cyIsImNyYXNoQXVkaW9zIiwic3RhcnRQb3NYQ291bnRUZXh0IiwiYWRkTmV3T2JzdGFjbGUiLCJwdXNoIiwiY29sbGlkZSIsImluZGV4T2YiLCJzcGxpY2UiLCJzaGlmdCIsInJlbmRlck1vb24iLCJyZW5kZXJTdW4iLCJyZW5kZXJDb3VudENsb3VkVGV4dCIsImNyZWF0ZUNhbnZhcyIsImdldENvbnRleHQiLCJlbGVtZW50cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwiY3JlYXRlRWxlbWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsInRpbGVTZXQiLCJtYXBJbWFnZSIsIm1hcENvbnRleHQiLCJjb2xvciIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiZiIsIkZvbnRGYWNlIiwibG9hZGVyIiwidGhlbiIsIm5hbWVzIiwiYXNzaWduIiwiYXVkaW9Mb2FkZXIiLCJ0ZXh0Iiwic2l6ZSIsImZvbnQiLCJmaWxsVGV4dCIsInNwcml0ZSIsInNwcml0ZVgiLCJzcHJpdGVZIiwiYWJzIiwiaW5kZXhlcyIsIm1hcCIsImdldFNvdXJjZVgiLCJnZXRTb3VyY2VZIiwib2JqZWN0IiwiZHQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBYTs7QUFFYixtQkFBTyxDQUFDLHVFQUFjOztBQUV0QixxQ0FBcUMsbUJBQU8sQ0FBQywrRUFBMkI7O0FBRXhFLHNDQUFzQyx1Q0FBdUMsa0JBQWtCOztBQUUvRjtBQUNBO0FBQ0E7O0FBRUEseUM7Ozs7Ozs7Ozs7O0FDWmE7O0FBRWIsbUJBQU8sQ0FBQyx5REFBYTs7QUFFckIsbUJBQU8sQ0FBQywrRUFBMkI7O0FBRW5DLG1CQUFPLENBQUMsK0VBQTJCOztBQUVuQyxtQkFBTyxDQUFDLG1GQUE2Qjs7QUFFckMsbUJBQU8sQ0FBQywrRUFBMkI7O0FBRW5DLG1CQUFPLENBQUMscUZBQThCOztBQUV0QyxtQkFBTyxDQUFDLGlGQUE0Qjs7QUFFcEMsbUJBQU8sQ0FBQyw2RkFBa0M7O0FBRTFDLG1CQUFPLENBQUMseUhBQWdEOztBQUV4RCxtQkFBTyxDQUFDLDZFQUEwQjs7QUFFbEMsbUJBQU8sQ0FBQywrRUFBMkI7O0FBRW5DLG1CQUFPLENBQUMsaUZBQTRCOztBQUVwQyxtQkFBTyxDQUFDLHlEQUFhOztBQUVyQixtQkFBTyxDQUFDLG1GQUE2QixFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDNUJyQztBQUVPLElBQU1BLGFBQWI7QUFDSSx5QkFBWUMsU0FBWixFQUF1QkMsQ0FBdkIsRUFBMEJDLENBQTFCLEVBQWdIO0FBQUEsUUFBbkZDLEtBQW1GLHVFQUE1RSxDQUE0RTtBQUFBLFFBQXpFQyxHQUF5RSx1RUFBcEUsQ0FBb0U7QUFBQSxRQUFqRUMs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QUE4QjtBQUN0QyxtQkFBTyxDQUFDLDRHQUF1QztBQUMvQyxtQkFBTyxDQUFDLDhHQUF3QztBQUNoRCxtQkFBTyxDQUFDLDhHQUF3QztBQUNoRCxtQkFBTyxDQUFDLG9HQUFtQztBQUMzQyxtQkFBTyxDQUFDLGdHQUFpQztBQUN6QyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLHNGQUE0QjtBQUNwQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLDRHQUF1QztBQUMvQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLHNGQUE0QjtBQUNwQyxtQkFBTyxDQUFDLDhGQUFnQztBQUN4QyxtQkFBTyxDQUFDLHdHQUFxQztBQUM3QyxtQkFBTyxDQUFDLGdHQUFpQztBQUN6QyxtQkFBTyxDQUFDLDhGQUFnQztBQUN4QyxtQkFBTyxDQUFDLDBGQUE4QjtBQUN0QyxtQkFBTyxDQUFDLG9HQUFtQztBQUMzQyxtQkFBTyxDQUFDLDBGQUE4QjtBQUN0QyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLHdGQUE2QjtBQUNyQyxtQkFBTyxDQUFDLHNGQUE0QjtBQUNwQyxtQkFBTyxDQUFDLHdGQUE2QjtBQUNyQyxtQkFBTyxDQUFDLGdHQUFpQztBQUN6QyxtQkFBTyxDQUFDLDhGQUFnQztBQUN4QyxtQkFBTyxDQUFDLDRGQUErQjtBQUN2QyxtQkFBTyxDQUFDLHNGQUE0QjtBQUNwQyxtQkFBTyxDQUFDLHdGQUE2QjtBQUNyQyxtQkFBTyxDQUFDLDBGQUE4QjtBQUN0QyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLGdGQUF5QjtBQUNqQyxtQkFBTyxDQUFDLHdGQUE2QjtBQUNyQyxtQkFBTyxDQUFDLG9HQUFtQztBQUMzQyxtQkFBTyxDQUFDLDRGQUErQjtBQUN2QyxtQkFBTyxDQUFDLGtHQUFrQztBQUMxQyxtQkFBTyxDQUFDLDRGQUErQjtBQUN2QyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLGdGQUF5QjtBQUNqQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLHNGQUE0QjtBQUNwQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLDRGQUErQjtBQUN2QyxtQkFBTyxDQUFDLGtGQUEwQjtBQUNsQyxtQkFBTyxDQUFDLHdGQUE2QjtBQUNyQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLHNGQUE0QjtBQUNwQyxtQkFBTyxDQUFDLHdGQUE2QjtBQUNyQyxtQkFBTyxDQUFDLG9HQUFtQztBQUMzQyxtQkFBTyxDQUFDLDRGQUErQjtBQUN2QyxtQkFBTyxDQUFDLHNHQUFvQztBQUM1QyxtQkFBTyxDQUFDLGtHQUFrQztBQUMxQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLG9GQUEyQjtBQUNuQyxtQkFBTyxDQUFDLGdHQUFpQztBQUN6QyxtQkFBTyxDQUFDLDBGQUE4QjtBQUN0QyxtQkFBTyxDQUFDLDRGQUErQjtBQUN2QyxtQkFBTyxDQUFDLG9HQUFtQztBQUMzQyxtQkFBTyxDQUFDLHNGQUE0QjtBQUNwQyxtQkFBTyxDQUFDLGdHQUFpQztBQUN6QyxtQkFBTyxDQUFDLHdGQUE2QjtBQUNyQyxtQkFBTyxDQUFDLHdG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QUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxXQUFXO0FBQ25CO0FBQ0E7QUFDQSxRQUFRLFVBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLFdBQVc7QUFDbkI7QUFDQTtBQUNBO0FBQ0EsUUFBUSxXQUFXO0FBQ25CO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsbUJBQW1CLHVCQUF1QixFQUFFLEVBQUU7QUFDdkU7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsV0FBVztBQUM1Qjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7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QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVk7QUFDWjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0EsV0FBVztBQUNYOztBQUVBO0FBQ0E7QUFDQSx3Q0FBd0MsV0FBVztBQUNuRDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQSxTQUFTO0FBQ1Q7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG9DQUFvQyxjQUFjO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlDQUFpQyxrQkFBa0I7QUFDbkQ7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGlCQUFpQjtBQUN6QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFlBQVk7QUFDWjtBQUNBOztBQUVBO0FBQ0EsWUFBWTtBQUNaOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBOztBQUVBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7O0FBRUEsV0FBVztBQUNYO0FBQ0E7QUFDQTs7QUFFQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0EsOENBQThDLFFBQVE7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUw7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQSw4Q0FBOEMsUUFBUTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUUsS0FBMEIsb0JBQW9CLENBQUU7QUFDbEQ7O0FBRUE7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O1VDM3VCQTtVQUNBOztVQUVBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBO1VBQ0E7VUFDQTtVQUNBOztVQUVBO1VBQ0E7O1VBRUE7VUFDQTtVQUNBOzs7OztXQ3RCQTtXQUNBO1dBQ0E7V0FDQTtXQUNBLHdDQUF3Qyx5Q0FBeUM7V0FDakY7V0FDQTtXQUNBLEU7Ozs7O1dDUEEsd0Y7Ozs7O1dDQUE7V0FDQTtXQUNBO1dBQ0Esc0RBQXNELGtCQUFrQjtXQUN4RTtXQUNBLCtDQUErQyxjQUFjO1dBQzdELEU7Ozs7O1VDTkE7VUFDQTtVQUNBO1VBQ0E7VUFDQSIsImZpbGUiOiJqcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5yZXF1aXJlKFwiLi9ub0NvbmZsaWN0XCIpO1xuXG52YXIgX2dsb2JhbCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcImNvcmUtanMvbGlicmFyeS9mbi9nbG9iYWxcIikpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBcImRlZmF1bHRcIjogb2JqIH07IH1cblxuaWYgKF9nbG9iYWxbXCJkZWZhdWx0XCJdLl9iYWJlbFBvbHlmaWxsICYmIHR5cGVvZiBjb25zb2xlICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnNvbGUud2Fybikge1xuICBjb25zb2xlLndhcm4oXCJAYmFiZWwvcG9seWZpbGwgaXMgbG9hZGVkIG1vcmUgdGhhbiBvbmNlIG9uIHRoaXMgcGFnZS4gVGhpcyBpcyBwcm9iYWJseSBub3QgZGVzaXJhYmxlL2ludGVuZGVkIFwiICsgXCJhbmQgbWF5IGhhdmUgY29uc2VxdWVuY2VzIGlmIGRpZmZlcmVudCB2ZXJzaW9ucyBvZiB0aGUgcG9seWZpbGxzIGFyZSBhcHBsaWVkIHNlcXVlbnRpYWxseS4gXCIgKyBcIklmIHlvdSBkbyBuZWVkIHRvIGxvYWQgdGhlIHBvbHlmaWxsIG1vcmUgdGhhbiBvbmNlLCB1c2UgQGJhYmVsL3BvbHlmaWxsL25vQ29uZmxpY3QgXCIgKyBcImluc3RlYWQgdG8gYnlwYXNzIHRoZSB3YXJuaW5nLlwiKTtcbn1cblxuX2dsb2JhbFtcImRlZmF1bHRcIl0uX2JhYmVsUG9seWZpbGwgPSB0cnVlOyIsIlwidXNlIHN0cmljdFwiO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9lczZcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL2FycmF5L2luY2x1ZGVzXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9hcnJheS9mbGF0LW1hcFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3RyaW5nL3BhZC1zdGFydFwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vc3RyaW5nL3BhZC1lbmRcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3N0cmluZy90cmltLXN0YXJ0XCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9zdHJpbmcvdHJpbS1lbmRcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL3N5bWJvbC9hc3luYy1pdGVyYXRvclwiKTtcblxucmVxdWlyZShcImNvcmUtanMvZm4vb2JqZWN0L2dldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL29iamVjdC92YWx1ZXNcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL2ZuL29iamVjdC9lbnRyaWVzXCIpO1xuXG5yZXF1aXJlKFwiY29yZS1qcy9mbi9wcm9taXNlL2ZpbmFsbHlcIik7XG5cbnJlcXVpcmUoXCJjb3JlLWpzL3dlYlwiKTtcblxucmVxdWlyZShcInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZVwiKTsiLCJpbXBvcnQge1ZlY3Rvcn0gZnJvbSBcIkAvanMvdmVjdG9yXCI7XG5cbmV4cG9ydCBjbGFzcyBBbmltYXRlT2JqZWN0ICB7XG4gICAgY29uc3RydWN0b3IoaW1hZ2VOYW1lLCB4LCB5LCBzY2FsZT0gMSwgZGVnPSAwLCBjb250ZXh0ID0ge30sIGltYWdlcz0ge30sIGRpcmVjdGlvbiA9J2xlZnQnLGVuZFggPSB4LCBlbmRZID0geSwpIHtcbiAgICAgICAgdGhpcy5zY2FsZSA9IHNjYWxlO1xuICAgICAgICB0aGlzLmRlZyA9IGRlZztcbiAgICAgICAgdGhpcy5pc0NoYW5nZVNjYWxlMSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzQ2hhbmdlRGVnMSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gbmV3IFZlY3RvcihkaXJlY3Rpb24sIDEwKTtcbiAgICAgICAgdGhpcy52ZWN0b3IxID0ge1xuICAgICAgICAgICAgeDp4LFxuICAgICAgICAgICAgeTp5XG4gICAgICAgIH0sXG4gICAgICAgIHRoaXMuZW5kWCA9IGVuZFgsXG4gICAgICAgIHRoaXMuZW5kWSA9IGVuZFksXG4gICAgICAgIHRoaXMuaXNDaGFuZ2VWZWN0b3JYMSA9ZmFsc2U7XG4gICAgICAgIHRoaXMuaXNDaGFuZ2VWZWN0b3JZMSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmltYWdlTmFtZTEgPSBpbWFnZU5hbWU7XG4gICAgICAgIHRoaXMuaW1hZ2VzID1pbWFnZXM7XG4gICAgICAgIHRoaXMuY29udGV4dCA9IGNvbnRleHQ7XG4gICAgICAgIHRoaXMuaXNMZXZpdGF0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNSb3RhdGlvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzU2NhbGUgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBkcmF3SW1hZ2VSb3RhdGVkKHgsIHksIHN0YXJ0LCBlbmQsIHN0ZXAsIHJvdCwgaXNSb3RhdGUgPSAgdHJ1ZSkge1xuICAgICAgICBsZXQgc2NhbGUgPSB0aGlzLmNoYW5nZVNjYWxlKHN0YXJ0LCBlbmQsIHN0ZXApXG4gICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jb250ZXh0LndpZHRoLCB0aGlzLmNvbnRleHQuaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybShzY2FsZSAsIDAsIDAsIHNjYWxlLCB4LCB5KTtcbiAgICAgICAgaWYgKGlzUm90YXRlKSB7XG4gICAgICAgICAgICB0aGlzLmNvbnRleHQucm90YXRlKHJvdCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmltYWdlc1t0aGlzLmltYWdlTmFtZTFdLCAtdGhpcy5pbWFnZXNbdGhpcy5pbWFnZU5hbWUxXS53aWR0aCAvMiwgLXRoaXMuaW1hZ2VzW3RoaXMuaW1hZ2VOYW1lMV0uaGVpZ2h0IC8gMik7XG4gICAgICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMCk7XG4gICAgfVxuXG4gICAgZHJhd0ltYWdlU2NhbGUoeCwgeSwgc2NhbGUsIHdpZHRoID0gdGhpcy5pbWFnZXNbdGhpcy5pbWFnZU5hbWUxXS53aWR0aCwgaGVpZ2h0ID0gdGhpcy5pbWFnZXNbdGhpcy5pbWFnZU5hbWUxXS5oZWlnaHQgKSB7XG4gICAgICAgIHRoaXMuaXNTY2FsZSA9IHRydWU7XG4gICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jb250ZXh0LndpZHRoLCB0aGlzLmNvbnRleHQuaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybShzY2FsZSAsIDAsIDAsIHNjYWxlLCB4LCB5KTtcbiAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmltYWdlc1t0aGlzLmltYWdlTmFtZTFdLCAtdGhpcy5pbWFnZXNbdGhpcy5pbWFnZU5hbWUxXS53aWR0aCAvMiwgLXRoaXMuaW1hZ2VzW3RoaXMuaW1hZ2VOYW1lMV0uaGVpZ2h0IC8gMiwgd2lkdGgsIGhlaWdodCk7XG4gICAgICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMCk7XG4gICAgfVxuXG4gICAgZHJhd0ltYWdlU3ByaXRlUm90YXRlZCh4LCB5LCBzdGFydCwgZW5kLCBzdGVwLCBzeCwgc3ksIHNXaWR0aCA9IDgwLCBzSGVpZ2h0ID0gODAsIGRXaWR0aCA9IDgwLCBkSGVpZ2h0ID0gODAgKSB7XG4gICAgICAgIHRoaXMuaXNSb3RhdGlvbiA9IHRydWU7XG4gICAgICAgIGxldCByb3QgPSB0aGlzLmNoYW5nZURlZyhzdGFydCwgZW5kLCBzdGVwKVxuICAgICAgICB0aGlzLmNvbnRleHQuY2xlYXJSZWN0KDAsIDAsIHRoaXMuY29udGV4dC53aWR0aCwgdGhpcy5jb250ZXh0LmhlaWdodCk7XG4gICAgICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oMSAsIDAsIDAsIDEsIHgsIHkpO1xuICAgICAgICB0aGlzLmNvbnRleHQucm90YXRlKHJvdCk7XG4gICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5pbWFnZXNbdGhpcy5pbWFnZU5hbWUxXSwgc3gsIHN5LCBzV2lkdGgsIHNIZWlnaHQsIDAsMCwgZFdpZHRoLCBkSGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTtcbiAgICB9XG5cbiAgICBsZXZpdGF0aW9uKCB4LCB5LCBzY2FsZSA9IDEsIGVuZCA9IDQwLCBzdGVwID0gMC4zLCBzeD0wLCBzeT0wLHNXaWR0aD10aGlzLmltYWdlc1t0aGlzLmltYWdlTmFtZTFdLndpZHRoLCBzSGVpZ2h0ID0gdGhpcy5pbWFnZXNbdGhpcy5pbWFnZU5hbWUxXS5oZWlnaHQsZFdpZHRoPXRoaXMuaW1hZ2VzW3RoaXMuaW1hZ2VOYW1lMV0ud2lkdGgsIGRIZWlnaHQgPSB0aGlzLmltYWdlc1t0aGlzLmltYWdlTmFtZTFdLmhlaWdodCkge1xuICAgICAgICB0aGlzLmlzTGV2aXRhdGlvbiA9IHRydWU7XG4gICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jb250ZXh0LndpZHRoLCB0aGlzLmNvbnRleHQuaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybShzY2FsZSwgMCwgMCwgc2NhbGUsICB0aGlzLmNoYW5nZVZlY3RvclgoeCwgeCAtIGVuZCwgc3RlcCksIHRoaXMuY2hhbmdlVmVjdG9yWSh5LCB5IC0gZW5kIC0xMCwgc3RlcCkpO1xuICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMuaW1hZ2VzW3RoaXMuaW1hZ2VOYW1lMV0sIHN4LCBzeSwgc1dpZHRoLCBzSGVpZ2h0LCAwLDAsIGRXaWR0aCwgZEhlaWdodCk7XG4gICAgICAgIHRoaXMuY29udGV4dC5zZXRUcmFuc2Zvcm0oMSwgMCwgMCwgMSwgMCwgMCk7XG4gICAgfVxuXG5cbiAgICAgLy8gVE9ET1xuICAgIC8vICDQvtCx0YrQtdC00LjQvdC40YLRjCDQsiDQvtC00L3RgyDQstGB0LUgNCDRhNGD0L3QutGG0LjQuFxuICAgIGNoYW5nZVZlY3Rvclgoc3RhcnQsIGVuZCwgc3RlcCkge1xuICAgICAgICBpZihNYXRoLnJvdW5kKHRoaXMudmVjdG9yMS54KSAgPT09IE1hdGgucm91bmQoc3RhcnQpICkge1xuICAgICAgICAgICAgdGhpcy5pc0NoYW5nZVZlY3RvclgxID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE1hdGgucm91bmQodGhpcy52ZWN0b3IxLngpICA9PT0gTWF0aC5yb3VuZChlbmQpICkge1xuICAgICAgICAgICAgdGhpcy5pc0NoYW5nZVZlY3RvclgxID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoTWF0aC5yb3VuZCh0aGlzLnZlY3RvcjEueCkgPD0gTWF0aC5yb3VuZChzdGFydCkgICYmICF0aGlzLmlzQ2hhbmdlVmVjdG9yWDEpIHtcbiAgICAgICAgICAgIHRoaXMudmVjdG9yMS54IC09ICBNYXRoLnNpbihzdGVwKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoTWF0aC5yb3VuZCh0aGlzLnZlY3RvcjEueCkgPj0gTWF0aC5yb3VuZChlbmQpICAmJiB0aGlzLmlzQ2hhbmdlVmVjdG9yWDEpIHtcbiAgICAgICAgICAgIHRoaXMudmVjdG9yMS54ICs9IE1hdGguc2luKHN0ZXApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnZlY3RvcjEueFxuICAgIH1cblxuICAgIGNoYW5nZVZlY3Rvclkoc3RhcnQsIGVuZCwgc3RlcCkge1xuICAgICAgICBpZihNYXRoLnJvdW5kKHRoaXMudmVjdG9yMS55KSA9PT0gTWF0aC5yb3VuZChzdGFydCApKSB7XG4gICAgICAgICAgICB0aGlzLmlzQ2hhbmdlVmVjdG9yWTEgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoTWF0aC5yb3VuZCh0aGlzLnZlY3RvcjEueSkgID09PSAgTWF0aC5yb3VuZChlbmQpKSB7XG4gICAgICAgICAgICB0aGlzLmlzQ2hhbmdlVmVjdG9yWTEgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChNYXRoLnJvdW5kKHRoaXMudmVjdG9yMS55KSA8PSBNYXRoLnJvdW5kKHN0YXJ0KSAmJiAhdGhpcy5pc0NoYW5nZVZlY3RvclkxKSB7XG4gICAgICAgICAgICB0aGlzLnZlY3RvcjEueSAtPSBzdGVwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChNYXRoLnJvdW5kKHRoaXMudmVjdG9yMS55KSA+PSBNYXRoLnJvdW5kKGVuZCkgICYmIHRoaXMuaXNDaGFuZ2VWZWN0b3JZMSkge1xuICAgICAgICAgICAgdGhpcy52ZWN0b3IxLnkgKz0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy52ZWN0b3IxLnlcbiAgICB9XG5cblxuICAgIGNoYW5nZVNjYWxlKHN0YXJ0LCBlbmQsIHN0ZXApIHtcbiAgICAgICAgaWYodGhpcy5zY2FsZS50b0ZpeGVkKDMpID09PSBzdGFydCkge1xuICAgICAgICAgICAgdGhpcy5pc0NoYW5nZVNjYWxlMSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNjYWxlLnRvRml4ZWQoMykgPT09IGVuZCkge1xuICAgICAgICAgICAgdGhpcy5pc0NoYW5nZVNjYWxlMSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuc2NhbGUudG9GaXhlZCgzKSA8PSBzdGFydCAmJiAhdGhpcy5pc0NoYW5nZVNjYWxlMSkge1xuICAgICAgICAgICAgdGhpcy5zY2FsZSAtPSBzdGVwO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNjYWxlLnRvRml4ZWQoMykgPj0gZW5kICYmIHRoaXMuaXNDaGFuZ2VTY2FsZTEpIHtcbiAgICAgICAgICAgIHRoaXMuc2NhbGUgKz0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5zY2FsZVxuICAgIH1cblxuICAgIGNoYW5nZURlZyhzdGFydCwgZW5kLCBzdGVwKSB7XG4gICAgICAgIGlmKE1hdGgucm91bmQodGhpcy5kZWcpID09PSAgTWF0aC5yb3VuZChzdGFydCApKSB7XG4gICAgICAgICAgICB0aGlzLmlzQ2hhbmdlRGVnMSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChNYXRoLnJvdW5kKHRoaXMuZGVnKSA9PT0gTWF0aC5yb3VuZChlbmQpKSB7XG4gICAgICAgICAgICB0aGlzLmlzQ2hhbmdlRGVnMSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKE1hdGgucm91bmQodGhpcy5kZWcpIDw9ICBNYXRoLnJvdW5kKHN0YXJ0ICkgJiYgIXRoaXMuaXNDaGFuZ2VEZWcxKSB7XG4gICAgICAgICAgICB0aGlzLmRlZyAtPSBzdGVwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChNYXRoLnJvdW5kKHRoaXMuZGVnKSA+PSBNYXRoLnJvdW5kKGVuZCkgJiYgdGhpcy5pc0NoYW5nZURlZzEpIHtcbiAgICAgICAgICAgIHRoaXMuZGVnKz0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5kZWdcbiAgICB9XG5cbiAgICBydW4oKSB7XG4gICAgICAgIHRoaXMudmVjdG9yMS54ICs9IHRoaXMudmVsb2NpdHkueDtcbiAgICAgICAgdGhpcy52ZWN0b3IxLnkgKz0gdGhpcy52ZWxvY2l0eS55O1xuICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMuaW1hZ2VzW3RoaXMuaW1hZ2VOYW1lMV0sIHRoaXMudmVjdG9yMS54LCB0aGlzLnZlY3RvcjEueSk7XG4gICAgfVxuXG4gICAgcnVuU3ByaXRlKHN4LCBzeSwgc1dpZHRoID0gODAsIHNIZWlnaHQgPSA4MCwgZFdpZHRoID0gODAsIGRIZWlnaHQgPSA4MCApIHtcbiAgICAgICAgdGhpcy52ZWN0b3IxLnggKz0gdGhpcy52ZWxvY2l0eS54O1xuICAgICAgICB0aGlzLnZlY3RvcjEueSArPSB0aGlzLnZlbG9jaXR5Lnk7XG4gICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5pbWFnZXNbdGhpcy5pbWFnZU5hbWUxXSwgc3gsIHN5LCBzV2lkdGgsIHNIZWlnaHQsIHRoaXMudmVjdG9yMS54LHRoaXMudmVjdG9yMS55LCBkV2lkdGgsIGRIZWlnaHQpO1xuICAgIH1cblxuICAgIHVwZGF0ZSh0aW1lKSB7XG5cbiAgICB9XG59XG4iLCJpbXBvcnQge1Nwcml0ZX0gZnJvbSAnLi9zcHJpdGUuanMnO1xuXG5leHBvcnQgY2xhc3MgQW5pbWF0aW9uIGV4dGVuZHMgU3ByaXRlIHtcbiAgICBjb25zdHJ1Y3Rvcih7aW1hZ2VOYW1lLCBmcmFtZXMsIHNwZWVkLCByZXBlYXQgPSB0cnVlLCBhdXRvcnVuID0gdHJ1ZSwgd2lkdGggPSA2NCwgaGVpZ2h0ID0gNjR9KSB7XG4gICAgICAgIHN1cGVyKHtcbiAgICAgICAgICAgIGltYWdlTmFtZTogaW1hZ2VOYW1lLFxuICAgICAgICAgICAgc291cmNlWDogZnJhbWVzWzBdLnN4LFxuICAgICAgICAgICAgc291cmNlWTogZnJhbWVzWzBdLnN5LFxuICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiBoZWlnaHRcbiAgICAgICAgfSk7XG5cbiAgICAgICAgdGhpcy5mcmFtZXMgPSBmcmFtZXM7XG4gICAgICAgIHRoaXMuc3BlZWQgPSBzcGVlZDtcbiAgICAgICAgdGhpcy5yZXBlYXQgPSByZXBlYXQ7XG4gICAgICAgIHRoaXMucnVubmluZyA9IGF1dG9ydW47XG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSAwO1xuICAgICAgICB0aGlzLmN1cnJlbnRGcmFtZSA9IDA7XG4gICAgICAgIHRoaXMudG90YWxGcmFtZXMgPSB0aGlzLmZyYW1lcy5sZW5ndGg7XG4gICAgICAgIHRoaXMub25FbmQgPSBudWxsO1xuICAgIH1cblxuICAgIHNldEZyYW1lKGluZGV4KSB7XG4gICAgICAgIHRoaXMuY3VycmVudEZyYW1lID0gaW5kZXg7XG4gICAgICAgIHRoaXMuc291cmNlWCA9IHRoaXMuZnJhbWVzW2luZGV4XS5zeDtcbiAgICAgICAgdGhpcy5zb3VyY2VZID0gdGhpcy5mcmFtZXNbaW5kZXhdLnN5O1xuICAgIH1cblxuICAgIHJ1bigpIHtcbiAgICAgICAgaWYgKCF0aGlzLnJ1bm5pbmcpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0RnJhbWUoMCk7XG4gICAgICAgICAgICB0aGlzLnJ1bm5pbmcgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc3RvcCgpIHtcbiAgICAgICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7XG4gICAgfVxuXG4gICAgbmV4dEZyYW1lKCkge1xuICAgICAgICBpZiAoKHRoaXMuY3VycmVudEZyYW1lICsgMSkgPT09IHRoaXMudG90YWxGcmFtZXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9uRW5kKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vbkVuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucmVwZWF0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5zZXRGcmFtZSgwKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLnN0b3AoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldEZyYW1lKHRoaXMuY3VycmVudEZyYW1lICsgMSk7XG4gICAgfVxuXG4gICAgdXBkYXRlKHRpbWUpIHtcbiAgICAgICAgaWYgKCF0aGlzLnJ1bm5pbmcpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sYXN0VGltZSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCh0aW1lIC0gdGhpcy5sYXN0VGltZSkgPiB0aGlzLnNwZWVkKSB7XG4gICAgICAgICAgICB0aGlzLm5leHRGcmFtZSgpO1xuICAgICAgICAgICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJleHBvcnQgY2xhc3MgQXVkaW9Mb2FkZXIge1xuICAgIGNvbnN0cnVjdG9yKGF1ZGlvRmlsZXMpIHtcbiAgICAgICAgdGhpcy5hdWRpb0ZpbGVzID0gYXVkaW9GaWxlcztcbiAgICAgICAgdGhpcy5hdWRpb3MgPSB7fTtcbiAgICB9XG5cbiAgICBhc3luYyBsb2FkKCkge1xuICAgICAgICBmb3IgKGxldCBuYW1lIGluIHRoaXMuYXVkaW9GaWxlcykge1xuICAgICAgICAgICAgaWYgKHRoaXMuYXVkaW9GaWxlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMubG9hZEF1ZGlvKG5hbWUsIHRoaXMuYXVkaW9GaWxlc1tuYW1lXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBsb2FkQXVkaW8obmFtZSwgc3JjKSB7XG4gICAgICAgIGNvbnN0IGF1ZGlvID0gbmV3IEF1ZGlvKCk7XG4gICAgICAgIHRoaXMuYXVkaW9zW25hbWVdID0gYXVkaW87XG4gICAgICAgIGF1ZGlvLnNyYyA9IHNyYztcbiAgICAgICAgYXVkaW8ubG9hZCgpO1xuICAgIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBDb250cm9scyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuanVtcCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRvd24gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5rZXlNYXAgPSBuZXcgTWFwKFtcbiAgICAgICAgICAgIFs0MCwgJ2Rvd24nXSwgWzMyLCAnanVtcCddLCBbMTMsICdlbnRlciddXG4gICAgICAgIF0pO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgKGV2ZW50KSA9PiB0aGlzLnVwZGF0ZShldmVudCwgdHJ1ZSkpO1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIChldmVudCkgPT4gdGhpcy51cGRhdGUoZXZlbnQsIGZhbHNlKSk7XG4gICAgfVxuXG4gICAgdXBkYXRlKGV2ZW50LCBwcmVzc2VkKSB7XG4gICAgICAgIGlmICh0aGlzLmtleU1hcC5oYXMoZXZlbnQua2V5Q29kZSkpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICAgICAgICAgIHRoaXNbdGhpcy5rZXlNYXAuZ2V0KGV2ZW50LmtleUNvZGUpXSA9IHByZXNzZWQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJpbXBvcnQge1ZlY3Rvcn0gZnJvbSBcIi4vdmVjdG9yLmpzXCI7XG5pbXBvcnQge1Nwcml0ZVNoZWV0fSBmcm9tIFwiLi9zcHJpdGUtc2hlZXQuanNcIjtcbmltcG9ydCB7Z2V0UmFuZG9tSW50fSBmcm9tIFwiLi9tYXRoLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBGbHlFbGVtZW50IHtcbiAgICBjb25zdHJ1Y3Rvcih4LHksIGltYWdlTmFtZSwgaW1hZ2VXaWR0aCwgaW1hZ2VIZWlnaHQsIHNwcml0ZVdpZHRoLCBzcHJpdGVIZWlnaHQsIGlzSnVtcGluZyA9IGZhbHNlKSB7XG4gICAgICAgIHRoaXMueCA9IHg7XG4gICAgICAgIHRoaXMueSA9IHk7XG4gICAgICAgIHRoaXMuc3RhcnRQb3NYID0geDtcbiAgICAgICAgdGhpcy5zcGVlZCA9IDM1MDtcbiAgICAgICAgdGhpcy52ZWxvY2l0eSA9IG5ldyBWZWN0b3IoJ3JpZ2h0JywgMCk7XG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSAwO1xuICAgICAgICB0aGlzLmlzSnVtcGluZyA9IGlzSnVtcGluZztcbiAgICAgICAgdGhpcy50aWxlID0gbmV3IFNwcml0ZVNoZWV0KHtcbiAgICAgICAgICAgIGltYWdlTmFtZTogaW1hZ2VOYW1lLFxuICAgICAgICAgICAgaW1hZ2VXaWR0aDogaW1hZ2VXaWR0aCxcbiAgICAgICAgICAgIGltYWdlSGVpZ2h0OiBpbWFnZUhlaWdodCxcbiAgICAgICAgICAgIHNwcml0ZVdpZHRoOiBzcHJpdGVXaWR0aCxcbiAgICAgICAgICAgIHNwcml0ZUhlaWdodDogc3ByaXRlSGVpZ2h0LFxuICAgICAgICB9KVxuICAgICAgICAvLyDQv9C+INGD0LzQvtC70YfQsNC90LjRjiDQv9C10YDRgdC+0L3QsNC2INC40LTQtdGCINCy0L/RgNCw0LLQvlxuICAgICAgICB0aGlzLmlzSnVtcGluZyA/IHRoaXMuanVtcCgpIDogdGhpcy53YWxrKCk7XG4gICAgICAgIHRoaXMuc3RhcnRQb3NZID0geVxuICAgICAgICB0aGlzLmlzU3RvcGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc3RhcnRGbHkgPSBnZXRSYW5kb21JbnQodGhpcy5zdGFydFBvc1ggKyAzMDAsIHRoaXMuc3RhcnRQb3NYICsgNzAwKTtcbiAgICAgICAgdGhpcy5zdGFydFdhdmVGbHkgPSAgMCAtIHRoaXMudGlsZS5zcHJpdGVXaWR0aDtcbiAgICB9XG5cbiAgICAvLyDQuNC00YLQuFxuICAgIHdhbGsoKSB7XG4gICAgICAgIHRoaXMudmVsb2NpdHkuc2V0RGlyZWN0aW9uKCdsZWZ0JywgdGhpcy5zcGVlZCk7XG4gICAgICAgIHRoaXMudmlldyA9IHRoaXMudGlsZS5nZXRBbmltYXRpb24oWzEsIDIsIDMsIDRdLCAxNTApO1xuICAgICAgICB0aGlzLnZpZXcuc2V0WFkoTWF0aC50cnVuYyh0aGlzLngpLCBNYXRoLnRydW5jKHRoaXMueSkpO1xuICAgICAgICB0aGlzLnZpZXcucnVuKCk7XG4gICAgfVxuXG4gICAgLy8g0L/RgNGL0LPQsNGC0YxcbiAgICBqdW1wKCkge1xuICAgICAgICB0aGlzLmlzSnVtcGluZyA9IHRydWU7XG4gICAgICAgIHRoaXMudmVsb2NpdHkuc2V0RGlyZWN0aW9uKCd1cCcsIHRoaXMuc3BlZWQpO1xuICAgICAgICB0aGlzLnZpZXcgPSB0aGlzLnRpbGUuZ2V0QW5pbWF0aW9uKFsxLCAyLCAzLCA0LCA1XSwgNTAwLCk7XG4gICAgICAgIHRoaXMudmlldy5ydW4oKTtcbiAgICB9XG5cbiAgICB3YXZlRmx5KHRpbWUpIHtcbiAgICAgICAgaWYgKHRoaXMueSA+IDAgJiYgdGhpcy55IDw9IHRoaXMuc3RhcnRQb3NZKSB7XG4gICAgICAgICAgICB0aGlzLnggKz0gKHRpbWUgLSB0aGlzLmxhc3RUaW1lKSAqICh0aGlzLnZlbG9jaXR5LnggLyAxMDAwKTtcbiAgICAgICAgICAgIHRoaXMueSArPSAodGltZSAtIHRoaXMubGFzdFRpbWUpICogKHRoaXMudmVsb2NpdHkueSAvIDEwMDApO1xuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS54ICs9IDk7XG4gICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnkgLT0gMTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnkgPj0gdGhpcy5zdGFydFBvc1kpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnNldERpcmVjdGlvbigndXAnLCB0aGlzLnNwZWVkKTtcbiAgICAgICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnkgLT0gMTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS5zZXREaXJlY3Rpb24oJ2Rvd24nLCB0aGlzLnNwZWVkKTtcbiAgICAgICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnkgKz0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMueCArPSAodGltZSAtIHRoaXMubGFzdFRpbWUpICogKHRoaXMudmVsb2NpdHkueCAvIDEwMDApO1xuICAgICAgICAgICAgdGhpcy55ICs9ICh0aW1lIC0gdGhpcy5sYXN0VGltZSkgKiAodGhpcy52ZWxvY2l0eS55IC8gMTAwMCk7XG4gICAgICAgICAgICB0aGlzLnZlbG9jaXR5LnggKz0gMTA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmbHkodGltZSkge1xuICAgICAgICBpZiAodGhpcy54ID4gMCAtIHRoaXMudGlsZS5zcHJpdGVXaWR0aCAmJiB0aGlzLnkgPiAwKSB7XG4gICAgICAgICAgICB0aGlzLnggKz0gKHRpbWUgLSB0aGlzLmxhc3RUaW1lKSAqICh0aGlzLnZlbG9jaXR5LnggLyAxMDAwKTtcbiAgICAgICAgICAgIHRoaXMueSArPSAodGltZSAtIHRoaXMubGFzdFRpbWUpICogKHRoaXMudmVsb2NpdHkueSAvIDEwMDApO1xuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS55IC09IDI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnggPSB0aGlzLnN0YXJ0Rmx5O1xuICAgICAgICAgICAgdGhpcy55ID0gZ2V0UmFuZG9tSW50KDEwMCwgMTUwKSArIHRoaXMueC80O1xuICAgICAgICAgICAgdGhpcy52ZWxvY2l0eS55ID0gMDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHVwZGF0ZSh0aW1lKSB7XG4gICAgICAgIC8vINC/0YDQvtC/0YPRgdC60LDQtdC8INC/0LXRgNCy0YvQuSDQutCw0LTRgFxuICAgICAgICBpZiAodGhpcy5sYXN0VGltZSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5pc0p1bXBpbmcpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnggPj0gdGhpcy5zdGFydFBvc1gpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnggPSB0aGlzLnN0YXJ0V2F2ZUZseTtcbiAgICAgICAgICAgICAgICB0aGlzLnkgPSAyMDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLndhdmVGbHkodGltZSk7XG5cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuZmx5KHRpbWUpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubGFzdFRpbWUgPSB0aW1lO1xuICAgICAgICB0aGlzLnZpZXcuc2V0WFkoTWF0aC50cnVuYyh0aGlzLngpLCBNYXRoLnRydW5jKHRoaXMueSkpO1xuICAgICAgICB0aGlzLnZpZXcudXBkYXRlKHRpbWUpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7U2NyZWVufSBmcm9tICcuL3NjcmVlbi1kZXNjdG9wLmpzJztcbmltcG9ydCB7TG9hZGluZ30gZnJvbSAnLi9zY2VuZXMvbG9hZGluZy1kZXNjdG9wLmpzJztcbmltcG9ydCB7R2FtZU92ZXJ9IGZyb20gJy4vc2NlbmVzL2dhbWUtb3Zlci1kZXNjdG9wLmpzJztcbmltcG9ydCB7TWVudX0gZnJvbSAnLi9zY2VuZXMvbWVudS1kZXNjdG9wLmpzJztcbmltcG9ydCB7U2NlbmV9IGZyb20gJy4vc2NlbmUuanMnO1xuaW1wb3J0IHtDb250cm9sc30gZnJvbSBcIi4vY29udHJvbHMuanNcIjtcbmltcG9ydCB7UnVubmluZ30gZnJvbSBcIi4vc2NlbmVzL3J1bm5pbmctZGVzY3RvcC5qc1wiO1xuaW1wb3J0IHtQcmVTdGFydH0gZnJvbSBcIi4vc2NlbmVzL3ByZS1zdGFydC1kZXNjdG9wLmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBHYW1lIHtcbiAgICAvLyDRiNC40YDQuNC90LAg0Lgg0LLRi9GB0L7RgtCwINC/0L4g0YPQvNC+0LvRh9Cw0L3QuNGOIDcwMCwgYXNwZWN0LXJhdGlvOjEvMVxuICAgIGNvbnN0cnVjdG9yKHt3aWR0aCA9IDcwMCwgaGVpZ2h0ID0gNzAwLCBpc1JldHJ5ID0gZmFsc2V9ID0ge30pIHtcbiAgICAgICAgdGhpcy5zY3JlZW4gPSBuZXcgU2NyZWVuKHdpZHRoLCB3aWR0aCk7XG4gICAgICAgIHRoaXMuc2NyZWVuLmxvYWRJbWFnZXMoe1xuICAgICAgICAgICAgb2JzdGFjbGVzOiAnaW1nL29ic3RhY2xlcy5wbmcnLFxuICAgICAgICAgICAgcGxheWVyOiAnaW1nL3BsYXllci5wbmcnLFxuICAgICAgICAgICAgbWVudTogJ2ltZy9tZW51LWJnLnBuZycsXG4gICAgICAgICAgICB0aWxlczogJ2ltZy9tZW51LWJnLnBuZycsXG4gICAgICAgICAgICBiZzE6ICdpbWcvYmcvQmcxKG1vcm5pbmcpLnBuZycsXG4gICAgICAgICAgICBiZzI6ICdpbWcvYmcvQmcyKGRheSkucG5nJyxcbiAgICAgICAgICAgIGJnMzogJ2ltZy9iZy9CZzMocHJlX2V2ZW5pbmcpLnBuZycsXG4gICAgICAgICAgICBiZzQ6ICdpbWcvYmcvQmc0KGV2ZW5pbmcpLnBuZycsXG4gICAgICAgICAgICBiZzU6ICdpbWcvYmcvQmc1KG5pZ2h0KS5wbmcnLFxuICAgICAgICAgICAgYmdMb2FkaW5nOiAnaW1nL3NjZW5lcy9sb2FkaW5nL2JnLnBuZycsXG4gICAgICAgICAgICBiZ01lbnU6ICdpbWcvc2NlbmVzL21lbnUvYmctZGVzY3RvcC5wbmcnLFxuICAgICAgICAgICAgdHJlZTE6ICdpbWcvYmcvdHJlZTEucG5nJyxcbiAgICAgICAgICAgIHRyZWUyOiAnaW1nL2JnL3RyZWUyLnBuZycsXG4gICAgICAgICAgICB0cmVlMzogJ2ltZy9iZy90cmVlMy5wbmcnLFxuICAgICAgICAgICAgdHJlZTQ6ICdpbWcvYmcvdHJlZTQucG5nJyxcbiAgICAgICAgICAgIHRyZWU1OiAnaW1nL2JnL3RyZWU1LnBuZycsXG4gICAgICAgICAgICBncm91bmQ6ICdpbWcvYmcvZ3JvdW5kLnBuZycsXG4gICAgICAgICAgICBzdW46ICdpbWcvc3VuX3JheXMucG5nJyxcbiAgICAgICAgICAgIHN1bkJsdXI6ICdpbWcvc3VuX3JheXNfYmx1ci5wbmcnLFxuICAgICAgICAgICAgYmlyZDogJ2ltZy9iaXJkcy5wbmcnLFxuICAgICAgICAgICAgbW91c2U6ICdpbWcvbW91c2UucG5nJyxcbiAgICAgICAgICAgIGdhbWVPdmVyUGxheWVyOiAnaW1nL2dhbWUtb3Zlci1wbGF5ZXIucG5nJyxcbiAgICAgICAgICAgIG1vb246ICdpbWcvbW9vbi5wbmcnLFxuICAgICAgICAgICAgc2t5MTogJ2ltZy9jbG91ZDMtMTgwLnBuZycsXG4gICAgICAgICAgICBza3kyOiAnaW1nL2Nsb3VkMi0xMjAucG5nJyxcbiAgICAgICAgICAgIHNreTM6ICdpbWcvY2xvdWQxLTEwMC5wbmcnLFxuICAgICAgICAgICAgc2t5QmlnOiAnaW1nL3NjZW5lcy9tZW51L2Nsb3VkMS1kZXNjdG9wLTYwMC5wbmcnLFxuICAgICAgICAgICAgc2t5QmlnMzogJ2ltZy9zY2VuZXMvbWVudS9jbG91ZDMtZGVzY3RvcC02MDAucG5nJyxcbiAgICAgICAgICAgIGNsb3VkTG9nbzogJ2ltZy9DbG91ZF93aXRoX1BsdXNoeV9sb2dvLTIwMC5wbmcnLFxuICAgICAgICAgICAgbG9nbzogJ2ltZy9nYW1lLWxvZ28ucG5nJyxcbiAgICAgICAgICAgIGJ0blN0YXJ0OiAnaW1nL2J0bnMvc3RhcnQtYnRuLnBuZycsXG4gICAgICAgICAgICBidG5SZXRyeTogJ2ltZy9idG5zL3JldHJ5LWJ0bi5wbmcnLFxuICAgICAgICAgICAgYnRuQ2xvc2U6ICdpbWcvYnRucy9jbG9zZS1idG4ucG5nJyxcbiAgICAgICAgICAgIGJ0blN0YXRzOiAnaW1nL2J0bnMvc3RhdC1idG4ucG5nJyxcbiAgICAgICAgICAgIGJ0bk11dGU6ICdpbWcvYnRucy9tdXRlLW9uLnBuZycsXG4gICAgICAgICAgICBidG5NdXRlT2ZmOiAnaW1nL2J0bnMvbXV0ZS1vZmYucG5nJyxcbiAgICAgICAgICAgIGJ0blNoYXJlOiAnaW1nL2J0bnMvc2hhcmUtYnRuLnBuZycsXG4gICAgICAgICAgICB0ZXh0R2FtZU92ZXI6ICdpbWcvdGV4dC9nYW1lLW92ZXItdGV4dC5wbmcnLFxuICAgICAgICAgICAgdGV4dENvdW50OiAnaW1nL3RleHQvY291bnQtdGV4dC5wbmcnLFxuICAgICAgICAgICAgY29sbGlkZVRleHQxOiAnaW1nL3RleHQvYXljaC5wbmcnLFxuICAgICAgICAgICAgY29sbGlkZVRleHQyOiAnaW1nL3RleHQvb2gtb2gtb2gucG5nJyxcbiAgICAgICAgICAgIGNvbGxpZGVUZXh0MzogJ2ltZy90ZXh0L3Vwcy5wbmcnLFxuICAgICAgICAgICAgY29sbGlkZVRleHQ0OiAnaW1nL3RleHQvc29ycnkucG5nJyxcbiAgICAgICAgICAgIGNvdW50VGV4dDE6ICdpbWcvdGV4dC9ib21iYXN0aWMucG5nJyxcbiAgICAgICAgICAgIGNvdW50VGV4dDI6ICdpbWcvdGV4dC9mYXN0LnBuZycsXG4gICAgICAgICAgICBjb3VudFRleHQzOiAnaW1nL3RleHQvZmx1ZmZ5LnBuZycsXG4gICAgICAgICAgICBjb3VudFRleHQ0OiAnaW1nL3RleHQvdGVkZHkucG5nJyxcbiAgICAgICAgICAgIHNsZWVwVGV4dDogJ2ltZy90ZXh0L3NsZWVwaW5nLnBuZycsXG4gICAgICAgICAgICB0ZXh0Qmc6ICdpbWcvdGV4dC1iZy5wbmcnLFxuICAgICAgICAgICAgY2xvdWRUZXh0OiAnaW1nL3RleHQvY2xvdWQtdGV4dC5wbmcnLFxuICAgICAgICAgICAgcHJvZ3Jlc3M6ICdpbWcvc2NlbmVzL2xvYWRpbmcvcHJvZ3Jlc3MucG5nJyxcbiAgICAgICAgICAgIHByb2dyZXNzU3RhcnQ6ICdpbWcvc2NlbmVzL2xvYWRpbmcvcHJvZ3Jlc3Mtc3RhcnQucG5nJyxcbiAgICAgICAgICAgIHByb2dyZXNzV3JhcDogJ2ltZy9zY2VuZXMvbG9hZGluZy9wcm9ncmVzcy13cmFwLnBuZycsXG4gICAgICAgICAgICBwcm9ncmVzc0xhbWE6ICdpbWcvc2NlbmVzL2xvYWRpbmcvcHJvZ3Jlc3MtbGFtYS5wbmcnLFxuICAgICAgICAgICAgbWVudUxhbWE6ICdpbWcvc2NlbmVzL21lbnUvbGFtYS1tZW51LWRlc2N0b3AucG5nJyxcbiAgICAgICAgICAgIG1lbnVMYW1hU2xlZXA6ICdpbWcvc2NlbmVzL21lbnUvbGFtYS1zbGVlcC1tZW51LWRlc2N0b3AucG5nJyxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2NyZWVuLmxvYWRBdWRpbyh7XG4gICAgICAgICAgICBjcmFzaDE6ICdzb3VuZC9PaS5tcDMnLFxuICAgICAgICAgICAgY3Jhc2gyOiAnc291bmQvY3Jhc2gzLm1wMycsXG4gICAgICAgICAgICBzdGFydDogJ3NvdW5kL1N0YXJ0X0J1dHRvbi5tcDMnLFxuICAgICAgICAgICAganVtcDogJ3NvdW5kL1ByeXpob2subXAzJyxcbiAgICAgICAgICAgIGludHJvOiAnc291bmQvTGFtYV9JbnRyby5tcDMnLFxuICAgICAgICAgICAgbWFpbjogJ3NvdW5kL0xhbWFfTWFpbi5tcDMnLFxuICAgICAgICB9KVxuICAgICAgICB0aGlzLmNvdW50ID0gMDtcbiAgICAgICAgdGhpcy5jb250cm9sID0gbmV3IENvbnRyb2xzKCk7XG4gICAgICAgIHRoaXMuc2NlbmVzID0ge1xuICAgICAgICAgICAgbG9hZGluZzogbmV3IExvYWRpbmcodGhpcyksXG4gICAgICAgICAgICBtZW51OiBuZXcgTWVudSh0aGlzKSxcbiAgICAgICAgICAgIHByZVN0YXJ0OiBuZXcgUHJlU3RhcnQodGhpcyksXG4gICAgICAgICAgICBydW5uaW5nOiBuZXcgUnVubmluZyh0aGlzKSxcbiAgICAgICAgICAgIGdhbWVPdmVyOiBuZXcgR2FtZU92ZXIodGhpcylcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5pc1JldHJ5ID0gaXNSZXRyeTtcbiAgICAgICAgdGhpcy5jdXJyZW50U2NlbmUgPSB0aGlzLnNjZW5lcy5sb2FkaW5nO1xuICAgICAgICB0aGlzLmN1cnJlbnRTY2VuZS5pbml0KCk7XG4gICAgICAgIHRoaXMuaXNNdXRlID0gZmFsc2U7XG4gICAgICAgIC8vIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIHRoaXMucmVzaXplKTtcbiAgICB9XG5cbiAgICByZXNpemUoKSB7XG4gICAgICAgIC8vINC/0LXRgNC10L3QtdGB0YLQuCDQsiBjc3PQtNC+0LvQttC90L4g0LLRgdC1INGB0YfQuNGC0LDRgtGMINC/0YDQuCDRgNC10YHQsNC50LfQtVxuICAgICAgICAvLyB0aGlzLnNjcmVlbiA9IG5ldyBTY3JlZW4od2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XG4gICAgICAgIC8vIHRoaXMuc2NyZWVuLmNvbnRleHQuc2F2ZSgpO1xuICAgICAgICBjb25zdCByYXRpbyA9IGlubmVyV2lkdGgvaW5uZXJIZWlnaHQ7XG4gICAgICAgIHRoaXMuc2NyZWVuLmNhbnZhcy53aWR0aCA9IGlubmVySGVpZ2h0KnJhdGlvO1xuICAgICAgICB0aGlzLnNjcmVlbi5jYW52YXMuaGVpZ2h0ID0gaW5uZXJIZWlnaHQ7XG4gICAgICAgIHRoaXMuc2NyZWVuLmNvbnRleHQuc2NhbGUoaW5uZXJXaWR0aCAvIHRoaXMuc2NyZWVuLmNhbnZhcy53aWR0aCwgaW5uZXJIZWlnaHQgLyB0aGlzLnNjcmVlbi5jYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgLy8gdGhpcy5zY3JlZW4uY29udGV4dC5yZXN0b3JlKClcbiAgICB9XG5cbiAgICBjaGFuZ2VTY2VuZShzdGF0dXMpIHtcbiAgICAgICAgc3dpdGNoIChzdGF0dXMpIHtcbiAgICAgICAgICAgIGNhc2UgU2NlbmUuTE9BREVEOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNjZW5lcy5tZW51O1xuICAgICAgICAgICAgY2FzZSBTY2VuZS5QUkVfU1RBUlQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2NlbmVzLnByZVN0YXJ0O1xuICAgICAgICAgICAgY2FzZSBTY2VuZS5TVEFSVF9HQU1FOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNjZW5lcy5ydW5uaW5nO1xuICAgICAgICAgICAgY2FzZSBTY2VuZS5TVE9QX0dBTUU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuY3VycmVudFNjZW5lLnN0YXR1cyA9IFNjZW5lLlNUT1BfR0FNRTtcbiAgICAgICAgICAgIGNhc2UgU2NlbmUuR0FNRV9PVkVSOlxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnNjZW5lcy5nYW1lT3ZlcjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2NlbmVzLm1lbnU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmcmFtZSh0aW1lKSB7XG4gICAgICAgIGlmICh0aGlzLmN1cnJlbnRTY2VuZS5zdGF0dXMgIT09IFNjZW5lLldPUktJTkcgJiYgdGhpcy5jdXJyZW50U2NlbmUuc3RhdHVzICE9PSBTY2VuZS5TVE9QX0dBTUUpIHtcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFNjZW5lID0gdGhpcy5jaGFuZ2VTY2VuZSh0aGlzLmN1cnJlbnRTY2VuZS5zdGF0dXMpO1xuICAgICAgICAgICAgdGhpcy5jdXJyZW50U2NlbmUuaW5pdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuY3VycmVudFNjZW5lLnN0YXR1cyAhPT0gU2NlbmUuU1RPUF9HQU1FKSB7XG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRTY2VuZS5yZW5kZXIodGltZSk7XG4gICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKHRpbWUpID0+IHRoaXMuZnJhbWUodGltZSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcnVuKCkge1xuICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKHRpbWUpID0+IHRoaXMuZnJhbWUodGltZSkpO1xuICAgICAgICAvLyB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aGlzLnJlc2l6ZSk7XG4gICAgICAgIC8vIHRoaXMucmVzaXplKCk7XG5cbiAgICB9XG59XG4iLCJleHBvcnQgY2xhc3MgSW1hZ2VMb2FkZXIge1xuICAgIGNvbnN0cnVjdG9yKGltYWdlRmlsZXMpIHtcbiAgICAgICAgdGhpcy5pbWFnZUZpbGVzID0gaW1hZ2VGaWxlcztcbiAgICAgICAgdGhpcy5pbWFnZXMgPSB7fTtcbiAgICB9XG5cbiAgICBhc3luYyBsb2FkKCkge1xuICAgICAgICBmb3IgKGxldCBuYW1lIGluIHRoaXMuaW1hZ2VGaWxlcykge1xuICAgICAgICAgICAgaWYgKHRoaXMuaW1hZ2VGaWxlcy5oYXNPd25Qcm9wZXJ0eShuYW1lKSkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHRoaXMubG9hZEltYWdlKG5hbWUsIHRoaXMuaW1hZ2VGaWxlc1tuYW1lXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBsb2FkSW1hZ2UobmFtZSwgc3JjKSB7XG4gICAgICAgIGNvbnN0IGltYWdlID0gbmV3IEltYWdlKCk7XG4gICAgICAgIHRoaXMuaW1hZ2VzW25hbWVdID0gaW1hZ2U7XG4gICAgICAgIGltYWdlLnNyYyA9IHNyYztcbiAgICB9XG59XG4iLCJpbXBvcnQgJy4uL2luZGV4LmNzcyc7XG5pbXBvcnQgeyBHYW1lIH0gZnJvbSBcIi4vZ2FtZS1kZXNjdG9wLmpzXCI7XG5WSy5pbml0KGZ1bmN0aW9uKCkge1xuICAgIGluaXQoKTtcbiAgICBwdWJsaXNoKCk7XG59LCBmdW5jdGlvbigpIHtcbiAgICBhbGVydCgn0KPQv9GBLCDRh9GC0L4g0L/QvtGI0LvQviDQvdC1INGC0LDQuiEnKVxufSwgJzUuMTMxJyk7XG5sZXQgdXNlciA9IG51bGw7XG5mdW5jdGlvbiBpbml0KCkge1xuICAgIGNvbnNvbGUubG9nKCcxMTExMTExMTExMTExMTExMTExMScpXG4gICAgVksuYXBpKFwidXNlcnMuZ2V0XCIsIHtcImZpZWxkc1wiOiBcImZpcnN0X25hbWUsIGxhc3RfbmFtZVwiLCBcInZcIjpcIjUuNzNcIn0sIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGRhdGEpXG4gICAgICAgY29uc3QgdXNlcl9uYW1lID0gZGF0YS5yZXNwb25zZVswXS5sYXN0X25hbWUgKyBkYXRhLnJlc3BvbnNlWzBdLmZpcnN0X25hbWU7XG4gICAgICAgY29uc29sZS5sb2codXNlcl9uYW1lKVxuICAgIH0pO1xufVxuZnVuY3Rpb24gcHVibGlzaCgpIHtcbiAgICBsZXQgdXBsb2FkX3VybCA9ICcnO1xuICAgIGxldCBwaG90bzYwND0nJztcbiAgICBWSy5hcGkoXCJwaG90b3MuZ2V0V2FsbFVwbG9hZFNlcnZlclwiLCB7XCJ2XCI6XCI1LjczXCJ9LCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgIHVwbG9hZF91cmwgPSBkYXRhLnJlc3BvbnNlO1xuICAgIH0pO1xuICAgIFZLLmFwaShcImFwcHMuZ2V0XCIsIHtcImV4dGVuZGVkXCI6IDEsXCJ2XCI6XCI1LjczXCJ9LCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBjb25zb2xlLmxvZyhkYXRhLnJlc3BvbnNlLml0ZW1zWzBdKVxuICAgICAgICBjb25zb2xlLmxvZyhkYXRhLnJlc3BvbnNlLml0ZW1zWzBdLnNjcmVlbnNob3RzWzBdKVxuICAgICAgICBwaG90bzYwNCA9IGRhdGEucmVzcG9uc2UuaXRlbXNbMF0uc2NyZWVuc2hvdHNbMF0ucGhvdG9fNjA0O1xuICAgIH0pO1xuICAgIGxldCB4O1xuXG4gICAgbGV0IHhociAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsgICAgICAgICAgICAgIC8vIGNyZWF0ZSBYTUxIdHRwUmVxdWVzdFxuICAgIGxldCBkYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgeGhyLnJlc3BvbnNlVHlwZSA9IFwiYmxvYlwiO1xuICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgZGF0YS5hcHBlbmQoXCJpbWFnZUZpbGVcIiwgeGhyLnJlc3BvbnNlKTtcbiAgICAgICAgeCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgICB4Lm9wZW4oXCJQT1NUXCIsdXBsb2FkX3VybCx0cnVlKTtcbiAgICAgICAgeC5zZW5kKGRhdGEpO1xuICAgIH0vLyBjcmVhdGUgZm9ybURhdGEgb2JqZWN0XG4gICAgLy8gZGF0YS5hcHBlbmQoXCJwaG90b1wiLCBpbWFnZSlcbiAgICB0cnkge1xuICAgICAgICB4aHIub3BlbihcIkdFVFwiLCBcImh0dHBzOi8vYW5hc3Rhc2lhYXJ0LmdpdGh1Yi5pby9pbWcvc2NlbmVzL2xvYWRpbmcvYmcucG5nXCIpOyAgICAgLy8gb3BlbiBjb25uZWN0aW9uXG4gICAgICAgIHhoci5zZW5kKGRhdGEpO1xuICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgICAgICBjb25zb2xlLmxvZyh4aHIucmVzcG9uc2UpXG4gICAgfSBjYXRjaChlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKVxuICAgIH1cbiAgICBWSy5hcGkoXCJ3YWxsLnBvc3RcIiwge1wibWVzc2FnZVwiOiBcIkhlbGxvIVwiLCBcImF0dGFjaG1lbnRzXCI6IHBob3RvXzYwNCxcInZcIjpcIjUuNzNcIn0sIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiUG9zdCBJRDpcIiArIGRhdGEucmVzcG9uc2UucG9zdF9pZCk7XG4gICAgfSk7XG59XG5cbmZ1bmN0aW9uIGdldFVzZXIoKSB7XG4gICAgbGV0IHVzZXIgPSBudWxsO1xuICAgIFZLLmFwaShcInVzZXJzLmdldFwiLCB7XCJmaWVsZHNcIjogXCJmaXJzdF9uYW1lLCBsYXN0X25hbWUsIHVzZXJfaWRcIiwgXCJ2XCI6XCI1LjczXCJ9LCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICB1c2VyID0gZGF0YS5yZXNwb25zZVswXTtcbiAgICAgICAgY29uc29sZS5sb2codXNlcilcbiAgICB9KTtcbiAgICByZXR1cm4gdXNlcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGRDb3VudCh2YWx1ZT0xMDApIHtcbiAgICBjb25zdCB1c2VyID0gZ2V0VXNlcigpO1xuICAgIFZLLmFwaShcInNlY3VyZS5hZGRBcHBFdmVudFwiLCB7XCJ1c2VyX2lkXCI6IHVzZXIudXNlcl9pZCwgXCJhY3Rpdml0eV9pZFwiOiAyLCBcInZhbHVlXCI6ICB2YWx1ZSwgXCJ2XCI6XCI1LjczXCJ9LCBmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICBjb25zb2xlLmxvZyhkYXRhKVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldENvdW50KHZhbHVlPTEwMCkge1xuICAgIGNvbnN0IHVzZXIgPSBnZXRVc2VyKCk7XG4gICAgbGV0IGNvdW50ID0gMDtcbiAgICBWSy5hcGkoXCJhcHBzLmdldFNjb3JlXCIsIHtcInVzZXJfaWRcIjogdXNlci51c2VyX2lkLCBcInZcIjpcIjUuNzNcIn0sIGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgIGNvdW50ID0gZGF0YTtcbiAgICAgICAgY29uc29sZS5sb2coZGF0YSlcbiAgICB9KTtcbn1cblxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcbiAgICBjb25zdCBsYW1hR2FtZSA9IG5ldyBHYW1lKCk7XG4gICAgbGFtYUdhbWUucnVuKCk7XG5cbiAgICBjb25zdCBzdGFydEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGFydC1idG4nKTtcbiAgICBzdGFydEJ0bi5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsICAoZSkgPT4ge1xuICAgICAgICBsYW1hR2FtZS5zY2VuZXMubWVudS5zdGFydEdhbWUoKX0sIGZhbHNlKTtcblxuICAgIGNvbnN0IGNsb3NlQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Nsb3NlLWJ0bicpO1xuICAgIGNsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgIChlKSA9PiB7XG4gICAgICAgIGxhbWFHYW1lLnNjZW5lcy5wcmVTdGFydC5zZXRDbG9zZUJ0bigpfSwgZmFsc2UpO1xuXG4gICAgY29uc3QgcmV0cnlCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmV0cnktYnRuJyk7XG4gICAgcmV0cnlCdG4uYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCAgKGUpID0+IHtcbiAgICAgICAgbGFtYUdhbWUuc2NlbmVzLmdhbWVPdmVyLnJldHJ5KCl9LCBmYWxzZSk7XG5cbiAgICBjb25zdCB0b2dnbGVNdXRlQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ211dGUtYnRuJyk7XG4gICAgdG9nZ2xlTXV0ZUJ0bi5zdHlsZS5iYWNrZ3JvdW5kSW1hZ2UgPSBsYW1hR2FtZS5pc011dGUgPyBcInVybCgnaW1nL2J0bnMvbXV0ZS1vZmYucG5nJylcIiA6IFwidXJsKCdpbWcvYnRucy9tdXRlLW9uLnBuZycpXCI7XG4gICAgdG9nZ2xlTXV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsICAoZSkgPT4ge1xuICAgICAgICBsYW1hR2FtZS5pc011dGUgPSAhbGFtYUdhbWUuaXNNdXRlO1xuICAgICAgICB0b2dnbGVNdXRlQnRuLnN0eWxlLmJhY2tncm91bmRJbWFnZSA9IGxhbWFHYW1lLmlzTXV0ZSA/IFwidXJsKCdpbWcvYnRucy9tdXRlLW9mZi5wbmcnKVwiIDogXCJ1cmwoJ2ltZy9idG5zL211dGUtb24ucG5nJylcIjtcbiAgICAgICAgICAgIGZvciAobGV0IGF1ZGlvIGluIGxhbWFHYW1lLnNjcmVlbi5hdWRpb3MpIHtcbiAgICAgICAgICAgICAgICBpZiAobGFtYUdhbWUuaXNNdXRlKSB7XG4gICAgICAgICAgICAgICAgbGFtYUdhbWUuc2NyZWVuLmF1ZGlvc1thdWRpb10udm9sdW1lID0gMFxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICBsYW1hR2FtZS5zY3JlZW4uYXVkaW9zW2F1ZGlvXS52b2x1bWUgPSAwLjhcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sIGZhbHNlKTtcbn07XG4iLCJleHBvcnQgY29uc3QgZ2V0UmFuZG9tSW50ID0gKG1pbiwgbWF4KSA9PiB7XG4gICAgbWluID0gTWF0aC5jZWlsKG1pbik7XG4gICAgbWF4ID0gTWF0aC5mbG9vcihtYXgpO1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAobWF4IC0gbWluKSkgKyBtaW47IC8v0JzQsNC60YHQuNC80YPQvCDQvdC1INCy0LrQu9GO0YfQsNC10YLRgdGPLCDQvNC40L3QuNC80YPQvCDQstC60LvRjtGH0LDQtdGC0YHRj1xufVxuIiwiaW1wb3J0IHtWZWN0b3J9IGZyb20gXCIuL3ZlY3Rvci5qc1wiO1xuaW1wb3J0IHtTcHJpdGVTaGVldH0gZnJvbSBcIi4vc3ByaXRlLXNoZWV0LmpzXCI7XG5cbmV4cG9ydCBjbGFzcyBPYnN0YWNsZSB7XG4gICAgY29uc3RydWN0b3Ioe2dhbWVXaWR0aCA9IDY0MCwgZ2FtZUhlaWdodCA9IDY0MCwgaW5kZXggPSAxfSkge1xuICAgICAgICB0aGlzLnNwZWVkID0gMzEwO1xuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gbmV3IFZlY3RvcignbGVmdCcsIDApO1xuICAgICAgICB0aGlzLmxhc3RUaW1lID0gMDtcbiAgICAgICAgdGhpcy5pc1N0b3BlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRpbGVzID0gbmV3IFNwcml0ZVNoZWV0KHtcbiAgICAgICAgICAgIGltYWdlTmFtZTogJ29ic3RhY2xlcycsXG4gICAgICAgICAgICBpbWFnZVdpZHRoOiA0ODAsXG4gICAgICAgICAgICBpbWFnZUhlaWdodDogNDgwLFxuICAgICAgICAgICAgc3ByaXRlSGVpZ2h0OiA4MCxcbiAgICAgICAgICAgIHNwcml0ZVdpZHRoOiA4MCxcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudmlldyA9IHRoaXMudGlsZXMuZ2V0U3ByaXRlKGluZGV4KVxuICAgICAgICB0aGlzLmNvbGxpc2lvblNoYXBlID0ge3g6IDIwLCB5OiAzMCwgd2lkdGg6IDgwLCBoZWlnaHQ6IDgwfTtcbiAgICAgICAgdGhpcy5nYW1lV2lkdGggPSBnYW1lV2lkdGg7XG4gICAgICAgIHRoaXMueCA9IDA7XG4gICAgICAgIHRoaXMueSA9IDA7XG4gICAgICAgIHRoaXMuZGVhZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzQ3Jhc2ggPSBmYWxzZTtcbiAgICAgICAgLy8g0L/QviDRg9C80L7Qu9GH0LDQvdC40Y4g0L/QtdGA0YHQvtC90LDQtiDQuNC00LXRgiDQstC70LXQstC+XG4gICAgICAgIHRoaXMud2FsaygpO1xuICAgIH1cblxuICAgIC8vINC40LTRgtC4XG4gICAgd2FsaygpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNTdG9wZWQpIHJldHVybjtcbiAgICAgICAgdGhpcy52ZWxvY2l0eS5zZXREaXJlY3Rpb24oJ2xlZnQnLCB0aGlzLnNwZWVkKVxuICAgIH1cblxuICAgIHVwZGF0ZSh0aW1lLCB3aWR0aCkge1xuICAgICAgICAvLyDQv9GA0L7Qv9GD0YHQutCw0LXQvCDQv9C10YDQstGL0Lkg0LrQsNC00YBcbiAgICAgICAgaWYgKHRoaXMubGFzdFRpbWUgPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMubGFzdFRpbWUgPSB0aW1lO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCF0aGlzLmlzU3RvcGVkKSB7XG4gICAgICAgICAgICBpZiAodGhpcy54IDwgKDAgLSAodGhpcy50aWxlcy5zcHJpdGVXaWR0aCkpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kZWFkID0gdHJ1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy54ICs9ICh0aW1lIC0gdGhpcy5sYXN0VGltZSkgKiAodGhpcy52ZWxvY2l0eS54IC8gMTAwMCk7XG4gICAgICAgICAgICB0aGlzLnkgKz0gKHRpbWUgLSB0aGlzLmxhc3RUaW1lKSAqICh0aGlzLnZlbG9jaXR5LnkgLyAxMDAwKTtcbiAgICAgICAgICAgIHRoaXMubGFzdFRpbWUgPSB0aW1lO1xuICAgICAgICAgICAgdGhpcy52aWV3LnNldFhZKE1hdGgudHJ1bmModGhpcy54KSwgTWF0aC50cnVuYyh0aGlzLnkpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImltcG9ydCB7VmVjdG9yfSBmcm9tIFwiLi92ZWN0b3IuanNcIjtcbmltcG9ydCB7U3ByaXRlU2hlZXR9IGZyb20gXCIuL3Nwcml0ZS1zaGVldC5qc1wiO1xuaW1wb3J0IHtBbmltYXRlT2JqZWN0fSBmcm9tIFwiQC9qcy9hbmltYXRlT2JqZWN0XCI7XG5cbmV4cG9ydCBjbGFzcyBQbGF5ZXIge1xuICAgIC8vIGNvbnN0cnVjdG9yKHtpbWFnZU5hbWUsIHNwZWVkLCBpbWFnZVdpZHRoLCBpbWFnZUhlaWdodCwgc3ByaXRlV2lkdGgsIHNwcml0ZUhlaWdodCwgY29udHJvbH0pIHtcbiAgICBjb25zdHJ1Y3Rvcihjb250cm9sLCB5PTAsIHNwZWVkV2Fsaz0wKSB7XG4gICAgICAgIHRoaXMueCA9IDA7XG4gICAgICAgIHRoaXMueSA9IDA7XG4gICAgICAgIHRoaXMuc3BlZWQgPSAxMDUwO1xuICAgICAgICB0aGlzLnZlbG9jaXR5ID0gbmV3IFZlY3RvcigncmlnaHQnLCBzcGVlZFdhbGspO1xuICAgICAgICB0aGlzLmxhc3RUaW1lID0gMDtcbiAgICAgICAgdGhpcy5pc0p1bXBpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy50aWxlID0gbmV3IFNwcml0ZVNoZWV0KHtcbiAgICAgICAgICAgIGltYWdlTmFtZTogJ3BsYXllcicsXG4gICAgICAgICAgICBpbWFnZVdpZHRoOiAxNjgwLFxuICAgICAgICAgICAgaW1hZ2VIZWlnaHQ6IDcyMCxcbiAgICAgICAgICAgIHNwcml0ZVdpZHRoOiAyNDAsXG4gICAgICAgICAgICBzcHJpdGVIZWlnaHQ6IDI0MFxuICAgICAgICB9KVxuICAgICAgICAvLyDQv9C+INGD0LzQvtC70YfQsNC90LjRjiDQv9C10YDRgdC+0L3QsNC2INC40LTQtdGCINCy0L/RgNCw0LLQvlxuICAgICAgICB0aGlzLndhbGsoKTtcbiAgICAgICAgdGhpcy5jb250cm9sID0gY29udHJvbDtcbiAgICAgICAgdGhpcy5zdGFydFBvc1kgPSB5O1xuICAgICAgICB0aGlzLmlzU3RvcGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZGVhZENvdW50ID0gMDtcbiAgICAgICAgdGhpcy5jb2xsaXNpb25TaGFwZSA9IHt4OiAzNSwgeTogMCwgd2lkdGg6IDE3MCwgaGVpZ2h0OiAyMjB9O1xuICAgICAgICB0aGlzLmp1bXBBdWRpbyA9IG51bGw7XG4gICAgfVxuXG4gICAgLy8g0LjQtNGC0LhcbiAgICB3YWxrKCkge1xuICAgICAgICBpZiAodGhpcy5pc0p1bXBpbmcpIHJldHVybjtcbiAgICAgICAgdGhpcy52aWV3ID0gdGhpcy50aWxlLmdldEFuaW1hdGlvbihbNCwgNSwgNiwgN10sIDE1MCk7XG4gICAgICAgIHRoaXMudmlldy5zZXRYWShNYXRoLnRydW5jKHRoaXMueCksIE1hdGgudHJ1bmModGhpcy55KSk7XG4gICAgICAgIHRoaXMudmlldy5ydW4oKTtcbiAgICB9XG5cbiAgICAvLyDQv9GA0YvQs9Cw0YLRjFxuICAgIGp1bXAoKSB7XG4gICAgICAgIGlmKHRoaXMuanVtcEF1ZGlvKSB7XG4gICAgICAgICAgICB0aGlzLmp1bXBBdWRpby5wbGF5KCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaXNKdW1waW5nIHx8IHRoaXMuaXNTdG9wZWQpIHJldHVybjtcbiAgICAgICAgdGhpcy5pc0p1bXBpbmcgPSB0cnVlO1xuICAgICAgICB0aGlzLnZpZXcgPSB0aGlzLnRpbGUuZ2V0QW5pbWF0aW9uKFsxNSwgMTYsIDE3LCAxOCwgXSwgMTIwLCBmYWxzZSk7XG4gICAgICAgIHRoaXMudmVsb2NpdHkuc2V0RGlyZWN0aW9uKCd1cCcsIHRoaXMuc3BlZWQpO1xuICAgICAgICAvLyDQvNC10L3Rj9GO0YnQsNGP0YHRjyDQsNC90LjQvNCw0YbQuNGPINC/0YDQuCDQv9GA0YvQttC60LVcbiAgICAgICAgdGhpcy52aWV3Lm9uRW5kID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy52aWV3ID0gdGhpcy50aWxlLmdldEFuaW1hdGlvbihbMTldLCA1NTAsIGZhbHNlKTtcbiAgICAgICAgICAgIHRoaXMudmlldy5zZXRYWShNYXRoLnRydW5jKHRoaXMueCksIE1hdGgudHJ1bmModGhpcy55KSk7XG4gICAgICAgICAgICB0aGlzLnZpZXcub25FbmQgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy52aWV3ID0gdGhpcy50aWxlLmdldEFuaW1hdGlvbihbMjAsIDIxXSwgMTIwLCBmYWxzZSk7XG4gICAgICAgICAgICAgICAgdGhpcy52aWV3LnNldFhZKE1hdGgudHJ1bmModGhpcy54KSwgTWF0aC50cnVuYyh0aGlzLnkpKTtcbiAgICAgICAgICAgICAgICB0aGlzLnZpZXcub25FbmQgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMud2FsaygpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRoaXMudmlldy5ydW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMudmlldy5ydW4oKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnZpZXcucnVuKCk7XG4gICAgfVxuXG4gICAgLy8g0YHRgtC+0LvQutC90L7QstC10L3QuNC1XG4gICAgY3Jhc2gob2JzdGFjbGUsIG9ic3RhY2xlcykge1xuICAgICAgICBpZiAodGhpcy5pc1N0b3BlZCkgcmV0dXJuO1xuICAgICAgICB0aGlzLnN0b3AoKTtcbiAgICAgICAgdGhpcy5pc1N0b3BlZCA9IHRydWU7XG4gICAgICAgIHRoaXMudmVsb2NpdHkueSA9IDEwO1xuICAgICAgICB0aGlzLnkgPSB0aGlzLnN0YXJ0UG9zWTtcbiAgICAgICAgdGhpcy52aWV3ID0gdGhpcy50aWxlLmdldEFuaW1hdGlvbihbMTEsIDEyLCAxMywgMTRdLCAxNjAsIGZhbHNlKTtcbiAgICAgICAgdGhpcy52aWV3LnNldFhZKE1hdGgudHJ1bmModGhpcy54KSwgTWF0aC50cnVuYyh0aGlzLnkpKTtcbiAgICAgICAgb2JzdGFjbGVzLmZvckVhY2goaSA9PiB7XG4gICAgICAgICAgICBpLmlzU3RvcGVkID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIG9ic3RhY2xlLnggPSAwIC0gb2JzdGFjbGUudmlldy53aWR0aDtcbiAgICAgICAgb2JzdGFjbGUudmlldy5zZXRYWShNYXRoLnRydW5jKG9ic3RhY2xlLngpLCBNYXRoLnRydW5jKG9ic3RhY2xlLnkpKTtcbiAgICAgICAgdGhpcy52aWV3Lm9uRW5kID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pc1N0b3BlZCA9IGZhbHNlO1xuICAgICAgICAgICAgb2JzdGFjbGVzLmZvckVhY2goaSA9PiB7XG4gICAgICAgICAgICAgICAgaS5pc1N0b3BlZCA9IGZhbHNlO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHRoaXMud2FsaygpO1xuICAgICAgICAgICAgdGhpcy5kZWFkQ291bnQrKztcbiAgICAgICAgICAgIG9ic3RhY2xlLmlzQ3Jhc2ggPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMudmlldy5ydW4oKTtcbiAgICB9XG5cbiAgICAvLyDQvtGB0YLQsNC90L7QstC40YLRgdGPLCDQvtCx0L3Rg9C70Y/QtdC8INGB0LrQvtGA0L7RgdGC0YwgLCDQvtGB0YLQsNC90LDQstC70LjQstCw0LXQvCDQsNC90LjQvNCw0YbQuNGOXG4gICAgc3RvcCgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNKdW1waW5nKSByZXR1cm47XG4gICAgICAgIC8vIHRoaXMudmVsb2NpdHkuc2V0RGlyZWN0aW9uKGRpcmVjdGlvbiwgMCk7XG4gICAgICAgIHRoaXMudmlldyA9IHRoaXMudGlsZS5nZXRBbmltYXRpb24oWzRdLCAxNTApO1xuICAgICAgICB0aGlzLnZpZXcuc2V0WFkoTWF0aC50cnVuYyh0aGlzLngpLCBNYXRoLnRydW5jKHRoaXMueSkpO1xuICAgICAgICB0aGlzLnZpZXcuc3RvcCgpO1xuICAgIH1cblxuICAgIHVwZGF0ZVBvc2l0aW9uKHRpbWUpIHtcbiAgICAgICAgdGhpcy55ICs9ICh0aW1lIC0gdGhpcy5sYXN0VGltZSkgKiAodGhpcy52ZWxvY2l0eS55IC8gMTAwMCk7XG4gICAgICAgIHRoaXMudmVsb2NpdHkueSArPTI4O1xuICAgICAgICB0aGlzLnggKz0gKHRpbWUgLSB0aGlzLmxhc3RUaW1lKSAqICh0aGlzLnZlbG9jaXR5LnggLyAxMDAwKTtcbiAgICAgICAgLy8g0L3QtSDQvdC40LbQtSDQt9C90LDRh9C10L3QuNGPLCDRh9GC0L7QsSDQvdC1INC/0YDQvtCy0LDQu9C40LvRgdGPINC/0L7QtCDQt9C10LzQu9GOINC/0YDQuCDQv9GA0YvQttC60LVcbiAgICAgICAgaWYgKHRoaXMueSA+PSB0aGlzLnN0YXJ0UG9zWSkge1xuICAgICAgICAgICAgdGhpcy5pc0p1bXBpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMudmlldy5ydW4oKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbGxpZGUob2JzLCBvYnN0YWNsZXMpIHtcbiAgICAgICAgbGV0IGhpdCA9IGZhbHNlO1xuICAgICAgICAvL9CV0YHQu9C4INC+0LHRitC10LrRgtGLINC90LDRhdC+0LTRj9GC0YHRjyDQvdCwINC+0LTQvdC+0Lkg0LvQuNC90LjQuCDQv9C+INCz0L7RgNC40LfQvtC90YLQsNC70Lh7XG4gICAgICAgIGlmICh0aGlzLnkgPCBvYnMueSArIG9icy52aWV3LmhlaWdodCAtIG9icy5jb2xsaXNpb25TaGFwZS55ICYmIHRoaXMueSArIHRoaXMudmlldy5oZWlnaHQgPiBvYnMueSAtIG9icy5jb2xsaXNpb25TaGFwZS55KSB7XG4gICAgICAgICAgICAvL9CV0YHQu9C4INC+0LHRitC10LrRgtGLINC90LDRhdC+0LTRj9GC0YHRjyDQvdCwINC+0LTQvdC+0Lkg0LvQuNC90LjQuCDQv9C+INCy0LXRgNGC0LjQutCw0LvQuFxuICAgICAgICAgICAgaWYgKHRoaXMueCArIHRoaXMudmlldy53aWR0aCAtIHRoaXMuY29sbGlzaW9uU2hhcGUueCA+IG9icy54ICYmIHRoaXMueCArIHRoaXMuY29sbGlzaW9uU2hhcGUueCArIDIwIDwgb2JzLnggKyBvYnMudmlldy53aWR0aCAtIG9icy5jb2xsaXNpb25TaGFwZS54KSB7XG4gICAgICAgICAgICAgICAgaGl0ID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB0aGlzLmNyYXNoKG9icywgb2JzdGFjbGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaGl0O1xuICAgIH1cblxuICAgIHVwZGF0ZSh0aW1lKSB7XG4gICAgICAgIC8vINC/0YDQvtC/0YPRgdC60LDQtdC8INC/0LXRgNCy0YvQuSDQutCw0LTRgFxuICAgICAgICBpZiAodGhpcy5sYXN0VGltZSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5jb250cm9sLmp1bXApIHtcbiAgICAgICAgICAgIHRoaXMuanVtcCgpO1xuICAgICAgICB9IGVsc2UgaWYgKHRoaXMuY29udHJvbC5kb3duKSB7XG4gICAgICAgICAgICB0aGlzLnN0b3AoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLmlzSnVtcGluZykge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVQb3NpdGlvbih0aW1lKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxhc3RUaW1lID0gdGltZTtcbiAgICAgICAgdGhpcy52aWV3LnNldFhZKE1hdGgudHJ1bmModGhpcy54KSwgTWF0aC50cnVuYyh0aGlzLnkpKTtcbiAgICAgICAgdGhpcy52aWV3LnVwZGF0ZSh0aW1lKTtcbiAgICB9XG59XG4iLCJleHBvcnQgY2xhc3MgU2NlbmUge1xuICAgIGNvbnN0cnVjdG9yKGdhbWUpIHtcbiAgICAgICAgdGhpcy5nYW1lID0gZ2FtZTtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSB0aGlzLmNvbnN0cnVjdG9yLldPUktJTkc7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBXT1JLSU5HKCkge1xuICAgICAgICByZXR1cm4gJ1dPUktJTkcnO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgTE9BREVEKCkge1xuICAgICAgICByZXR1cm4gJ0xPQURFRCc7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBQUkVfU1RBUlQoKSB7XG4gICAgICAgIHJldHVybiAnUFJFX1NUQVJUJztcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0IFNUQVJUX0dBTUUoKSB7XG4gICAgICAgIHJldHVybiAnU1RBUlRfR0FNRSc7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBTVE9QX0dBTUUoKSB7XG4gICAgICAgIHJldHVybiAnU1RPUF9HQU1FJ1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXQgR0FNRV9PVkVSKCkge1xuICAgICAgICByZXR1cm4gJ0dBTUVfT1ZFUic7XG4gICAgfVxuXG4gICAgc3RhdGljIGdldCBGSU5JU0hFRCgpIHtcbiAgICAgICAgcmV0dXJuICdGSU5JU0hFRCc7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgdGhpcy5zdGF0dXMgPSB0aGlzLmNvbnN0cnVjdG9yLldPUktJTkc7XG4gICAgfVxuXG4gICAgZmluaXNoKHN0YXR1cykge1xuICAgICAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgICB9XG5cbiAgICByZXNpemUoKSB7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dC5zYXZlKCk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dC5zY2FsZShpbm5lcldpZHRoIC8gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgsIGlubmVySGVpZ2h0IC8gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LnJlc3RvcmUoKTtcbiAgICB9XG5cbiAgICByZW5kZXIodGltZSkge1xuICAgICAgICAvLyB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aGlzLnJlc2l6ZSk7XG4gICAgICAgIHRoaXMucmVzaXplKCk7XG4gICAgfVxufVxuIiwiaW1wb3J0IHtTY2VuZX0gZnJvbSAnLi4vc2NlbmUuanMnXG5pbXBvcnQge1BsYXllcn0gZnJvbSBcIi4uL3BsYXllclwiO1xuaW1wb3J0IHtTcHJpdGVTaGVldH0gZnJvbSBcIi4uL3Nwcml0ZS1zaGVldFwiO1xuaW1wb3J0IHtBbmltYXRlT2JqZWN0fSBmcm9tIFwiQC9qcy9hbmltYXRlT2JqZWN0XCI7XG5pbXBvcnQge1J1bm5pbmd9IGZyb20gXCJAL2pzL3NjZW5lcy9ydW5uaW5nXCI7XG5pbXBvcnQge0ZseUVsZW1lbnR9IGZyb20gXCJAL2pzL2ZseUVsZW1lbnRcIjtcbmltcG9ydCB7YWRkQ291bnQsIGdldENvdW50fSBmcm9tIFwiQC9qcy9pbmRleFwiXG5cbmV4cG9ydCBjbGFzcyBHYW1lT3ZlciBleHRlbmRzIFNjZW5lIHtcbiAgICBjb25zdHJ1Y3RvcihnYW1lKSB7XG4gICAgICAgIHN1cGVyKGdhbWUpXG4gICAgICAgIHRoaXMuaXNTaG93TW9kYWwgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIDMwMCk7XG4gICAgICAgIHRoaXMucGxheWVyLnRpbGUgPSBuZXcgU3ByaXRlU2hlZXQoe1xuICAgICAgICAgICAgaW1hZ2VOYW1lOiAnZ2FtZU92ZXJQbGF5ZXInLFxuICAgICAgICAgICAgaW1hZ2VXaWR0aDogMTM0MSxcbiAgICAgICAgICAgIGltYWdlSGVpZ2h0OiAzMzYsXG4gICAgICAgICAgICBzcHJpdGVXaWR0aDogMzM2LFxuICAgICAgICAgICAgc3ByaXRlSGVpZ2h0OiAzMzZcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucGxheWVyLnZpZXcgPSB0aGlzLnBsYXllci50aWxlLmdldEFuaW1hdGlvbihbMSwgMiwgMywgNF0sIDE1MCwgZmFsc2UpO1xuICAgICAgICB0aGlzLnBsYXllci54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLyAyIC0gdGhpcy5wbGF5ZXIudmlldy53aWR0aC8xLjU7XG4gICAgICAgIHRoaXMucGxheWVyLnkgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLnBsYXllci52aWV3LmhlaWdodDtcbiAgICAgICAgdGhpcy5wbGF5ZXIudmlldy5zZXRYWShNYXRoLnRydW5jKHRoaXMueCksIE1hdGgudHJ1bmModGhpcy55KSk7XG4gICAgICAgIHRoaXMucGxheWVyLnZpZXcucnVuKCk7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7XG4gICAgICAgICAgICB4OiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIHk6IDAsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMub3BhY2l0eSA9IDA7XG4gICAgICAgIHRoaXMuc2t5MSA9IG51bGw7XG4gICAgICAgIHRoaXMuc2t5MiA9IG5ldyBBbmltYXRlT2JqZWN0KCdza3kxJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgsIDApO1xuICAgICAgICB0aGlzLnNreTMgPSBudWxsO1xuICAgICAgICB0aGlzLnNreTUgPSBudWxsO1xuICAgICAgICB0aGlzLmxvZ29DbG91ZCA9IG51bGw7XG4gICAgICAgIHRoaXMudGV4dEdhbWVPdmVyID0gbnVsbDtcbiAgICAgICAgdGhpcy5sYW1hID0gbnVsbDtcbiAgICAgICAgdGhpcy5zY2FsZSA9IDA7XG4gICAgICAgIHRoaXMuaXNDaGFuZ2VTY2FsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnRleHRHYW1lT3ZlclkgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMjtcbiAgICAgICAgdGhpcy5pc1N0YXJ0TGV2aXRhdGlvbiA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzU2hvd01vZGFsID0gZmFsc2U7XG4gICAgICAgIHRoaXMubW9kYWxHYW1lT3ZlciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2RhbC1nYW1lLW92ZXInKTtcbiAgICAgICAgdGhpcy5tb2RhbEdhbWVPdmVyVGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2RhbC10ZXh0LWdhbWUtb3ZlcicpO1xuICAgICAgICB0aGlzLm1vZGFsR2FtZU92ZXJCdG5zID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21vZGFsLWdhbWUtb3Zlcl9fYnRucycpO1xuICAgICAgICB0aGlzLmJlc3RDb3VudCA9IGdldENvdW50KCk7XG4gICAgICAgIC8vIHRoaXMuYmlyZCA9IG5ldyBGbHlFbGVtZW50KHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIsMCwnYmlyZCcsIDQwMCwgMTAwLCAxMDAsIDEwMCk7XG4gICAgICAgIC8vIHRoaXMuYmlyZC55ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzI7XG4gICAgICAgIC8vIHRoaXMubW91c2UgPSBuZXcgRmx5RWxlbWVudCh0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCwyMDAsJ21vdXNlJywgNTAwLCAxMDAsIDEwMCwgMTAwLCB0cnVlKTtcbiAgICAgICAgLy8gdGhpcy5tb3VzZS54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMjtcbiAgICAgICAgLy8gdGhpcy5iaXJkLnN0YXJ0Rmx5ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMjtcbiAgICAgICAgLy8gdGhpcy5tb3VzZS5zdGFydFdhdmVGbHkgPSAgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMjtcbiAgICB9XG5cbiAgICAvLyDRgtC10YHRgiDQv9GA0Lgg0LPQtdC50LzQvtCy0LXRgNC1XG4gICAgZHJhd1RleHQoKSB7XG4gICAgICAgIHRoaXMubW9kYWxHYW1lT3Zlci5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICB0aGlzLm1vZGFsR2FtZU92ZXJUZXh0LmlubmVySFRNTCA9ICfQo9C/0YEhIDxicj4g0JvQsNC80LAg0LfQsNGB0L3Rg9C70LAhIDxicj4g0JLRgdGC0YDQtdGC0LjQvNGB0Y8g0LfQsNCy0YLRgNCwIDxicj4g0LjQu9C4INC10YnRkSDQv9C+0LjQs9GA0LDQtdC8Pyc7XG4gICAgfVxuXG4gICAgc2hvd01vZGFsUmV0cnkoKSB7XG4gICAgICAgIHRoaXMubW9kYWxHYW1lT3ZlckJ0bnMuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgICAgICB0aGlzLm1vZGFsR2FtZU92ZXIuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgdGhpcy5tb2RhbEdhbWVPdmVyVGV4dC5pbm5lckhUTUwgPSAn0JvRg9GH0YjQuNC5INGA0LXQt9GD0LvRjNGC0LDRgjogPGJyPicgKyB0aGlzLmJlc3RDb3VudCArICc8YnI+INCS0LDRiCDRgNC10LfRg9C70YzRgtCw0YI6IDxicj4nICsgdGhpcy5nYW1lLmNvdW50O1xuICAgICAgICBpZiAodGhpcy5nYW1lLmNvdW50ID4gdGhpcy5iZXN0Q291bnQpIHtcbiAgICAgICAgICAgIGFkZENvdW50KCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpbml0KCkge1xuICAgICAgICBzdXBlci5pbml0KCk7XG4gICAgICAgIHRoaXMubW9kYWxHYW1lT3ZlckJ0bnMuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICB0aGlzLnNreTEgPSBuZXcgQW5pbWF0ZU9iamVjdCgnc2t5MicsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMiwgMSwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcywgJ2xlZnQnLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yIC0gNDcwKTtcbiAgICAgICAgdGhpcy5za3k1ID0gbmV3IEFuaW1hdGVPYmplY3QoJ3NreTMnLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCwgNTAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdsZWZ0JywgIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgLSA1MCk7XG4gICAgICAgIHRoaXMubG9nbyA9ICBuZXcgQW5pbWF0ZU9iamVjdCgnbG9nbycsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8yLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzKTtcbiAgICAgICAgdGhpcy5za3kzID0gbmV3IEFuaW1hdGVPYmplY3QoJ3NreTInLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuc2t5MS5oZWlnaHQvMS41LCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnbGVmdCcsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoIC0gMTAwKTtcbiAgICAgICAgdGhpcy5za3lCaWcgPSBuZXcgQW5pbWF0ZU9iamVjdCgnc2t5QmlnJywgLTUwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSAxNTAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdyaWdodCcsIC01MCk7XG4gICAgICAgIHRoaXMuc2t5QmlnMiA9IG5ldyBBbmltYXRlT2JqZWN0KCdza3lCaWcnLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC0yNTAsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIDE1MCwgMSwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcywgJ2xlZnQnLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yIC0gMTUwKTtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTEgPSBuZXcgQW5pbWF0ZU9iamVjdCgnb2JzdGFjbGVzJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDUwLCAwLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnZG93bicsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgKyA1MCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzEuNSk7XG4gICAgICAgIHRoaXMub2JzdGFjbGUyID0gbmV3IEFuaW1hdGVPYmplY3QoJ29ic3RhY2xlcycsIDIwLCAwLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnZG93bicsIDIwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMyk7XG4gICAgICAgIHRoaXMub2JzdGFjbGUzID0gbmV3IEFuaW1hdGVPYmplY3QoJ29ic3RhY2xlcycsIDQwLCAwLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnZG93bicsIDQwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMS41KTtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTQgPSBuZXcgQW5pbWF0ZU9iamVjdCgnb2JzdGFjbGVzJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDkwLCAwLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnZG93bicsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgKyA5MCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzEuMik7XG4gICAgICAgIHRoaXMub2JzdGFjbGU1ID0gbmV3IEFuaW1hdGVPYmplY3QoJ29ic3RhY2xlcycsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgKyAxNTAsIDAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdkb3duJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDE1MCx0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMy4zKTtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTYgPSBuZXcgQW5pbWF0ZU9iamVjdCgnb2JzdGFjbGVzJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDgwLCAwLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnZG93bicsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgKyA4MCwgMzApO1xuICAgICAgICB0aGlzLm9ic3RhY2xlNyA9IG5ldyBBbmltYXRlT2JqZWN0KCdvYnN0YWNsZXMnLCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kxLndpZHRoIC0gNzAsIDAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdkb3duJywgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuc2t5MS53aWR0aCAtIDcwKTtcbiAgICAgICAgdGhpcy5sYW1hID0gbmV3IEFuaW1hdGVPYmplY3QoJ21lbnVMYW1hJywgLTQwMCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMubWVudUxhbWEuaGVpZ2h0LzEuNSwgMSwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcywgJ3JpZ2h0JywgLTE1MCwgKTtcbiAgICAgICAgdGhpcy5sYW1hU2xlZXAgPSBuZXcgQW5pbWF0ZU9iamVjdCgnbWVudUxhbWFTbGVlcCcsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoICwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMubWVudUxhbWFTbGVlcC5oZWlnaHQvMS41LCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnbGVmdCcsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoIC0gMjUwKTtcblxuICAgICAgICB0aGlzLnRleHRHYW1lT3ZlciA9IG5ldyBBbmltYXRlT2JqZWN0KCd0ZXh0R2FtZU92ZXInLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvNywgMCwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcyk7XG5cbiAgICAgICAgc2V0VGltZW91dCgoKT0+IHsgdGhpcy5pc1Nob3dNb2RhbCA9IHRydWU7fSwgNTAwMCk7XG4gICAgfVxuXG4gICAgcmV0cnkoKXtcbiAgICAgICAgICAgIHRoaXMubW9kYWxHYW1lT3ZlckJ0bnMuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xuICAgICAgICAgICAgdGhpcy5tb2RhbEdhbWVPdmVyLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgIHRoaXMuaXNTaG93TW9kYWwgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5jdXJyZW50U2NlbmUgPSBuZXcgUnVubmluZyh0aGlzLmdhbWUpO1xuICAgICAgICAgICAgdGhpcy5nYW1lLmN1cnJlbnRTY2VuZS5pbml0KCk7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5yZW1vdmVFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsdGhpcy5yZXRyeSlcbiAgICB9XG5cbiAgICB1cGRhdGUodGltZSkge1xuICAgICAgICAvLyB0aGlzLmJpcmQudXBkYXRlKHRpbWUpO1xuICAgICAgICAvLyB0aGlzLm1vdXNlLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgaWYoT2JqZWN0LmtleXModGhpcy5za3kyLmltYWdlcykubGVuZ3RoIDw9MCkge1xuICAgICAgICAgICAgdGhpcy5za3kyLmltYWdlcyA9IHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzO1xuICAgICAgICAgICAgdGhpcy5za3kyLmNvbnRleHQgPSB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMucG9zaXRpb24ueCA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uLnggLT0gMztcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pc1Nob3dNb2RhbCAmJiB0aGlzLm9wYWNpdHkgPD0xKSB7XG4gICAgICAgICAgICB0aGlzLm9wYWNpdHkgKz0gMC4wMTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlckNsb3VkcygpIHtcbiAgICAgICAgaWYodGhpcy5za3kyLnZlY3RvcjEueCA+PSAtMTUwICYmICF0aGlzLnNreTIuaXNMZXZpdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnNreTIucnVuKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2t5Mi5sZXZpdGF0aW9uKC0xNTAsIDApO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuc2t5MS52ZWN0b3IxLnggPj0gdGhpcy5za3kxLmVuZFggJiYgIXRoaXMuc2t5MS5pc0xldml0YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc2t5MS5ydW4oKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5za3kxLmxldml0YXRpb24odGhpcy5za3kxLmVuZFgsIHRoaXMuc2t5MS5lbmRZKTtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLnNreTMudmVjdG9yMS54ID4gdGhpcy5za3kzLmVuZFggJiYgIXRoaXMuc2t5My5pc0xldml0YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24gKSB7XG4gICAgICAgICAgICB0aGlzLnNreTMucnVuKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2t5My5sZXZpdGF0aW9uKHRoaXMuc2t5My5lbmRYICwgdGhpcy5za3kzLmVuZFkpO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMuc2t5NS52ZWN0b3IxLnggPiB0aGlzLnNreTUuZW5kWCAmJiAhdGhpcy5za3k1LmlzTGV2aXRhdGlvbiB8fCB0aGlzLmlzU3RvcEFuaW1hdGlvbiApIHtcbiAgICAgICAgICAgIHRoaXMuc2t5NS5ydW4oKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5za3k1Lmxldml0YXRpb24odGhpcy5za3k1LmVuZFggLCB0aGlzLnNreTUuZW5kWSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXJHYW1lT3ZlckltZygpIHtcbiAgICAgICAgaWYgKHRoaXMuc2NhbGUgPCAxLjUgJiYgIXRoaXMuaXNDaGFuZ2VTY2FsZSkge1xuICAgICAgICAgICAgdGhpcy5zY2FsZSArPTAuMDM7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5zY2FsZS50b0ZpeGVkKDEpID09PSAnMS41Jykge1xuICAgICAgICAgICAgdGhpcy5pc0NoYW5nZVNjYWxlID10cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHRoaXMuaXNDaGFuZ2VTY2FsZSAmJiB0aGlzLnNjYWxlID4gMS4yICYmIHRoaXMudGV4dEdhbWVPdmVyWSA+PSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvNyApIHtcbiAgICAgICAgICAgIHRoaXMuc2NhbGUgLT0wLjAyO1xuICAgICAgICAgICAgdGhpcy50ZXh0R2FtZU92ZXJZIC09MTQ7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy50ZXh0R2FtZU92ZXIud2lkdGggLT0zMDtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnRleHRHYW1lT3Zlci5oZWlnaHQgLT0xMDtcbiAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy50ZXh0R2FtZU92ZXIuZHJhd0ltYWdlU2NhbGUodGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLyAyLCB0aGlzLnRleHRHYW1lT3ZlclksIHRoaXMuc2NhbGUsdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMudGV4dEdhbWVPdmVyLndpZHRoLCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy50ZXh0R2FtZU92ZXIuaGVpZ2h0KTtcbiAgICB9XG5cbiAgICByZW5kZXJHYW1lT3Zlck1vZGFsKCkge1xuICAgICAgICBpZiAodGhpcy5pc0NoYW5nZVNjYWxlICYmIHRoaXMuc2NhbGUgPD0xLjIgKSB7XG4gICAgICAgICAgICBpZiAoIXRoaXMuaXNTaG93TW9kYWwpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSAxO1xuICAgICAgICAgICAgICAgIHRoaXMuZHJhd1RleHQoKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0Lmdsb2JhbEFscGhhID0gdGhpcy5vcGFjaXR5O1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd01vZGFsUmV0cnkoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXJMYW1hKCkge1xuICAgICAgICBpZih0aGlzLmxhbWEudmVjdG9yMS54IDw9IHRoaXMubGFtYS5lbmRYICYmICF0aGlzLmxhbWEuaXNMZXZpdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmxhbWEucnVuKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubGFtYS5sZXZpdGF0aW9uKHRoaXMubGFtYS5lbmRYLCB0aGlzLmxhbWEuZW5kWSlcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLmxhbWFTbGVlcC52ZWN0b3IxLnggPj0gdGhpcy5sYW1hU2xlZXAuZW5kWCAmJiAhdGhpcy5sYW1hU2xlZXAuaXNMZXZpdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLmxhbWFTbGVlcC5ydW4oKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5sYW1hU2xlZXAubGV2aXRhdGlvbih0aGlzLmxhbWFTbGVlcC5lbmRYLCB0aGlzLmxhbWFTbGVlcC5lbmRZLCAxLCAzMClcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXJGcm9udE9ic3RhY2xlcygpIHtcbiAgICAgICAgaWYodGhpcy5vYnN0YWNsZTIudmVjdG9yMS55IDw9IHRoaXMub2JzdGFjbGUyLmVuZFkgJiYgIXRoaXMub2JzdGFjbGUyLmlzUm90YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGUyLnJ1blNwcml0ZSgzMjAsIDMyMClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGUyLmRyYXdJbWFnZVNwcml0ZVJvdGF0ZWQodGhpcy5vYnN0YWNsZTIuZW5kWCwgdGhpcy5vYnN0YWNsZTIuZW5kWSwgMCwgLTIsIDAuMDA1LCAzMjAsIDMyMClcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLm9ic3RhY2xlMy52ZWN0b3IxLnkgPD0gdGhpcy5vYnN0YWNsZTMuZW5kWSAmJiAhdGhpcy5vYnN0YWNsZTMuaXNSb3RhdGlvbiB8fCB0aGlzLmlzU3RvcEFuaW1hdGlvbikge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTMucnVuU3ByaXRlKDMyMCwgNDAwKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTMuZHJhd0ltYWdlU3ByaXRlUm90YXRlZCh0aGlzLm9ic3RhY2xlMy5lbmRYLCB0aGlzLm9ic3RhY2xlMy5lbmRZLCAwLCAtMiwgMC4wMDUsIDMyMCwgNDAwKVxuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMub2JzdGFjbGU0LnZlY3RvcjEueSA8PSB0aGlzLm9ic3RhY2xlNC5lbmRZICYmICF0aGlzLm9ic3RhY2xlNC5pc1JvdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlNC5ydW5TcHJpdGUoODAsIDQwMClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGU0LmRyYXdJbWFnZVNwcml0ZVJvdGF0ZWQodGhpcy5vYnN0YWNsZTQuZW5kWCwgdGhpcy5vYnN0YWNsZTQuZW5kWSwgMCwgLTIsIDAuMDA1LCA4MCwgNDAwKVxuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMub2JzdGFjbGU1LnZlY3RvcjEueSA8PSB0aGlzLm9ic3RhY2xlNS5lbmRZICYmICF0aGlzLm9ic3RhY2xlNS5pc1JvdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlNS5ydW5TcHJpdGUoMjQwLCA0MDApXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlNS5kcmF3SW1hZ2VTcHJpdGVSb3RhdGVkKHRoaXMub2JzdGFjbGU1LmVuZFgsIHRoaXMub2JzdGFjbGU1LmVuZFksIDAsIC0yLCAwLjAwNSwgMjQwLCA0MDApXG4gICAgICAgIH1cbiAgICAgICAgaWYodGhpcy5vYnN0YWNsZTYudmVjdG9yMS55IDw9IHRoaXMub2JzdGFjbGU2LmVuZFkgJiYgIXRoaXMub2JzdGFjbGU2LmlzUm90YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGU2LnJ1blNwcml0ZSgxNjAsIDQwMClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGU2LmRyYXdJbWFnZVNwcml0ZVJvdGF0ZWQodGhpcy5vYnN0YWNsZTYuZW5kWCwgdGhpcy5vYnN0YWNsZTYuZW5kWSwgMCwgLTIsIDAuMDAyLCAxNjAsIDQwMClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcih0aW1lKSB7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dC5nbG9iYWxBbHBoYSA9IDE7XG4gICAgICAgIHRoaXMudXBkYXRlKHRpbWUpO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZUZ1bGxTY3JlZW4oMCwgMCwgJ2JnTWVudScpO1xuICAgICAgICB0aGlzLnJlbmRlckNsb3VkcygpO1xuICAgICAgICB0aGlzLnJlbmRlckdhbWVPdmVySW1nKCk7XG4gICAgICAgIHRoaXMuc2t5QmlnLmxldml0YXRpb24odGhpcy5za3lCaWcuZW5kWCwgdGhpcy5za3lCaWcuZW5kWSwxLDQwLDAuMywwLDAsNjAwLDM0MCw0MDAsMjQwKTtcbiAgICAgICAgdGhpcy5za3lCaWcyLmxldml0YXRpb24odGhpcy5za3lCaWcyLmVuZFgsIHRoaXMuc2t5QmlnMi5lbmRZLDEsNDAsMC4zLDAsMCw2MDAsMzQwLDQwMCwyNDApO1xuICAgICAgICB0aGlzLnJlbmRlckZyb250T2JzdGFjbGVzKCk7XG4gICAgICAgIC8vIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1Nwcml0ZSh0aGlzLmJpcmQudmlldyk7XG4gICAgICAgIC8vIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1Nwcml0ZSh0aGlzLm1vdXNlLnZpZXcpO1xuICAgICAgICB0aGlzLnJlbmRlckxhbWEoKTtcbiAgICAgICAgc3VwZXIucmVuZGVyKHRpbWUpO1xuICAgICAgICB0aGlzLnJlbmRlckdhbWVPdmVyTW9kYWwoKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1NjZW5lfSBmcm9tICcuLi9zY2VuZS5qcyc7XG5cbmV4cG9ydCBjbGFzcyBMb2FkaW5nIGV4dGVuZHMgU2NlbmUge1xuICAgIGNvbnN0cnVjdG9yKGdhbWUpIHtcbiAgICAgICAgc3VwZXIoZ2FtZSk7XG4gICAgICAgIHRoaXMubG9hZGVkQXQgPSAwO1xuICAgICAgICB0aGlzLmlzUHJlc3NlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBlcnNlbnQgPSAwO1xuICAgICAgICB0aGlzLnByb2dyZXNzV2lkdGggPSAzMDA7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSA2MDAwOyAvLyA0INGB0LXQutGD0L3QtNGLINC00LvRjyDRgNCw0YHRh9C10YLQsCDQuCDQvtGC0YDQuNGB0L7QstC60Lgg0LLRgdC10YUg0Y3Qu9C10LzQvdGC0L7QslxuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIHN1cGVyLmluaXQoKTtcbiAgICAgICAgdGhpcy5sb2FkZWRBdCA9IDA7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCAoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaXNQcmVzc2VkID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIChldmVudCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5pc1ByZXNzZWQgPSB0cnVlO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICB1cGRhdGUodGltZSkge1xuICAgICAgICBpZiAodGhpcy5sb2FkZWRBdCA9PT0gMCAmJiB0aGlzLmdhbWUuc2NyZWVuLmlzSW1hZ2VzTG9hZGVkICYmIHRoaXMuZ2FtZS5zY3JlZW4uaXNBdWRpb3NMb2FkZWQgKSB7XG4gICAgICAgICAgICB0aGlzLmxvYWRlZEF0ID0gdGltZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGltZSA8PSB0aGlzLmxvYWRlZEF0ICsgdGhpcy5kdXJhdGlvbiAmJiB0aGlzLnBlcnNlbnQgPD0gdGhpcy5wcm9ncmVzc1dpZHRoICkge1xuICAgICAgICAgICAgdGhpcy5wZXJzZW50ID0gKHRpbWUgLSB0aGlzLmxvYWRlZEF0KSp0aGlzLnByb2dyZXNzV2lkdGggLyB0aGlzLmR1cmF0aW9uO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmxvYWRlZEF0ICE9PSAwICYmICh0aW1lIC0gdGhpcy5sb2FkZWRBdCkgPiB0aGlzLmR1cmF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnBlcnNlbnQgPSB0aGlzLnByb2dyZXNzV2lkdGg7XG4gICAgICAgICAgICBpZiAodGhpcy5pc1ByZXNzZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZpbmlzaChTY2VuZS5MT0FERUQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyUHJvZ3Jlc3NCYXIoKSB7XG4gICAgICAgIGNvbnN0IHdpZHRoID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiAtIHRoaXMucHJvZ3Jlc3NXaWR0aC8yO1xuICAgICAgICBjb25zdCBoZWlnaHQgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMS41ICsgNzA7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1NjYWxlSW1hZ2UoJ3Byb2dyZXNzV3JhcCcsIHdpZHRoICwgaGVpZ2h0LCAwLDAsIDMwMCwgMzYsIHRoaXMucHJvZ3Jlc3NXaWR0aCwgMzYpO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSh3aWR0aCAsIGhlaWdodCwgJ3Byb2dyZXNzU3RhcnQnKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgncHJvZ3Jlc3MnLCB3aWR0aCsyMiwgaGVpZ2h0LCAwLDAsIDI4NSwgMzYsIHRoaXMucGVyc2VudCwgMzYgKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgncHJvZ3Jlc3NMYW1hJyx3aWR0aCArIHRoaXMucGVyc2VudCAtIDUwICwgaGVpZ2h0IC0gIDUwLCAwLDAsMjMyLDIzMiwxMDAsMTAwKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5wcmludFRleHQod2lkdGggKyB0aGlzLnByb2dyZXNzV2lkdGggKyA1MCwgaGVpZ2h0ICsgMjcsIGAke01hdGguZmxvb3IodGhpcy5wZXJzZW50LzMpfSAlYCwnMjNweCcsICcjZmZmZmZmJylcbiAgICB9XG5cbiAgICByZW5kZXIodGltZSkge1xuICAgICAgICB0aGlzLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgnYmdMb2FkaW5nJywgLSh0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQqMS10aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCkvMiwwLCAwLDAsIDcwMCwgNzAwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQqMSwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0ICk7XG4gICAgICAgIHRoaXMucmVuZGVyUHJvZ3Jlc3NCYXIoKTtcbiAgICAgICAgaWYgKCF0aGlzLmlzUHJlc3NlZCkge1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5wcmludFRleHQodGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiAtIDE1MCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gNTAsIFwi0J3QsNC20LzQuNGC0LUg0L3QsCDQu9GOINCx0YPRjiAg0LrQvdC+0L/QutGDXCIpXG4gICAgICAgIH1cbiAgICAgICAgc3VwZXIucmVuZGVyKHRpbWUpXG4gICAgfVxufVxuIiwiaW1wb3J0IHtTY2VuZX0gZnJvbSAnLi4vc2NlbmUuanMnO1xuaW1wb3J0IHtBbmltYXRlT2JqZWN0fSBmcm9tIFwiQC9qcy9hbmltYXRlT2JqZWN0XCI7XG5pbXBvcnQge0ZseUVsZW1lbnR9IGZyb20gXCJAL2pzL2ZseUVsZW1lbnRcIjtcblxuZXhwb3J0IGNsYXNzIE1lbnUgZXh0ZW5kcyBTY2VuZSB7XG4gICAgY29uc3RydWN0b3IoZ2FtZSkge1xuICAgICAgICBzdXBlcihnYW1lKVxuICAgICAgICB0aGlzLnNreTEgPSBudWxsO1xuICAgICAgICB0aGlzLnNreTIgPSBuZXcgQW5pbWF0ZU9iamVjdCgnc2t5MScsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLCAwKTtcbiAgICAgICAgdGhpcy5za3kzID0gbnVsbDtcbiAgICAgICAgdGhpcy5sb2dvID0gbnVsbDtcbiAgICAgICAgdGhpcy5sb2dvQ2xvdWQgPSBudWxsO1xuICAgICAgICB0aGlzLm9ic3RhY2xlMSA9IG51bGw7XG4gICAgICAgIHRoaXMub2JzdGFjbGUyID0gbnVsbDtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTMgPSBudWxsO1xuICAgICAgICB0aGlzLm9ic3RhY2xlNCA9IG51bGw7XG4gICAgICAgIHRoaXMub2JzdGFjbGU1ID0gbnVsbDtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTYgPSBudWxsO1xuICAgICAgICB0aGlzLm9ic3RhY2xlNyA9IG51bGw7XG4gICAgICAgIHRoaXMubGFtYSA9IG51bGw7XG4gICAgICAgIHRoaXMuaXNTdG9wQW5pbWF0aW9uID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc2NhbGUgPSAwO1xuICAgICAgICB0aGlzLmJ0blN0YXJ0ID0gbnVsbDtcbiAgICAgICAgdGhpcy5pc1Nob3dCdG4gPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zdGFydEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdGFydC1idG4nKTtcbiAgICAgICAgdGhpcy5tdXRlQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ211dGUtYnRuJyk7XG4gICAgICAgIHRoaXMuYmlyZCA9IG5ldyBGbHlFbGVtZW50KHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIsMCwnYmlyZCcsIDQwMCwgMTAwLCAxMDAsIDEwMCk7XG4gICAgICAgIHRoaXMuYmlyZC55ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzI7XG4gICAgICAgIHRoaXMubW91c2UgPSBuZXcgRmx5RWxlbWVudCh0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCwyMDAsJ21vdXNlJywgNTAwLCAxMDAsIDEwMCwgMTAwLCB0cnVlKTtcbiAgICAgICAgdGhpcy5tb3VzZS54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMjtcbiAgICAgICAgdGhpcy5iaXJkLnN0YXJ0Rmx5ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMjtcbiAgICAgICAgdGhpcy5tb3VzZS5zdGFydFdhdmVGbHkgPSAgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMjtcbiAgICB9XG5cbiAgICBpbml0KCkge1xuICAgICAgICBzdXBlci5pbml0KCk7XG4gICAgICAgIHRoaXMuc3RhcnRCdG4uc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcbiAgICAgICAgdGhpcy5tdXRlQnRuLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XG4gICAgICAgIHRoaXMuc2t5MSA9IG5ldyBBbmltYXRlT2JqZWN0KCdza3kyJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8yLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnbGVmdCcsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgLSA0NzApO1xuICAgICAgICB0aGlzLnNreTUgPSBuZXcgQW5pbWF0ZU9iamVjdCgnc2t5MycsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLCA1MCwgMSwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcywgJ2xlZnQnLCAgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiAtIDUwKTtcbiAgICAgICAgdGhpcy5sb2dvID0gIG5ldyBBbmltYXRlT2JqZWN0KCdsb2dvJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzIsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMpO1xuICAgICAgICB0aGlzLnNreTMgPSBuZXcgQW5pbWF0ZU9iamVjdCgnc2t5MicsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kxLmhlaWdodC8xLjUsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdsZWZ0JywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLSAxMDApO1xuICAgICAgICB0aGlzLnNreUJpZyA9IG5ldyBBbmltYXRlT2JqZWN0KCdza3lCaWcnLCAtNTAsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIDE1MCwgMSwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcywgJ3JpZ2h0JywgLTUwKTtcbiAgICAgICAgdGhpcy5za3lCaWcyID0gbmV3IEFuaW1hdGVPYmplY3QoJ3NreUJpZycsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLTI1MCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gMTUwLCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAnbGVmdCcsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgLSAxNTApO1xuICAgICAgICB0aGlzLm9ic3RhY2xlMSA9IG5ldyBBbmltYXRlT2JqZWN0KCdvYnN0YWNsZXMnLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yICsgNTAsIDAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdkb3duJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDUwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMS41KTtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTIgPSBuZXcgQW5pbWF0ZU9iamVjdCgnb2JzdGFjbGVzJywgMjAsIDAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdkb3duJywgMjAsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8zKTtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTMgPSBuZXcgQW5pbWF0ZU9iamVjdCgnb2JzdGFjbGVzJywgNDAsIDAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdkb3duJywgNDAsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8xLjUpO1xuICAgICAgICB0aGlzLm9ic3RhY2xlNCA9IG5ldyBBbmltYXRlT2JqZWN0KCdvYnN0YWNsZXMnLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yICsgOTAsIDAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdkb3duJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDkwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMS4yKTtcbiAgICAgICAgdGhpcy5vYnN0YWNsZTUgPSBuZXcgQW5pbWF0ZU9iamVjdCgnb2JzdGFjbGVzJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDE1MCwgMCwgMSwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcywgJ2Rvd24nLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yICsgMTUwLHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8zLjMpO1xuICAgICAgICB0aGlzLm9ic3RhY2xlNiA9IG5ldyBBbmltYXRlT2JqZWN0KCdvYnN0YWNsZXMnLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yICsgODAsIDAsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdkb3duJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiArIDgwLCAzMCk7XG4gICAgICAgIHRoaXMub2JzdGFjbGU3ID0gbmV3IEFuaW1hdGVPYmplY3QoJ29ic3RhY2xlcycsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTEud2lkdGggLSA3MCwgMCwgMSwgMCwgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0LCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcywgJ2Rvd24nLCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kxLndpZHRoIC0gNzApO1xuICAgICAgICB0aGlzLmxhbWEgPSBuZXcgQW5pbWF0ZU9iamVjdCgnbWVudUxhbWEnLCAtNDAwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5tZW51TGFtYS5oZWlnaHQvMS41LCAxLCAwLCB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLCAncmlnaHQnLCAtMTUwLCApO1xuICAgICAgICB0aGlzLmxhbWFTbGVlcCA9IG5ldyBBbmltYXRlT2JqZWN0KCdtZW51TGFtYVNsZWVwJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5tZW51TGFtYVNsZWVwLmhlaWdodC8xLjUsIDEsIDAsIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMsICdsZWZ0JywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLSAyNTApO1xuXG4gICAgICAgIGlmICghdGhpcy5nYW1lLmlzTXV0ZSkge1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5hdWRpb3MuaW50cm8ucGxheSgpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uYXVkaW9zLmludHJvLnZvbHVtZSA9IDAuODtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5hdWRpb3MuaW50cm8ubG9vcCA9IHRydWU7XG4gICAgfVxuXG4gICAgc3RhcnRHYW1lKCkge1xuICAgICAgICBpZiAoIXRoaXMuZ2FtZS5pc011dGUpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uYXVkaW9zLnN0YXJ0LnBsYXkoKTtcbiAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5pc1N0b3BBbmltYXRpb24gPSB0cnVlO1xuICAgIH1cblxuICAgIHVwZGF0ZSh0aW1lKSB7XG4gICAgICAgIHRoaXMuYmlyZC51cGRhdGUodGltZSk7XG4gICAgICAgIHRoaXMubW91c2UudXBkYXRlKHRpbWUpO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmF1ZGlvcy5pbnRyby5tdXRlZCA9IGZhbHNlO1xuICAgICAgICBpZihPYmplY3Qua2V5cyh0aGlzLnNreTIuaW1hZ2VzKS5sZW5ndGggPD0wKSB7XG4gICAgICAgICAgICB0aGlzLnNreTIuaW1hZ2VzID0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXM7XG4gICAgICAgICAgICB0aGlzLnNreTIuY29udGV4dCA9IHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dDtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aGlzLm9ic3RhY2xlNy52ZWN0b3IxLnkgPiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgJiYgdGhpcy5za3kzLnZlY3RvcjEueCA8IDAgJiYgdGhpcy5pc1N0b3BBbmltYXRpb24gKSB7XG4gICAgICAgICAgICB0aGlzLnN0YXJ0QnRuLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcbiAgICAgICAgICAgIHRoaXMuZmluaXNoKFNjZW5lLlBSRV9TVEFSVClcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlckZyb250T2JzdGFjbGVzKCkge1xuICAgICAgICBpZih0aGlzLm9ic3RhY2xlMi52ZWN0b3IxLnkgPD0gdGhpcy5vYnN0YWNsZTIuZW5kWSAmJiAhdGhpcy5vYnN0YWNsZTIuaXNSb3RhdGlvbiB8fCB0aGlzLmlzU3RvcEFuaW1hdGlvbikge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTIucnVuU3ByaXRlKDMyMCwgMzIwKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTIuZHJhd0ltYWdlU3ByaXRlUm90YXRlZCh0aGlzLm9ic3RhY2xlMi5lbmRYLCB0aGlzLm9ic3RhY2xlMi5lbmRZLCAwLCAtMiwgMC4wMDUsIDMyMCwgMzIwKVxuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMub2JzdGFjbGUzLnZlY3RvcjEueSA8PSB0aGlzLm9ic3RhY2xlMy5lbmRZICYmICF0aGlzLm9ic3RhY2xlMy5pc1JvdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlMy5ydW5TcHJpdGUoMzIwLCA0MDApXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlMy5kcmF3SW1hZ2VTcHJpdGVSb3RhdGVkKHRoaXMub2JzdGFjbGUzLmVuZFgsIHRoaXMub2JzdGFjbGUzLmVuZFksIDAsIC0yLCAwLjAwNSwgMzIwLCA0MDApXG4gICAgICAgIH1cbiAgICAgICAgaWYodGhpcy5vYnN0YWNsZTQudmVjdG9yMS55IDw9IHRoaXMub2JzdGFjbGU0LmVuZFkgJiYgIXRoaXMub2JzdGFjbGU0LmlzUm90YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGU0LnJ1blNwcml0ZSg4MCwgNDAwKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTQuZHJhd0ltYWdlU3ByaXRlUm90YXRlZCh0aGlzLm9ic3RhY2xlNC5lbmRYLCB0aGlzLm9ic3RhY2xlNC5lbmRZLCAwLCAtMiwgMC4wMDUsIDgwLCA0MDApXG4gICAgICAgIH1cbiAgICAgICAgaWYodGhpcy5vYnN0YWNsZTUudmVjdG9yMS55IDw9IHRoaXMub2JzdGFjbGU1LmVuZFkgJiYgIXRoaXMub2JzdGFjbGU1LmlzUm90YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGU1LnJ1blNwcml0ZSgyNDAsIDQwMClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMub2JzdGFjbGU1LmRyYXdJbWFnZVNwcml0ZVJvdGF0ZWQodGhpcy5vYnN0YWNsZTUuZW5kWCwgdGhpcy5vYnN0YWNsZTUuZW5kWSwgMCwgLTIsIDAuMDA1LCAyNDAsIDQwMClcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLm9ic3RhY2xlNi52ZWN0b3IxLnkgPD0gdGhpcy5vYnN0YWNsZTYuZW5kWSAmJiAhdGhpcy5vYnN0YWNsZTYuaXNSb3RhdGlvbiB8fCB0aGlzLmlzU3RvcEFuaW1hdGlvbikge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTYucnVuU3ByaXRlKDE2MCwgNDAwKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTYuZHJhd0ltYWdlU3ByaXRlUm90YXRlZCh0aGlzLm9ic3RhY2xlNi5lbmRYLCB0aGlzLm9ic3RhY2xlNi5lbmRZLCAwLCAtMiwgMC4wMDIsIDE2MCwgNDAwKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyTGFtYSgpIHtcbiAgICAgICAgaWYodGhpcy5sYW1hLnZlY3RvcjEueCA8PSB0aGlzLmxhbWEuZW5kWCAmJiAhdGhpcy5sYW1hLmlzTGV2aXRhdGlvbiB8fCB0aGlzLmlzU3RvcEFuaW1hdGlvbikge1xuICAgICAgICAgICAgdGhpcy5sYW1hLnJ1bigpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmxhbWEubGV2aXRhdGlvbih0aGlzLmxhbWEuZW5kWCwgdGhpcy5sYW1hLmVuZFkpXG4gICAgICAgIH1cbiAgICAgICAgaWYodGhpcy5sYW1hU2xlZXAudmVjdG9yMS54ID49IHRoaXMubGFtYVNsZWVwLmVuZFggJiYgIXRoaXMubGFtYVNsZWVwLmlzTGV2aXRhdGlvbiB8fCB0aGlzLmlzU3RvcEFuaW1hdGlvbikge1xuICAgICAgICAgICAgdGhpcy5sYW1hU2xlZXAucnVuKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMubGFtYVNsZWVwLmxldml0YXRpb24odGhpcy5sYW1hU2xlZXAuZW5kWCwgdGhpcy5sYW1hU2xlZXAuZW5kWSwgMSwgMzApXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXJMb2dvKCkge1xuICAgICAgICBpZighdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1NjYWxlSW1hZ2UoJ3NreUJpZzMnLCB0aGlzLmxvZ28udmVjdG9yMS54IC0gMTgwLCB0aGlzLmxvZ28udmVjdG9yMS55IC0gMTYwLCAwLCAwLCA2MDAsIDM2MCwgMTUwLCA5MCk7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdTY2FsZUltYWdlKCdza3lCaWcnLCB0aGlzLmxvZ28udmVjdG9yMS54IC0gMjAwLCB0aGlzLmxvZ28udmVjdG9yMS55IC0gMTYwLCAwLCAwLCA2MDAsIDM0MCwgNDAwLCAyNDApO1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgnc2t5QmlnJywgdGhpcy5sb2dvLnZlY3RvcjEueCArIDUwLCB0aGlzLmxvZ28udmVjdG9yMS55IC0gMTIwLCAwLCAwLCA2MDAsIDM0MCwgMTUwLCA5MCk7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdTY2FsZUltYWdlKCdza3lCaWczJywgdGhpcy5sb2dvLnZlY3RvcjEueCAtIDE4MCwgdGhpcy5sb2dvLnZlY3RvcjEueSAtIDYwLCAwLCAwLCA2MDAsIDM2MCwgMzAwLCAyMDApO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNjYWxlIDwgMSAmJiAhdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc2NhbGUgKz0wLjA1O1xuICAgICAgICAgICAgdGhpcy5sb2dvLmRyYXdJbWFnZVNjYWxlKHRoaXMubG9nby52ZWN0b3IxLngsIHRoaXMubG9nby52ZWN0b3IxLnksIHRoaXMuc2NhbGUpXG4gICAgICAgIH0gZWxzZSBpZighdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMubG9nby5kcmF3SW1hZ2VSb3RhdGVkKHRoaXMubG9nby52ZWN0b3IxLngsIHRoaXMubG9nby52ZWN0b3IxLnksICcxLjAwMCcsICcwLjgwMCcsIDAuMDAyLCAwLCBmYWxzZSlcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pc1N0b3BBbmltYXRpb24gJiYgdGhpcy5zY2FsZSA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnNjYWxlIC09IDAuMDU7XG4gICAgICAgICAgICB0aGlzLmxvZ28uZHJhd0ltYWdlU2NhbGUodGhpcy5sb2dvLnZlY3RvcjEueCwgdGhpcy5sb2dvLnZlY3RvcjEueSwgdGhpcy5zY2FsZSlcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlcih0aW1lKSB7XG4gICAgICAgIHRoaXMudXBkYXRlKHRpbWUpO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZUZ1bGxTY3JlZW4oMCwgMCwgJ2JnTWVudScpO1xuXG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1NjYWxlSW1hZ2UoJ21vb24nLHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoIC0gMTYwLCAzMCwgMCwwLDE0OSwxNTEsIDEzMCwgMTMxIClcbiAgICAgICAgLy8gdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2VSb3RhdGVkKCdzdW4nLDAsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8xLjEgLCB0aGlzLmdhbWUuc2NyZWVuLmNoYW5nZVNjYWxlKCcxLjAwMCcsICcwLjgwMCcsIDAuMDAyKSwgdGltZS85MDAwKVxuICAgICAgICBpZih0aGlzLm9ic3RhY2xlNy52ZWN0b3IxLnkgPD0gdGhpcy5vYnN0YWNsZTcuZW5kWSB8fCB0aGlzLmlzU3RvcEFuaW1hdGlvbikge1xuICAgICAgICAgICAgdGhpcy5vYnN0YWNsZTcucnVuU3ByaXRlKDgwLCA0MDApXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlNy5kcmF3SW1hZ2VTcHJpdGVSb3RhdGVkKHRoaXMub2JzdGFjbGU3LmVuZFgsIHRoaXMub2JzdGFjbGU3LmVuZFksIDAsIC0yLCAwLjAwNSwgODAsIDQwMClcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLnNreTIudmVjdG9yMS54ID49IC0xNTAgJiYgIXRoaXMuc2t5Mi5pc0xldml0YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgdGhpcy5za3kyLnJ1bigpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNreTIubGV2aXRhdGlvbigtMTUwLCAwKTtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLnNreTEudmVjdG9yMS54ID49IHRoaXMuc2t5MS5lbmRYICYmICF0aGlzLnNreTEuaXNMZXZpdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLnNreTEucnVuKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2t5MS5sZXZpdGF0aW9uKHRoaXMuc2t5MS5lbmRYLCB0aGlzLnNreTEuZW5kWSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYodGhpcy5za3kzLnZlY3RvcjEueCA+IHRoaXMuc2t5My5lbmRYICYmICF0aGlzLnNreTMuaXNMZXZpdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uICkge1xuICAgICAgICAgICAgdGhpcy5za3kzLnJ1bigpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNreTMubGV2aXRhdGlvbih0aGlzLnNreTMuZW5kWCAsIHRoaXMuc2t5My5lbmRZKTtcbiAgICAgICAgfVxuICAgICAgICBpZih0aGlzLnNreTUudmVjdG9yMS54ID4gdGhpcy5za3k1LmVuZFggJiYgIXRoaXMuc2t5NS5pc0xldml0YXRpb24gfHwgdGhpcy5pc1N0b3BBbmltYXRpb24gKSB7XG4gICAgICAgICAgICB0aGlzLnNreTUucnVuKClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuc2t5NS5sZXZpdGF0aW9uKHRoaXMuc2t5NS5lbmRYICwgdGhpcy5za3k1LmVuZFkpO1xuICAgICAgICB9XG4gICAgICAgIGlmKHRoaXMub2JzdGFjbGUxLnZlY3RvcjEueSA8PSB0aGlzLm9ic3RhY2xlMS5lbmRZICYmICF0aGlzLm9ic3RhY2xlMS5pc1JvdGF0aW9uIHx8IHRoaXMuaXNTdG9wQW5pbWF0aW9uKSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlMS5ydW5TcHJpdGUoNDAwLCAzMjApXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLm9ic3RhY2xlMS5kcmF3SW1hZ2VTcHJpdGVSb3RhdGVkKHRoaXMub2JzdGFjbGUxLmVuZFgsIHRoaXMub2JzdGFjbGUxLmVuZFksIDAsIC0yLCAwLjAwMiwgNDAwLCAzMjApXG4gICAgICAgIH1cbiAgICAgICAgaWYodGhpcy5pc1N0b3BBbmltYXRpb24pIHtcbiAgICAgICAgICAgIHRoaXMuc2t5QmlnLnJ1bigpXG4gICAgICAgICAgICB0aGlzLnNreUJpZzIucnVuKCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnNreUJpZy5sZXZpdGF0aW9uKHRoaXMuc2t5QmlnLmVuZFgsIHRoaXMuc2t5QmlnLmVuZFksIDEsIDQwLCAwLjMsIDAsIDAsIDYwMCwgMzQwLCA0MDAsIDI0MCk7XG4gICAgICAgICAgICB0aGlzLnNreUJpZzIubGV2aXRhdGlvbih0aGlzLnNreUJpZzIuZW5kWCwgdGhpcy5za3lCaWcyLmVuZFksIDEsIDQwLCAwLjMsIDAsIDAsIDYwMCwgMzQwLCA0MDAsIDI0MCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnJlbmRlckZyb250T2JzdGFjbGVzKCk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1Nwcml0ZSh0aGlzLmJpcmQudmlldyk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1Nwcml0ZSh0aGlzLm1vdXNlLnZpZXcpO1xuICAgICAgICB0aGlzLnJlbmRlckxvZ28oKTtcbiAgICAgICAgdGhpcy5yZW5kZXJMYW1hKCk7XG4gICAgICAgIHN1cGVyLnJlbmRlcih0aW1lKVxuICAgIH1cbn1cbiIsImltcG9ydCB7U2NlbmV9IGZyb20gJy4uL3NjZW5lLmpzJ1xuaW1wb3J0IHtQbGF5ZXJ9IGZyb20gXCIuLi9wbGF5ZXIuanNcIjtcblxuZXhwb3J0IGNsYXNzIFByZVN0YXJ0IGV4dGVuZHMgU2NlbmUge1xuICAgIGNvbnN0cnVjdG9yKGdhbWUpIHtcbiAgICAgICAgc3VwZXIoZ2FtZSk7XG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7XG4gICAgICAgICAgICB4OiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIHk6IDAsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5wb3NpdGlvbjEgPSB7XG4gICAgICAgICAgICB4OiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIHk6IDAsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5wbGF5ZXIgPSBuZXcgUGxheWVyKHRoaXMuZ2FtZS5jb250cm9sLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSAzMDAsMTAwKTtcbiAgICAgICAgdGhpcy5wbGF5ZXIueCA9IDAgLSB0aGlzLnBsYXllci52aWV3LndpZHRoIC8gMjtcbiAgICAgICAgdGhpcy5tb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2RhbCcpO1xuICAgICAgICB0aGlzLm1vZGFsVGV4dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtb2RhbC10ZXh0Jyk7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgc3VwZXIuaW5pdCgpO1xuICAgICAgICB0aGlzLnBsYXllci52aWV3LnggPSA1MDA7XG4gICAgICAgIHRoaXMucGxheWVyLnZpZXcueSA9IDUwMDtcbiAgICAgICAgdGhpcy5wbGF5ZXIueSA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmdyb3VuZC5oZWlnaHQvMiAtIHRoaXMucGxheWVyLnZpZXcuaGVpZ2h0O1xuICAgIH1cblxuICAgIHNldENsb3NlQnRuKCkge1xuICAgICAgICAgICAgaWYgKCF0aGlzLmdhbWUuaXNNdXRlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5hdWRpb3MuanVtcC5wbGF5KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmNoYW5nZVNjZW5lKCk7XG4gICAgICAgICAgICB0aGlzLm1vZGFsLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgfVxuXG4gICAgY2hhbmdlU2NlbmUoKSB7XG4gICAgICAgIGlmICghdGhpcy5nYW1lLmlzTXV0ZSkge1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5hdWRpb3MuaW50cm8ucGF1c2UoKTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uYXVkaW9zLm1haW4udm9sdW1lID0gMDtcbiAgICAgICAgICAgIGxldCBpbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5nYW1lLnNjcmVlbi5hdWRpb3MubWFpbi52b2x1bWUgPCAwLjgpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5hdWRpb3MubWFpbi52b2x1bWUgKz0gMC4wMDk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5hdWRpb3MubWFpbi52b2x1bWUgPSAwLjg7XG4gICAgICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgMjAwKTtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uYXVkaW9zLm1haW4ubG9vcCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmF1ZGlvcy5tYWluLnBsYXkoKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZpbmlzaChTY2VuZS5TVEFSVF9HQU1FKVxuICAgIH1cblxuICAgIHVwZGF0ZSh0aW1lKSB7XG4gICAgICAgIHRoaXMucGxheWVyLnVwZGF0ZSh0aW1lKTtcbiAgICB9XG5cbiAgICAvLyDQvtGC0YDQuNGB0L7QstC60LAg0L7QutC90LAg0LTQu9GPINGB0YLQsNGA0L7Qs9C+INGO0LfQtdGA0LBcbiAgICBzaG93TW9kYWxTdGFydCgpIHtcbiAgICAgICAgdGhpcy5tb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgICAgICB0aGlzLm1vZGFsVGV4dC5pbm5lckhUTUwgPSAn0KLRiyDRgdC90L7QstCwINC30LTQtdGB0YwhPGJyPiDQo9GA0LAhJztcbiAgICB9XG5cblxuICAgIC8vINC+0YLRgNC40YHQvtCy0LrQsCDQvtC60L3QsCDQtNC70Y8g0L3QvtCy0L7Qs9C+INGO0LfQtdGA0LBcbiAgICAvLyBzaG93TW9kYWxTdGFydCgpIHtcbiAgICAvLyAgICAgdGhpcy5tb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICAgIC8vICAgICB0aGlzLm1vZGFsVGV4dC5pbm5lckhUTUwgPSAn0J/RgNC40LLQtdGCLCDRjyDQm9Cw0LzQsCEgPGJyPiDQndCw0LbQuNC80LDQuSDQv9GA0L7QsdC10Lsg0LTQu9GPINC/0YDRi9C20LrQsCDQuCDQv9C+0LzQvdC4LDxicj7Rh9GC0L4g0YfQtdGA0LXQtyDQv9GP0YLRjCDRgdGC0L7Qu9C60L3QvtCy0LXQvdC40LkgPGJyPtGPINC30LDRgdC90YMuPGJyPtCi0L7Qs9C00LAg0L/RgNC40LTRkdGC0YHRjyDQvdCw0YfQsNGC0Ywg0L/Rg9GC0Ywg0LfQsNC90L7QstC+ISdcbiAgICAvLyAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgndGV4dEJnJyx0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yIC0gMjQ4LCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMiAtIDIwMCwgMCwgMCwgODIsIDEwOCwgNTAwLCAzMDApO1xuICAgIC8vICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSh0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yICsgMjM4IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuYnRuQ2xvc2Uud2lkdGggLSAyMCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzIgLSAyMDAgKyAyMCwgJ2J0bkNsb3NlJyk7XG4gICAgLy8gICAgIHRoaXMuZ2FtZS5zY3JlZW4ucHJpbnRUZXh0KHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgLSA5MCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzIgLSAyMDAgKyAgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuYnRuQ2xvc2UuaGVpZ2h0ICsgNjAsICfQn9GA0LjQstC10YIsINGPINCb0LDQvNCwIScpO1xuICAgIC8vICAgICB0aGlzLmdhbWUuc2NyZWVuLnByaW50VGV4dCh0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yIC0gMjI1LCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMiAtIDIwMCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmJ0bkNsb3NlLmhlaWdodCArIDEwMCwgJ9Cd0LDQttC40LzQsNC5INC/0YDQvtCx0LXQuyDQtNC70Y8g0L/RgNGL0LbQutCwINC4INC/0L7QvNC90LgsJyk7XG4gICAgLy8gICAgIHRoaXMuZ2FtZS5zY3JlZW4ucHJpbnRUZXh0KHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgLSAxNjAsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8yIC0gMjAwICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuYnRuQ2xvc2UuaGVpZ2h0ICsgMTQwLCAn0YfRgtC+INGH0LXRgNC10Lcg0L/Rj9GC0Ywg0YHRgtC+0LvQutC90L7QstC10L3QuNC5Jyk7XG4gICAgLy8gICAgIHRoaXMuZ2FtZS5zY3JlZW4ucHJpbnRUZXh0KHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgLSA0MCwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzIgLSAyMDAgKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5idG5DbG9zZS5oZWlnaHQgKyAxODAsICfRjyDQt9Cw0YHQvdGDLicpO1xuICAgIC8vICAgICB0aGlzLmdhbWUuc2NyZWVuLnByaW50VGV4dCh0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aC8yIC0gMjEwLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMiAtIDIwMCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmJ0bkNsb3NlLmhlaWdodCArIDIyMCwgJ9Ci0L7Qs9C00LAg0L/RgNC40LTRkdGC0YHRjyDQvdCw0YfQsNGC0Ywg0L/Rg9GC0Ywg0LfQsNC90L7QstC+IScpO1xuICAgIC8vIH1cblxuICAgIHJlbmRlckNsb3VkcygpIHtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgnc2t5MScsIHRoaXMucG9zaXRpb24ueCwgMjAsIDAsMCwgMzAxLCAxODEsIDE4MCwgMTAwICk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1NjYWxlSW1hZ2UoJ3NreTInLHRoaXMucG9zaXRpb24ueCAtIDIwLCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kxLmhlaWdodCwgMCwwLCAyMjUsIDEyMCwgMTUwLCA4MCk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1NjYWxlSW1hZ2UoICdza3kzJyx0aGlzLnBvc2l0aW9uLnggLSAyMCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTEud2lkdGgsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTEuaGVpZ2h0IC0gNDAsIDAsMCwgMTc3LCAxMDAsIDE0MiwgODApO1xuICAgICAgICB0aGlzLnBvc2l0aW9uLnggPCAwIC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuc2t5MS53aWR0aCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTIud2lkdGggLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kzLndpZHRoIC0gMTYwID8gdGhpcy5wb3NpdGlvbi54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggOiB0aGlzLnBvc2l0aW9uLnggLT0gMjtcbiAgICB9XG5cbiAgICAvLyDQvtGC0YDQuNGB0L7QstC60LAg0LfQtdC80LvQuCDQuCDQtNC10YDQtdCy0YzQtdCyXG4gICAgcmVuZGVyQm90dG9tR3JvdW5kKCkge1xuICAgICAgICBpZiAodGhpcy5wb3NpdGlvbjEueCA+PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uMS54IC09IDMwO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb24xLngsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnRyZWUxLmhlaWdodCwgJ3RyZWUxJyk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb24xLngsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmdyb3VuZC5oZWlnaHQsICdncm91bmQnKTtcbiAgICB9XG5cbiAgICByZW5kZXIodGltZSkge1xuICAgICAgICB0aGlzLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2VGdWxsU2NyZWVuKDAsIDAsICdiZzEnKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2VSb3RhdGVkKCdzdW4nLHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoIC8gMiwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0ICwgdGhpcy5nYW1lLnNjcmVlbi5jaGFuZ2VTY2FsZSgnMS4wMDAnLCAnMC44MDAnLCAwLjAwMiksIHRpbWUvOTAwMCk7XG4gICAgICAgIHRoaXMucmVuZGVyQ2xvdWRzKCk7XG4gICAgICAgIHRoaXMucmVuZGVyQm90dG9tR3JvdW5kKCk7XG4gICAgICAgIGlmICh0aGlzLnBvc2l0aW9uMS54IDwgMCkge1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U3ByaXRlKHRoaXMucGxheWVyLnZpZXcpO1xuICAgICAgICAgICAgaWYgKHRoaXMucGxheWVyLnggPD0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLyAyIC0gdGhpcy5wbGF5ZXIudmlldy53aWR0aCkge1xuICAgICAgICAgICAgICAgIHRoaXMucGxheWVyLngrPSAyO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLm1vZGFsLnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd01vZGFsU3RhcnQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImltcG9ydCB7U2NlbmV9IGZyb20gJy4uL3NjZW5lLmpzJ1xuaW1wb3J0IHtTcHJpdGVTaGVldH0gZnJvbSBcIi4uL3Nwcml0ZS1zaGVldC5qc1wiO1xuaW1wb3J0IHtQbGF5ZXJ9IGZyb20gXCIuLi9wbGF5ZXIuanNcIjtcbmltcG9ydCB7T2JzdGFjbGV9IGZyb20gXCIuLi9vYnN0YWNsZS5qc1wiO1xuaW1wb3J0IHtnZXRSYW5kb21JbnR9IGZyb20gXCIuLi9tYXRoLmpzXCI7XG5pbXBvcnQge0ZseUVsZW1lbnR9IGZyb20gXCIuLi9mbHlFbGVtZW50XCI7XG5cbmV4cG9ydCBjbGFzcyBSdW5uaW5nIGV4dGVuZHMgU2NlbmUge1xuICAgIGNvbnN0cnVjdG9yKGdhbWUpIHtcbiAgICAgICAgc3VwZXIoZ2FtZSk7XG4gICAgICAgIHRoaXMudGlsZXMgPSBuZXcgU3ByaXRlU2hlZXQoe1xuICAgICAgICAgICAgaW1hZ2VOYW1lOiAndGlsZXMnLFxuICAgICAgICAgICAgaW1hZ2VXaWR0aDogdGhpcy5nYW1lLndpZHRoLFxuICAgICAgICAgICAgaW1hZ2VIZWlnaHQ6IHRoaXMuZ2FtZS5oZWlnaHQsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIHRoaXMucG9zaXRpb24gPSB7XG4gICAgICAgICAgICB4OiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIHk6IDAsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5wb3NpdGlvbjEgPSB7XG4gICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgeTogMCxcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLnBvc2l0aW9uVGV4dCA9IHtcbiAgICAgICAgICAgIHg6IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLFxuICAgICAgICAgICAgeTogMCxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZCA9IHtcbiAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICB5OiAgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZDEgPSB7XG4gICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgeTogIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodFxuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9zaXRpb25UcmVlID0ge1xuICAgICAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICAgICAgeTogIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodFxuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9zaXRpb25UcmVlMSA9IHtcbiAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICB5OiAgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wb3NpdGlvbk1vb24gPSB7XG4gICAgICAgICAgICB4OiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIHk6IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC8yLFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMuYmFja2dyb3VuZHMgPSBbJ2JnMScsICdiZzInLCAnYmczJywgJ2JnNCcsICdiZzUnXTtcbiAgICAgICAgdGhpcy5vcGFjaXR5ID0gMDtcbiAgICAgICAgdGhpcy5pc0NvbGxpZGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5iYWNrZ3JvdW5kc1RyZWUgPSBbJ3RyZWUxJywgJ3RyZWUyJywgJ3RyZWUzJywgJ3RyZWU0JywgJ3RyZWU1J107XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSAyMDA7XG4gICAgICAgIHRoaXMub2JzdGFjbGVzID0gW107XG4gICAgICAgIHRoaXMuY291bnQgPSAwO1xuICAgICAgICB0aGlzLmhpdCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxhc3RUaW1lID0gMDtcbiAgICAgICAgdGhpcy5kdXJhdGlvbiA9IDUwMDA7XG4gICAgICAgIHRoaXMuYmlyZCA9IG5ldyBGbHlFbGVtZW50KHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLDIwMCwnYmlyZCcsIDQwMCwgMTAwLCAxMDAsIDEwMCk7XG4gICAgICAgIHRoaXMuYmlyZC54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGg7XG4gICAgICAgIHRoaXMuYmlyZC55ID0gMjAwO1xuICAgICAgICB0aGlzLm1vdXNlID0gbmV3IEZseUVsZW1lbnQodGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgsMjAwLCdtb3VzZScsIDUwMCwgMTAwLCAxMDAsIDEwMCwgdHJ1ZSk7XG4gICAgICAgIHRoaXMubW91c2UueCA9IDA7XG4gICAgICAgIHRoaXMubW91c2UueSA9IDIwMDtcbiAgICAgICAgdGhpcy5jb2xsaWRlVGV4dCA9IFsnY29sbGlkZVRleHQxJywgJ2NvbGxpZGVUZXh0MicsICdjb2xsaWRlVGV4dDMnLCAnY29sbGlkZVRleHQ0J107XG4gICAgICAgIHRoaXMuY291bnRUZXh0ID0gWydjb3VudFRleHQxJywgJ2NvdW50VGV4dDInLCAnY291bnRUZXh0MycsICdjb3VudFRleHQ0J107XG4gICAgICAgIHRoaXMuaW1nVGV4dCA9ICdjb2xsaWRlVGV4dDEnO1xuICAgICAgICB0aGlzLmlzQWRkQ291bnQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5sYXN0VGltZUNvdW50VGV4dCA9IDA7XG4gICAgICAgIHRoaXMuc3VuSGVpZ2h0ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0O1xuICAgICAgICB0aGlzLmlzU3VuUmF5cyA9IGZhbHNlO1xuICAgICAgICB0aGlzLmNyYXNoQXVkaW9zID0gWydjcmFzaDEnLCAnY3Jhc2gyJ107XG4gICAgICAgIHRoaXMucGxheWVyID0gbmV3IFBsYXllcih0aGlzLmdhbWUuY29udHJvbCk7XG4gICAgICAgIHRoaXMucGxheWVyLnggPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCAvIDIgLSB0aGlzLnBsYXllci52aWV3LndpZHRoO1xuICAgICAgICB0aGlzLnN0YXJ0UG9zWENvdW50VGV4dCA9IGlubmVyV2lkdGggPiA3MDAgPyAyMCA6ICg3MDAgLSBpbm5lcldpZHRoKSAvMiArIDIwO1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIHN1cGVyLmluaXQoKTtcbiAgICAgICAgdGhpcy5hZGROZXdPYnN0YWNsZSgpO1xuICAgICAgICB0aGlzLmdhbWUuaXNSZXRyeSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBsYXllci5kZWFkQ291bnQgPSAwO1xuICAgICAgICBpZiAoIXRoaXMuZ2FtZS5pc011dGUpIHtcbiAgICAgICAgICAgIHRoaXMucGxheWVyLmp1bXBBdWRpbyA9IHRoaXMuZ2FtZS5zY3JlZW4uYXVkaW9zLmp1bXA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wbGF5ZXIudmlldy54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLyAyIC0gdGhpcy5wbGF5ZXIudmlldy53aWR0aDtcbiAgICAgICAgdGhpcy5wbGF5ZXIudmlldy55ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLmhlaWdodC8yIC0gdGhpcy5wbGF5ZXIudmlldy5oZWlnaHQ7XG4gICAgICAgIHRoaXMucGxheWVyLnkgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQuaGVpZ2h0LzIgLSB0aGlzLnBsYXllci52aWV3LmhlaWdodDtcbiAgICAgICAgdGhpcy5wbGF5ZXIuc3RhcnRQb3NZID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLmhlaWdodC8yIC0gdGhpcy5wbGF5ZXIudmlldy5oZWlnaHQ7XG4gICAgICAgIHRoaXMuYmlyZC52aWV3LnggPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aDtcbiAgICAgICAgdGhpcy5iaXJkLnZpZXcueSA9IDIwMDtcbiAgICAgICAgdGhpcy5tb3VzZS52aWV3LnggPSAwO1xuICAgICAgICB0aGlzLm1vdXNlLnZpZXcueSA9IDIwMDtcbiAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZC55ID0gIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmdyb3VuZC5oZWlnaHQ7XG4gICAgICAgIHRoaXMucG9zaXRpb25Hcm91bmQxLnkgPSAgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLmhlaWdodDtcbiAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZDEueCA9ICB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQud2lkdGg7XG4gICAgICAgIHRoaXMucG9zaXRpb25UcmVlMS54ID0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXNbdGhpcy5iYWNrZ3JvdW5kc1RyZWVbMF1dLndpZHRoO1xuICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZS55ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMudHJlZTEuaGVpZ2h0O1xuICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZTEueSA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnRyZWUxLmhlaWdodDtcbiAgICB9XG5cbiAgICBhZGROZXdPYnN0YWNsZSgpIHtcbiAgICAgICAgbGV0IG9icyA9IG5ldyBPYnN0YWNsZSh7aW5kZXg6IGdldFJhbmRvbUludCgxLCAzNil9KVxuICAgICAgICBvYnMueCA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoO1xuICAgICAgICBvYnMudmlldy54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGg7XG4gICAgICAgIG9icy55ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLmhlaWdodC8yIC0gb2JzLnZpZXcuaGVpZ2h0O1xuICAgICAgICBvYnMudmlldy55ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLmhlaWdodC8yIC0gIG9icy52aWV3LmhlaWdodDtcbiAgICAgICAgdGhpcy5vYnN0YWNsZXMucHVzaChvYnMpXG4gICAgfVxuXG4gICAgY29sbGlkZSh0aW1lKSB7XG4gICAgICAgIGNvbnN0IGF1ZGlvID0gdGhpcy5jcmFzaEF1ZGlvc1tNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAyKV07XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uYXVkaW9zW2F1ZGlvXS5wbGF5KCk7XG5cbiAgICAgICAgdGhpcy5pc0NvbGxpZGUgPSB0cnVlO1xuICAgICAgICBpZih0aGlzLnBsYXllci5kZWFkQ291bnQgKyAxIDwgNCkge1xuICAgICAgICAgICAgdGhpcy5pbWdUZXh0ID0gdGhpcy5jb2xsaWRlVGV4dFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA0KV07XG4gICAgICAgIH0gZWxzZSBpZih0aGlzLnBsYXllci5kZWFkQ291bnQgKyAxID09PSA0KXtcbiAgICAgICAgICAgIHRoaXMuaW1nVGV4dCA9ICdzbGVlcFRleHQnO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5pc0NvbGxpZGUgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaW1nVGV4dCA9ICdzbGVlcFRleHQnO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMubGFzdFRpbWVDb3VudFRleHQgPSB0aW1lO1xuICAgIH1cblxuICAgIGFkZENvdW50KHRpbWUpIHtcbiAgICAgICAgdGhpcy5jb3VudCsrO1xuICAgICAgICB0aGlzLmltZ1RleHQgPSB0aGlzLmNvdW50VGV4dFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA0KV07XG4gICAgICAgIHRoaXMuaXNBZGRDb3VudCA9IHRydWU7XG4gICAgICAgIHRoaXMubGFzdFRpbWVDb3VudFRleHQgPSB0aW1lO1xuICAgIH1cblxuICAgIHVwZGF0ZSh0aW1lKSB7XG4gICAgICAgIHRoaXMucGxheWVyLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgdGhpcy5iaXJkLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgaWYgKHRoaXMucGxheWVyLmRlYWRDb3VudCA+PSA0KSB7XG4gICAgICAgICAgICB0aGlzLm1vdXNlLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sYXN0VGltZSA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMubGFzdFRpbWVDb3VudFRleHQgPT09IDApIHtcbiAgICAgICAgICAgIHRoaXMubGFzdFRpbWVDb3VudFRleHQgPSB0aW1lO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vINC00L7QsdCw0LLQu9C10L3QuNC1INC90L7QstC+0LPQviDQv9GA0LXQv9GP0YLRgdCy0LjRjywg0YfQtdGA0LXQtyDQstGA0LXQvNGPINC90LUg0LzQtdC90YzRiNC1INCy0YDQtdC80LXQvdC4IGR1cmF0aW9uXG4gICAgICAgIGlmICh0aW1lIC0gdGhpcy5sYXN0VGltZSA+IHRoaXMuZHVyYXRpb24pIHtcbiAgICAgICAgICAgIC8vINC00L7QsdCw0LLQuNGC0Ywg0L/RgNC+0LLQtdGA0LrRgyDRgyDQvtCx0YHRgtCw0LvQtdGBINC40Lcg0L3QvtGCINGB0YLQvtC/0LXQtFxuICAgICAgICAgICAgdGhpcy5hZGROZXdPYnN0YWNsZSgpO1xuICAgICAgICAgICAgdGhpcy5sYXN0VGltZSA9IHRpbWU7XG4gICAgICAgICAgICB0aGlzLmR1cmF0aW9uID0gZ2V0UmFuZG9tSW50KDEyMDAsIDQ1MDApO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5vYnN0YWNsZXMuZm9yRWFjaCgoaSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5oaXQgPSB0aGlzLnBsYXllci5jb2xsaWRlKGksIHRoaXMub2JzdGFjbGVzLCB0aGlzLmRlYWRDb3VudCk7XG4gICAgICAgICAgICBpZiAoaS5kZWFkKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLm9ic3RhY2xlcy5pbmRleE9mKGkpO1xuICAgICAgICAgICAgICAgIHRoaXMub2JzdGFjbGVzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmhpdCkge1xuICAgICAgICAgICAgICAgIHRoaXMuY29sbGlkZSh0aW1lKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGlmIChpLmRlYWQgJiYgIWkuaXNDcmFzaCkge1xuICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkQ291bnQodGltZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGkudXBkYXRlKHRpbWUpXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC8vINC/0YDQuCDRgdGC0L7Qu9C60L3QvtCy0LXQvdC40Lgg0LzQtdC90Y/QtdC8INGE0L7QvSDQuCDQtNC10YDQtdCy0YzRj1xuICAgICAgICBpZiAodGhpcy5pc0NvbGxpZGUpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm9wYWNpdHkgPD0gMSkge1xuICAgICAgICAgICAgICAgIHRoaXMub3BhY2l0eSArPSAwLjAxO1xuICAgICAgICAgICAgfSBlbHNlIGlmICh0aGlzLmJhY2tncm91bmRzLmxlbmd0aCA+IDIpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmJhY2tncm91bmRzLnNoaWZ0KCk7XG4gICAgICAgICAgICAgICAgdGhpcy5iYWNrZ3JvdW5kc1RyZWUuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmlzQ29sbGlkZSA9IGZhbHNlXG4gICAgICAgICAgICAgICAgdGhpcy5vcGFjaXR5ID0gMDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5pc0NvbGxpZGUgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wbGF5ZXIuZGVhZENvdW50ID49IDUpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5jb3VudCA9IHRoaXMuY291bnQ7XG4gICAgICAgICAgICB0aGlzLmZpbmlzaChTY2VuZS5HQU1FX09WRVIpXG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGltZSAtIHRoaXMubGFzdFRpbWVDb3VudFRleHQgPiAxNDAwKSB7XG4gICAgICAgICAgICB0aGlzLmlzQWRkQ291bnQgPSBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlckNsb3VkcygpIHtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgnc2t5MScsIHRoaXMucG9zaXRpb24ueCwgMjAsIDAsMCwgMzAxLCAxODEsIDE4MCwgMTAwICk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1NjYWxlSW1hZ2UoJ3NreTInLHRoaXMucG9zaXRpb24ueCAtIDIwLCB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kxLmhlaWdodCwgMCwwLCAyMjUsIDEyMCwgMTUwLCA4MCk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1NjYWxlSW1hZ2UoICdza3kzJyx0aGlzLnBvc2l0aW9uLnggLSAyMCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTEud2lkdGgsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTEuaGVpZ2h0IC0gNDAsIDAsMCwgMTc3LCAxMDAsIDE0MiwgODApO1xuICAgICAgICB0aGlzLnBvc2l0aW9uLnggPCAwIC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuc2t5MS53aWR0aCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTIud2lkdGggLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kzLndpZHRoIC0gMTYwID8gdGhpcy5wb3NpdGlvbi54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggOiB0aGlzLnBvc2l0aW9uLnggLT0gMjtcbiAgICB9XG5cbiAgICByZW5kZXJNb29uKCkge1xuICAgICAgICBpZiAodGhpcy5wbGF5ZXIuZGVhZENvdW50ID49IDQpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvc2l0aW9uTW9vbi54ID4gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLyAyICsgNDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uTW9vbi54IC09MTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0aGlzLnBvc2l0aW9uTW9vbi55ID4gNTApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uTW9vbi55IC09MTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb25Nb29uLnggLCB0aGlzLnBvc2l0aW9uTW9vbi55ICwgJ21vb24nKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJlbmRlclN1bih0aW1lKSB7XG4gICAgICAgIGlmICh0aGlzLnBsYXllci5kZWFkQ291bnQgPD0gNSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucGxheWVyLmRlYWRDb3VudCA9PT0gMyAmJiAgdGhpcy5zdW5IZWlnaHQgPCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgKyAxMDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN1bkhlaWdodCArPSAxO1xuICAgICAgICAgICAgICAgIHRoaXMuaXNTdW5SYXlzPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucGxheWVyLmRlYWRDb3VudCA+PSA0ICYmICB0aGlzLnN1bkhlaWdodCA8IDEyMDApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnN1bkhlaWdodCArPSAxO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmlzU3VuUmF5cyA/XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2VSb3RhdGVkKCdzdW5CbHVyJywgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGggLyAyLCB0aGlzLnN1bkhlaWdodCwgdGhpcy5nYW1lLnNjcmVlbi5jaGFuZ2VTY2FsZSgnMS4wMDAnLCAnMC44MDAnLCAwLjAwMiksIHRpbWUgLyA5MDAwKSA6XG4gICAgICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2VSb3RhdGVkKCdzdW4nLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCAvIDIsIHRoaXMuc3VuSGVpZ2h0LCB0aGlzLmdhbWUuc2NyZWVuLmNoYW5nZVNjYWxlKCcxLjAwMCcsICcwLjgwMCcsIDAuMDAyKSwgdGltZSAvIDkwMDApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyQ291bnRDbG91ZFRleHQoKSB7XG4gICAgICAgIGlmICh0aGlzLmlzQWRkQ291bnQgfHwgdGhpcy5pc0NvbGxpZGUpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnBvc2l0aW9uVGV4dC54ID49IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLzIgKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3NpdGlvblRleHQueCAtPSAxMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb25UZXh0LnggLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5jbG91ZFRleHQud2lkdGgvIDIsdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5jbG91ZFRleHQuaGVpZ2h0LzIsICdjbG91ZFRleHQnKVxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2UodGhpcy5wb3NpdGlvblRleHQueCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzW3RoaXMuaW1nVGV4dF0ud2lkdGgvIDIsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodC80IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXNbdGhpcy5pbWdUZXh0XS5oZWlnaHQvMiwgdGhpcy5pbWdUZXh0KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvblRleHQueCA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyKHRpbWUpIHtcbiAgICAgICAgdGhpcy51cGRhdGUodGltZSk7XG4gICAgICAgICAvLyDQv9C70LDQstC90LDRjyDRgdC80LXQvdCwINGE0L7QvdCwXG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dC5nbG9iYWxBbHBoYSA9IDEgLSB0aGlzLm9wYWNpdHk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlRnVsbFNjcmVlbigwLCAwLCB0aGlzLmJhY2tncm91bmRzWzBdKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0Lmdsb2JhbEFscGhhID0gdGhpcy5vcGFjaXR5O1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZUZ1bGxTY3JlZW4oMCwgMCwgdGhpcy5iYWNrZ3JvdW5kc1sxXSk7XG5cbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0Lmdsb2JhbEFscGhhID0gMTtcbiAgICAgICAgdGhpcy5yZW5kZXJNb29uKCk7XG4gICAgICAgIHRoaXMucmVuZGVyU3VuKHRpbWUpO1xuXG4gICAgICAgIC8vINC/0LvQsNCy0L3QsNGPINGB0LzQtdC90LAg0LTQtdGA0LXQstGM0LXQslxuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSAxIC0gdGhpcy5vcGFjaXR5O1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSh0aGlzLnBvc2l0aW9uVHJlZS54LCB0aGlzLnBvc2l0aW9uVHJlZS55LCB0aGlzLmJhY2tncm91bmRzVHJlZVswXSk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb25UcmVlMS54LCB0aGlzLnBvc2l0aW9uVHJlZTEueSwgdGhpcy5iYWNrZ3JvdW5kc1RyZWVbMF0pO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSB0aGlzLm9wYWNpdHk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb25UcmVlLngsIHRoaXMucG9zaXRpb25UcmVlLnksIHRoaXMuYmFja2dyb3VuZHNUcmVlWzFdKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2UodGhpcy5wb3NpdGlvblRyZWUxLngsIHRoaXMucG9zaXRpb25UcmVlMS55LCB0aGlzLmJhY2tncm91bmRzVHJlZVsxXSk7XG4gICAgICAgIC8vINGC0LXQv9C10YDRjCDQv9GA0L7QstC10YDQuNC8LCDQvdC1INGD0YjQtdC7INC70Lgg0L7QsdGK0LXQutGCINGE0L7QvdCwIMKr0LfQsCDQutCw0LTRgMK7XG4gICAgICAgIGlmICh0aGlzLnBvc2l0aW9uVHJlZS54ICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXNbdGhpcy5iYWNrZ3JvdW5kc1RyZWVbMV1dLndpZHRoIDwgMCkgeyAvLyDQtdGB0LvQuCDRg9GI0LXQu1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvblRyZWUueCA9IHRoaXMucG9zaXRpb25UcmVlMS54ICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXNbdGhpcy5iYWNrZ3JvdW5kc1RyZWVbMV1dLndpZHRoOyAvLyDQv9C10YDQtdC80LXRidCw0LXQvCDQtdCz0L4g0YHRgNCw0LfRgyDQt9CwINCy0YLQvtGA0YvQvFxuICAgICAgICB9XG4gICAgICAgIC8vINCw0L3QsNC70L7Qs9C40YfQvdC+INC00LvRjyDQstGC0L7RgNC+0LPQvlxuICAgICAgICBpZiAodGhpcy5wb3NpdGlvblRyZWUxLnggKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlc1t0aGlzLmJhY2tncm91bmRzVHJlZVsxXV0ud2lkdGggPCAwKSB7IC8vINC10YHQu9C4INGD0YjQtdC7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZTEueCA9IHRoaXMucG9zaXRpb25UcmVlLnggKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlc1t0aGlzLmJhY2tncm91bmRzVHJlZVsxXV0ud2lkdGg7IC8vINC/0LXRgNC10LzQtdGJ0LDQtdC8INC10LPQviDRgdGA0LDQt9GDINC30LAg0LLRgtC+0YDRi9C8XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSAxO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSh0aGlzLnBvc2l0aW9uR3JvdW5kLngsIHRoaXMucG9zaXRpb25Hcm91bmQueSwgJ2dyb3VuZCcpO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSh0aGlzLnBvc2l0aW9uR3JvdW5kMS54ICwgdGhpcy5wb3NpdGlvbkdyb3VuZC55LCAnZ3JvdW5kJyk7XG4gICAgICAgIGlmICghdGhpcy5pc0NvbGxpZGUpIHtcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb25Hcm91bmQueCAtPSAyO1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZDEueCAtPSAyO1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvblRyZWUueCAtPTE7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZTEueCAtPTE7XG4gICAgICAgICAgICAvLyDRgtC10L/QtdGA0Ywg0L/RgNC+0LLQtdGA0LjQvCwg0L3QtSDRg9GI0LXQuyDQu9C4INC+0LHRitC10LrRgiDRhNC+0L3QsCDCq9C30LAg0LrQsNC00YDCu1xuICAgICAgICAgICAgaWYgKHRoaXMucG9zaXRpb25Hcm91bmQueCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmdyb3VuZC53aWR0aCA8IDApIHsgLy8g0LXRgdC70Lgg0YPRiNC10LtcbiAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uR3JvdW5kLnggPSB0aGlzLnBvc2l0aW9uR3JvdW5kMS54ICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLndpZHRoOyAvLyDQv9C10YDQtdC80LXRidCw0LXQvCDQtdCz0L4g0YHRgNCw0LfRgyDQt9CwINCy0YLQvtGA0YvQvFxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAvLyDQsNC90LDQu9C+0LPQuNGH0L3QviDQtNC70Y8g0LLRgtC+0YDQvtCz0L5cbiAgICAgICAgICAgIGlmICh0aGlzLnBvc2l0aW9uR3JvdW5kMS54ICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLndpZHRoIDwgMCkge1xuICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25Hcm91bmQxLnggPSB0aGlzLnBvc2l0aW9uR3JvdW5kLnggKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQud2lkdGg7IC8vINC/0L7Qt9C40YbQuNC+0L3QuNGA0YPQtdC8INC30LAg0L/QtdGA0LLRi9C8XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyDQvtGC0YDQuNGB0L7QstC60LAg0Y3Qu9C10LzQtdC90YLQvtCyINC90LXQsdCwKNC+0LHQu9Cw0LrQsCwg0L/RgtC40YfQutCwLCDQvNGL0YjRjClcbiAgICAgICAgaWYgKHRoaXMucGxheWVyLmRlYWRDb3VudCA8PSAyKSB7XG4gICAgICAgICAgICB0aGlzLnJlbmRlckNsb3VkcygpO1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U3ByaXRlKHRoaXMuYmlyZC52aWV3KVxuICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGxheWVyLmRlYWRDb3VudCA+PSA0KSB7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdTcHJpdGUodGhpcy5tb3VzZS52aWV3KTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC+0YLRgNC40YHQvtCy0LrQsCDRgNC+0LfQvtCy0YvRhSDQvtCx0LvQsNC60L7QsiDRgSDRgtC10LrRgdGC0L7QvCDQv9GA0Lgg0YHRgtC+0LvQutC90L7QstC10L3QuNC4INC40LvQuCDRg9C00LDRh9C90L7QvCDQv9C10YDQtdC/0YDRi9Cz0LjQstCw0L3QuNC4XG4gICAgICAgIHRoaXMucmVuZGVyQ291bnRDbG91ZFRleHQoKTtcblxuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdTcHJpdGUodGhpcy5wbGF5ZXIudmlldyk7XG5cbiAgICAgICAgLy8g0L7RgtGA0LjRgdC+0LLQutCwINC/0YDQtdC/0Y/RgtGB0LLQuNC5XG4gICAgICAgIHRoaXMub2JzdGFjbGVzLmZvckVhY2goKGkpID0+IHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1Nwcml0ZShpLnZpZXcpO1xuICAgICAgICB9KVxuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSggdGhpcy5zdGFydFBvc1hDb3VudFRleHQsIDIwLCAndGV4dENvdW50Jyk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4ucHJpbnRUZXh0KHRoaXMuc3RhcnRQb3NYQ291bnRUZXh0ICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMudGV4dENvdW50LndpZHRoICsgMjAsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnRleHRDb3VudC5oZWlnaHQgKyAxMiwgdGhpcy5jb3VudCwgJzI0cHgnKTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1NjZW5lfSBmcm9tICcuLi9zY2VuZS5qcydcbmltcG9ydCB7U3ByaXRlU2hlZXR9IGZyb20gXCIuLi9zcHJpdGUtc2hlZXQuanNcIjtcbmltcG9ydCB7UGxheWVyfSBmcm9tIFwiLi4vcGxheWVyLmpzXCI7XG5pbXBvcnQge09ic3RhY2xlfSBmcm9tIFwiLi4vb2JzdGFjbGUuanNcIjtcbmltcG9ydCB7Z2V0UmFuZG9tSW50fSBmcm9tIFwiLi4vbWF0aC5qc1wiO1xuaW1wb3J0IHtGbHlFbGVtZW50fSBmcm9tIFwiLi4vZmx5RWxlbWVudFwiO1xuXG5leHBvcnQgY2xhc3MgUnVubmluZyBleHRlbmRzIFNjZW5lIHtcbiAgICBjb25zdHJ1Y3RvcihnYW1lKSB7XG4gICAgICAgIHN1cGVyKGdhbWUpO1xuICAgICAgICB0aGlzLnRpbGVzID0gbmV3IFNwcml0ZVNoZWV0KHtcbiAgICAgICAgICAgIGltYWdlTmFtZTogJ3RpbGVzJyxcbiAgICAgICAgICAgIGltYWdlV2lkdGg6IHRoaXMuZ2FtZS53aWR0aCxcbiAgICAgICAgICAgIGltYWdlSGVpZ2h0OiB0aGlzLmdhbWUuaGVpZ2h0LFxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnBvc2l0aW9uID0ge1xuICAgICAgICAgICAgeDogdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgsXG4gICAgICAgICAgICB5OiAwLFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMucG9zaXRpb24xID0ge1xuICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgIHk6IDAsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5wb3NpdGlvblRleHQgPSB7XG4gICAgICAgICAgICB4OiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCxcbiAgICAgICAgICAgIHk6IDAsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMucG9zaXRpb25Hcm91bmQgPSB7XG4gICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgeTogIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodFxuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9zaXRpb25Hcm91bmQxID0ge1xuICAgICAgICAgICAgeDogMCxcbiAgICAgICAgICAgIHk6ICB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHRcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZSA9IHtcbiAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgIHk6ICB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHRcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZTEgPSB7XG4gICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgeTogIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodFxuICAgICAgICB9XG4gICAgICAgIHRoaXMucG9zaXRpb25Nb29uID0ge1xuICAgICAgICAgICAgeDogdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgsXG4gICAgICAgICAgICB5OiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvMixcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLmJhY2tncm91bmRzID0gWydiZzEnLCAnYmcyJywgJ2JnMycsICdiZzQnLCAnYmc1J107XG4gICAgICAgIHRoaXMub3BhY2l0eSA9IDA7XG4gICAgICAgIHRoaXMuaXNDb2xsaWRlID0gZmFsc2U7XG4gICAgICAgIHRoaXMuYmFja2dyb3VuZHNUcmVlID0gWyd0cmVlMScsICd0cmVlMicsICd0cmVlMycsICd0cmVlNCcsICd0cmVlNSddO1xuICAgICAgICB0aGlzLmR1cmF0aW9uID0gMjAwO1xuICAgICAgICB0aGlzLm9ic3RhY2xlcyA9IFtdO1xuICAgICAgICB0aGlzLmNvdW50ID0gMDtcbiAgICAgICAgdGhpcy5oaXQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5sYXN0VGltZSA9IDA7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSA1MDAwO1xuICAgICAgICB0aGlzLmJpcmQgPSBuZXcgRmx5RWxlbWVudCh0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCwyMDAsJ2JpcmQnLCA0MDAsIDEwMCwgMTAwLCAxMDApO1xuICAgICAgICB0aGlzLmJpcmQueCA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoO1xuICAgICAgICB0aGlzLmJpcmQueSA9IDIwMDtcbiAgICAgICAgdGhpcy5tb3VzZSA9IG5ldyBGbHlFbGVtZW50KHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoLDIwMCwnbW91c2UnLCA1MDAsIDEwMCwgMTAwLCAxMDAsIHRydWUpO1xuICAgICAgICB0aGlzLm1vdXNlLnggPSAwO1xuICAgICAgICB0aGlzLm1vdXNlLnkgPSAyMDA7XG4gICAgICAgIHRoaXMuY29sbGlkZVRleHQgPSBbJ2NvbGxpZGVUZXh0MScsICdjb2xsaWRlVGV4dDInLCAnY29sbGlkZVRleHQzJywgJ2NvbGxpZGVUZXh0NCddO1xuICAgICAgICB0aGlzLmNvdW50VGV4dCA9IFsnY291bnRUZXh0MScsICdjb3VudFRleHQyJywgJ2NvdW50VGV4dDMnLCAnY291bnRUZXh0NCddO1xuICAgICAgICB0aGlzLmltZ1RleHQgPSAnY29sbGlkZVRleHQxJztcbiAgICAgICAgdGhpcy5pc0FkZENvdW50ID0gZmFsc2U7XG4gICAgICAgIHRoaXMubGFzdFRpbWVDb3VudFRleHQgPSAwO1xuICAgICAgICB0aGlzLnN1bkhlaWdodCA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodDtcbiAgICAgICAgdGhpcy5pc1N1blJheXMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5jcmFzaEF1ZGlvcyA9IFsnY3Jhc2gxJywgJ2NyYXNoMiddO1xuICAgICAgICB0aGlzLnBsYXllciA9IG5ldyBQbGF5ZXIodGhpcy5nYW1lLmNvbnRyb2wpO1xuICAgICAgICB0aGlzLnBsYXllci54ID0gMTUwO1xuICAgICAgICB0aGlzLnN0YXJ0UG9zWENvdW50VGV4dCA9IGlubmVyV2lkdGggPiA3MDAgPyAyMCA6ICg3MDAgLSBpbm5lcldpZHRoKSAvMiArIDIwO1xuICAgIH1cblxuICAgIGluaXQoKSB7XG4gICAgICAgIHN1cGVyLmluaXQoKTtcbiAgICAgICAgdGhpcy5hZGROZXdPYnN0YWNsZSgpO1xuICAgICAgICB0aGlzLmdhbWUuaXNSZXRyeSA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBsYXllci5kZWFkQ291bnQgPSAwO1xuICAgICAgICBpZiAoIXRoaXMuZ2FtZS5pc011dGUpIHtcbiAgICAgICAgICAgIHRoaXMucGxheWVyLmp1bXBBdWRpbyA9IHRoaXMuZ2FtZS5zY3JlZW4uYXVkaW9zLmp1bXA7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wbGF5ZXIudmlldy54ID0gMTUwO1xuICAgICAgICB0aGlzLnBsYXllci52aWV3LnkgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQuaGVpZ2h0LzIgLSB0aGlzLnBsYXllci52aWV3LmhlaWdodDtcbiAgICAgICAgdGhpcy5wbGF5ZXIueSA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmdyb3VuZC5oZWlnaHQvMiAtIHRoaXMucGxheWVyLnZpZXcuaGVpZ2h0O1xuICAgICAgICB0aGlzLnBsYXllci5zdGFydFBvc1kgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQuaGVpZ2h0LzIgLSB0aGlzLnBsYXllci52aWV3LmhlaWdodDtcbiAgICAgICAgdGhpcy5iaXJkLnZpZXcueCA9IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoO1xuICAgICAgICB0aGlzLmJpcmQudmlldy55ID0gMjAwO1xuICAgICAgICB0aGlzLm1vdXNlLnZpZXcueCA9IDA7XG4gICAgICAgIHRoaXMubW91c2Uudmlldy55ID0gMjAwO1xuICAgICAgICB0aGlzLnBvc2l0aW9uR3JvdW5kLnkgPSAgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLmhlaWdodDtcbiAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZDEueSA9ICB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQuaGVpZ2h0O1xuICAgICAgICB0aGlzLnBvc2l0aW9uR3JvdW5kMS54ID0gIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmdyb3VuZC53aWR0aDtcbiAgICAgICAgdGhpcy5wb3NpdGlvblRyZWUxLnggPSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlc1t0aGlzLmJhY2tncm91bmRzVHJlZVswXV0ud2lkdGg7XG4gICAgICAgIHRoaXMucG9zaXRpb25UcmVlLnkgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy50cmVlMS5oZWlnaHQ7XG4gICAgICAgIHRoaXMucG9zaXRpb25UcmVlMS55ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMudHJlZTEuaGVpZ2h0O1xuICAgIH1cblxuICAgIGFkZE5ld09ic3RhY2xlKCkge1xuICAgICAgICBsZXQgb2JzID0gbmV3IE9ic3RhY2xlKHtpbmRleDogZ2V0UmFuZG9tSW50KDEsIDM2KX0pXG4gICAgICAgIG9icy54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGg7XG4gICAgICAgIG9icy52aWV3LnggPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aDtcbiAgICAgICAgb2JzLnkgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQuaGVpZ2h0LzIgLSBvYnMudmlldy5oZWlnaHQ7XG4gICAgICAgIG9icy52aWV3LnkgPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQuaGVpZ2h0LzIgLSAgb2JzLnZpZXcuaGVpZ2h0O1xuICAgICAgICB0aGlzLm9ic3RhY2xlcy5wdXNoKG9icylcbiAgICB9XG5cbiAgICBjb2xsaWRlKHRpbWUpIHtcbiAgICAgICAgY29uc3QgYXVkaW8gPSB0aGlzLmNyYXNoQXVkaW9zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpXTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5hdWRpb3NbYXVkaW9dLnBsYXkoKTtcblxuICAgICAgICB0aGlzLmlzQ29sbGlkZSA9IHRydWU7XG4gICAgICAgIGlmKHRoaXMucGxheWVyLmRlYWRDb3VudCArIDEgPCA0KSB7XG4gICAgICAgICAgICB0aGlzLmltZ1RleHQgPSB0aGlzLmNvbGxpZGVUZXh0W01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQpXTtcbiAgICAgICAgfSBlbHNlIGlmKHRoaXMucGxheWVyLmRlYWRDb3VudCArIDEgPT09IDQpe1xuICAgICAgICAgICAgdGhpcy5pbWdUZXh0ID0gJ3NsZWVwVGV4dCc7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmlzQ29sbGlkZSA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy5pbWdUZXh0ID0gJ3NsZWVwVGV4dCc7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5sYXN0VGltZUNvdW50VGV4dCA9IHRpbWU7XG4gICAgfVxuXG4gICAgYWRkQ291bnQodGltZSkge1xuICAgICAgICB0aGlzLmNvdW50Kys7XG4gICAgICAgIHRoaXMuaW1nVGV4dCA9IHRoaXMuY291bnRUZXh0W01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDQpXTtcbiAgICAgICAgdGhpcy5pc0FkZENvdW50ID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5sYXN0VGltZUNvdW50VGV4dCA9IHRpbWU7XG4gICAgfVxuXG4gICAgdXBkYXRlKHRpbWUpIHtcbiAgICAgICAgdGhpcy5wbGF5ZXIudXBkYXRlKHRpbWUpO1xuICAgICAgICB0aGlzLmJpcmQudXBkYXRlKHRpbWUpO1xuICAgICAgICBpZiAodGhpcy5wbGF5ZXIuZGVhZENvdW50ID49IDQpIHtcbiAgICAgICAgICAgIHRoaXMubW91c2UudXBkYXRlKHRpbWUpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLmxhc3RUaW1lID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmxhc3RUaW1lID0gdGltZTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5sYXN0VGltZUNvdW50VGV4dCA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5sYXN0VGltZUNvdW50VGV4dCA9IHRpbWU7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgLy8g0LTQvtCx0LDQstC70LXQvdC40LUg0L3QvtCy0L7Qs9C+INC/0YDQtdC/0Y/RgtGB0LLQuNGPLCDRh9C10YDQtdC3INCy0YDQtdC80Y8g0L3QtSDQvNC10L3RjNGI0LUg0LLRgNC10LzQtdC90LggZHVyYXRpb25cbiAgICAgICAgaWYgKHRpbWUgLSB0aGlzLmxhc3RUaW1lID4gdGhpcy5kdXJhdGlvbikge1xuICAgICAgICAgICAgLy8g0LTQvtCx0LDQstC40YLRjCDQv9GA0L7QstC10YDQutGDINGDINC+0LHRgdGC0LDQu9C10YEg0LjQtyDQvdC+0YIg0YHRgtC+0L/QtdC0XG4gICAgICAgICAgICB0aGlzLmFkZE5ld09ic3RhY2xlKCk7XG4gICAgICAgICAgICB0aGlzLmxhc3RUaW1lID0gdGltZTtcbiAgICAgICAgICAgIHRoaXMuZHVyYXRpb24gPSBnZXRSYW5kb21JbnQoMTIwMCwgNDUwMCk7XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLm9ic3RhY2xlcy5mb3JFYWNoKChpKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmhpdCA9IHRoaXMucGxheWVyLmNvbGxpZGUoaSwgdGhpcy5vYnN0YWNsZXMsIHRoaXMuZGVhZENvdW50KTtcbiAgICAgICAgICAgIGlmIChpLmRlYWQpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMub2JzdGFjbGVzLmluZGV4T2YoaSk7XG4gICAgICAgICAgICAgICAgdGhpcy5vYnN0YWNsZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHRoaXMuaGl0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5jb2xsaWRlKHRpbWUpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgaWYgKGkuZGVhZCAmJiAhaS5pc0NyYXNoKSB7XG4gICAgICAgICAgICAgICAgICAgdGhpcy5hZGRDb3VudCh0aW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaS51cGRhdGUodGltZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLy8g0L/RgNC4INGB0YLQvtC70LrQvdC+0LLQtdC90LjQuCDQvNC10L3Rj9C10Lwg0YTQvtC9INC4INC00LXRgNC10LLRjNGPXG4gICAgICAgIGlmICh0aGlzLmlzQ29sbGlkZSkge1xuICAgICAgICAgICAgaWYgKHRoaXMub3BhY2l0eSA8PSAxKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5vcGFjaXR5ICs9IDAuMDE7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRoaXMuYmFja2dyb3VuZHMubGVuZ3RoID4gMikge1xuICAgICAgICAgICAgICAgIHRoaXMuYmFja2dyb3VuZHMuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJhY2tncm91bmRzVHJlZS5zaGlmdCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuaXNDb2xsaWRlID0gZmFsc2VcbiAgICAgICAgICAgICAgICB0aGlzLm9wYWNpdHkgPSAwO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLmlzQ29sbGlkZSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnBsYXllci5kZWFkQ291bnQgPj0gNSkge1xuICAgICAgICAgICAgdGhpcy5nYW1lLmNvdW50ID0gdGhpcy5jb3VudDtcbiAgICAgICAgICAgIHRoaXMuZmluaXNoKFNjZW5lLkdBTUVfT1ZFUilcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0aW1lIC0gdGhpcy5sYXN0VGltZUNvdW50VGV4dCA+IDE0MDApIHtcbiAgICAgICAgICAgIHRoaXMuaXNBZGRDb3VudCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyQ2xvdWRzKCkge1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdTY2FsZUltYWdlKCdza3kxJywgdGhpcy5wb3NpdGlvbi54LCAyMCwgMCwwLCAzMDEsIDE4MSwgMTgwLCAxMDAgKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSgnc2t5MicsdGhpcy5wb3NpdGlvbi54IC0gMjAsIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTEuaGVpZ2h0LCAwLDAsIDIyNSwgMTIwLCAxNTAsIDgwKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U2NhbGVJbWFnZSggJ3NreTMnLHRoaXMucG9zaXRpb24ueCAtIDIwICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuc2t5MS53aWR0aCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuc2t5MS5oZWlnaHQgLSA0MCwgMCwwLCAxNzcsIDEwMCwgMTQyLCA4MCk7XG4gICAgICAgIHRoaXMucG9zaXRpb24ueCA8IDAgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5za3kxLndpZHRoIC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuc2t5Mi53aWR0aCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLnNreTMud2lkdGggLSAxNjAgPyB0aGlzLnBvc2l0aW9uLnggPSB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCA6IHRoaXMucG9zaXRpb24ueCAtPSAyO1xuICAgIH1cblxuICAgIHJlbmRlck1vb24oKSB7XG4gICAgICAgIGlmICh0aGlzLnBsYXllci5kZWFkQ291bnQgPj0gNCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucG9zaXRpb25Nb29uLnggPiB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCAvIDIgKyA0MCkge1xuICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25Nb29uLnggLT0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMucG9zaXRpb25Nb29uLnkgPiA1MCkge1xuICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25Nb29uLnkgLT0xO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2UodGhpcy5wb3NpdGlvbk1vb24ueCAsIHRoaXMucG9zaXRpb25Nb29uLnkgLCAnbW9vbicpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmVuZGVyU3VuKHRpbWUpIHtcbiAgICAgICAgaWYgKHRoaXMucGxheWVyLmRlYWRDb3VudCA8PSA1KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wbGF5ZXIuZGVhZENvdW50ID09PSAzICYmICB0aGlzLnN1bkhlaWdodCA8IHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLmhlaWdodCArIDEwMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc3VuSGVpZ2h0ICs9IDE7XG4gICAgICAgICAgICAgICAgdGhpcy5pc1N1blJheXM9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodGhpcy5wbGF5ZXIuZGVhZENvdW50ID49IDQgJiYgIHRoaXMuc3VuSGVpZ2h0IDwgMTIwMCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc3VuSGVpZ2h0ICs9IDE7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuaXNTdW5SYXlzID9cbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZVJvdGF0ZWQoJ3N1bkJsdXInLCB0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy53aWR0aCAvIDIsIHRoaXMuc3VuSGVpZ2h0LCB0aGlzLmdhbWUuc2NyZWVuLmNoYW5nZVNjYWxlKCcxLjAwMCcsICcwLjgwMCcsIDAuMDAyKSwgdGltZSAvIDkwMDApIDpcbiAgICAgICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZVJvdGF0ZWQoJ3N1bicsIHRoaXMuZ2FtZS5zY3JlZW4uY2FudmFzLndpZHRoIC8gMiwgdGhpcy5zdW5IZWlnaHQsIHRoaXMuZ2FtZS5zY3JlZW4uY2hhbmdlU2NhbGUoJzEuMDAwJywgJzAuODAwJywgMC4wMDIpLCB0aW1lIC8gOTAwMCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXJDb3VudENsb3VkVGV4dCgpIHtcbiAgICAgICAgaWYgKHRoaXMuaXNBZGRDb3VudCB8fCB0aGlzLmlzQ29sbGlkZSkge1xuICAgICAgICAgICAgaWYgKHRoaXMucG9zaXRpb25UZXh0LnggPj0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGgvMiApIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBvc2l0aW9uVGV4dC54IC09IDEwO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2UodGhpcy5wb3NpdGlvblRleHQueCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmNsb3VkVGV4dC53aWR0aC8gMix0aGlzLmdhbWUuc2NyZWVuLmNhbnZhcy5oZWlnaHQvNCAtIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmNsb3VkVGV4dC5oZWlnaHQvMiwgJ2Nsb3VkVGV4dCcpXG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSh0aGlzLnBvc2l0aW9uVGV4dC54IC0gdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXNbdGhpcy5pbWdUZXh0XS53aWR0aC8gMiwgdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMuaGVpZ2h0LzQgLSB0aGlzLmdhbWUuc2NyZWVuLmltYWdlc1t0aGlzLmltZ1RleHRdLmhlaWdodC8yLCB0aGlzLmltZ1RleHQpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uVGV4dC54ID0gdGhpcy5nYW1lLnNjcmVlbi5jYW52YXMud2lkdGg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZW5kZXIodGltZSkge1xuICAgICAgICB0aGlzLnVwZGF0ZSh0aW1lKTtcbiAgICAgICAgIC8vINC/0LvQsNCy0L3QsNGPINGB0LzQtdC90LAg0YTQvtC90LBcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5jb250ZXh0Lmdsb2JhbEFscGhhID0gMSAtIHRoaXMub3BhY2l0eTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2VGdWxsU2NyZWVuKDAsIDAsIHRoaXMuYmFja2dyb3VuZHNbMF0pO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSB0aGlzLm9wYWNpdHk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlRnVsbFNjcmVlbigwLCAwLCB0aGlzLmJhY2tncm91bmRzWzFdKTtcblxuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmNvbnRleHQuZ2xvYmFsQWxwaGEgPSAxO1xuICAgICAgICB0aGlzLnJlbmRlck1vb24oKTtcbiAgICAgICAgdGhpcy5yZW5kZXJTdW4odGltZSk7XG5cbiAgICAgICAgLy8g0L/Qu9Cw0LLQvdCw0Y8g0YHQvNC10L3QsCDQtNC10YDQtdCy0YzQtdCyXG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dC5nbG9iYWxBbHBoYSA9IDEgLSB0aGlzLm9wYWNpdHk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb25UcmVlLngsIHRoaXMucG9zaXRpb25UcmVlLnksIHRoaXMuYmFja2dyb3VuZHNUcmVlWzBdKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2UodGhpcy5wb3NpdGlvblRyZWUxLngsIHRoaXMucG9zaXRpb25UcmVlMS55LCB0aGlzLmJhY2tncm91bmRzVHJlZVswXSk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dC5nbG9iYWxBbHBoYSA9IHRoaXMub3BhY2l0eTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3SW1hZ2UodGhpcy5wb3NpdGlvblRyZWUueCwgdGhpcy5wb3NpdGlvblRyZWUueSwgdGhpcy5iYWNrZ3JvdW5kc1RyZWVbMV0pO1xuICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdJbWFnZSh0aGlzLnBvc2l0aW9uVHJlZTEueCwgdGhpcy5wb3NpdGlvblRyZWUxLnksIHRoaXMuYmFja2dyb3VuZHNUcmVlWzFdKTtcbiAgICAgICAgLy8g0YLQtdC/0LXRgNGMINC/0YDQvtCy0LXRgNC40LwsINC90LUg0YPRiNC10Lsg0LvQuCDQvtCx0YrQtdC60YIg0YTQvtC90LAgwqvQt9CwINC60LDQtNGAwrtcbiAgICAgICAgaWYgKHRoaXMucG9zaXRpb25UcmVlLnggKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlc1t0aGlzLmJhY2tncm91bmRzVHJlZVsxXV0ud2lkdGggPCAwKSB7IC8vINC10YHQu9C4INGD0YjQtdC7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZS54ID0gdGhpcy5wb3NpdGlvblRyZWUxLnggKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlc1t0aGlzLmJhY2tncm91bmRzVHJlZVsxXV0ud2lkdGg7IC8vINC/0LXRgNC10LzQtdGJ0LDQtdC8INC10LPQviDRgdGA0LDQt9GDINC30LAg0LLRgtC+0YDRi9C8XG4gICAgICAgIH1cbiAgICAgICAgLy8g0LDQvdCw0LvQvtCz0LjRh9C90L4g0LTQu9GPINCy0YLQvtGA0L7Qs9C+XG4gICAgICAgIGlmICh0aGlzLnBvc2l0aW9uVHJlZTEueCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzW3RoaXMuYmFja2dyb3VuZHNUcmVlWzFdXS53aWR0aCA8IDApIHsgLy8g0LXRgdC70Lgg0YPRiNC10LtcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb25UcmVlMS54ID0gdGhpcy5wb3NpdGlvblRyZWUueCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzW3RoaXMuYmFja2dyb3VuZHNUcmVlWzFdXS53aWR0aDsgLy8g0L/QtdGA0LXQvNC10YnQsNC10Lwg0LXQs9C+INGB0YDQsNC30YMg0LfQsCDQstGC0L7RgNGL0LxcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uY29udGV4dC5nbG9iYWxBbHBoYSA9IDE7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb25Hcm91bmQueCwgdGhpcy5wb3NpdGlvbkdyb3VuZC55LCAnZ3JvdW5kJyk7XG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKHRoaXMucG9zaXRpb25Hcm91bmQxLnggLCB0aGlzLnBvc2l0aW9uR3JvdW5kLnksICdncm91bmQnKTtcbiAgICAgICAgaWYgKCF0aGlzLmlzQ29sbGlkZSkge1xuICAgICAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZC54IC09IDI7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uR3JvdW5kMS54IC09IDI7XG4gICAgICAgICAgICB0aGlzLnBvc2l0aW9uVHJlZS54IC09MTtcbiAgICAgICAgICAgIHRoaXMucG9zaXRpb25UcmVlMS54IC09MTtcbiAgICAgICAgICAgIC8vINGC0LXQv9C10YDRjCDQv9GA0L7QstC10YDQuNC8LCDQvdC1INGD0YjQtdC7INC70Lgg0L7QsdGK0LXQutGCINGE0L7QvdCwIMKr0LfQsCDQutCw0LTRgMK7XG4gICAgICAgICAgICBpZiAodGhpcy5wb3NpdGlvbkdyb3VuZC54ICsgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMuZ3JvdW5kLndpZHRoIDwgMCkgeyAvLyDQtdGB0LvQuCDRg9GI0LXQu1xuICAgICAgICAgICAgICAgIHRoaXMucG9zaXRpb25Hcm91bmQueCA9IHRoaXMucG9zaXRpb25Hcm91bmQxLnggKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQud2lkdGg7IC8vINC/0LXRgNC10LzQtdGJ0LDQtdC8INC10LPQviDRgdGA0LDQt9GDINC30LAg0LLRgtC+0YDRi9C8XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vINCw0L3QsNC70L7Qs9C40YfQvdC+INC00LvRjyDQstGC0L7RgNC+0LPQvlxuICAgICAgICAgICAgaWYgKHRoaXMucG9zaXRpb25Hcm91bmQxLnggKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy5ncm91bmQud2lkdGggPCAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wb3NpdGlvbkdyb3VuZDEueCA9IHRoaXMucG9zaXRpb25Hcm91bmQueCArIHRoaXMuZ2FtZS5zY3JlZW4uaW1hZ2VzLmdyb3VuZC53aWR0aDsgLy8g0L/QvtC30LjRhtC40L7QvdC40YDRg9C10Lwg0LfQsCDQv9C10YDQstGL0LxcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vINC+0YLRgNC40YHQvtCy0LrQsCDRjdC70LXQvNC10L3RgtC+0LIg0L3QtdCx0LAo0L7QsdC70LDQutCwLCDQv9GC0LjRh9C60LAsINC80YvRiNGMKVxuICAgICAgICBpZiAodGhpcy5wbGF5ZXIuZGVhZENvdW50IDw9IDIpIHtcbiAgICAgICAgICAgIHRoaXMucmVuZGVyQ2xvdWRzKCk7XG4gICAgICAgICAgICB0aGlzLmdhbWUuc2NyZWVuLmRyYXdTcHJpdGUodGhpcy5iaXJkLnZpZXcpXG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5wbGF5ZXIuZGVhZENvdW50ID49IDQpIHtcbiAgICAgICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1Nwcml0ZSh0aGlzLm1vdXNlLnZpZXcpO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8g0L7RgtGA0LjRgdC+0LLQutCwINGA0L7Qt9C+0LLRi9GFINC+0LHQu9Cw0LrQvtCyINGBINGC0LXQutGB0YLQvtC8INC/0YDQuCDRgdGC0L7Qu9C60L3QvtCy0LXQvdC40Lgg0LjQu9C4INGD0LTQsNGH0L3QvtC8INC/0LXRgNC10L/RgNGL0LPQuNCy0LDQvdC40LhcbiAgICAgICAgdGhpcy5yZW5kZXJDb3VudENsb3VkVGV4dCgpO1xuXG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd1Nwcml0ZSh0aGlzLnBsYXllci52aWV3KTtcblxuICAgICAgICAvLyDQvtGC0YDQuNGB0L7QstC60LAg0L/RgNC10L/Rj9GC0YHQstC40LlcbiAgICAgICAgdGhpcy5vYnN0YWNsZXMuZm9yRWFjaCgoaSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5kcmF3U3ByaXRlKGkudmlldyk7XG4gICAgICAgIH0pXG4gICAgICAgIHRoaXMuZ2FtZS5zY3JlZW4uZHJhd0ltYWdlKCB0aGlzLnN0YXJ0UG9zWENvdW50VGV4dCwgMjAsICd0ZXh0Q291bnQnKTtcbiAgICAgICAgdGhpcy5nYW1lLnNjcmVlbi5wcmludFRleHQodGhpcy5zdGFydFBvc1hDb3VudFRleHQgKyB0aGlzLmdhbWUuc2NyZWVuLmltYWdlcy50ZXh0Q291bnQud2lkdGggKyAyMCwgdGhpcy5nYW1lLnNjcmVlbi5pbWFnZXMudGV4dENvdW50LmhlaWdodCArIDEyLCB0aGlzLmNvdW50LCAnMjRweCcpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7SW1hZ2VMb2FkZXJ9IGZyb20gXCIuL2ltYWdlLWxvYWRlci5qc1wiO1xuaW1wb3J0IHtTcHJpdGV9IGZyb20gXCIuL3Nwcml0ZS5qc1wiO1xuaW1wb3J0IHtBdWRpb0xvYWRlcn0gZnJvbSBcIkAvanMvYXVkaW8tbG9hZGVyXCI7XG5cbmV4cG9ydCBjbGFzcyBTY3JlZW4ge1xuICAgIGNvbnN0cnVjdG9yKHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICAgICAgICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgdGhpcy5jYW52YXMgPSB0aGlzLmNyZWF0ZUNhbnZhcyh3aWR0aCwgaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jb250ZXh0ID0gdGhpcy5jYW52YXMuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgdGhpcy5pbWFnZXMgPSB7fTtcbiAgICAgICAgdGhpcy5pc0ltYWdlc0xvYWRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNjYWxlID0gMS4wMDA7XG4gICAgICAgIHRoaXMuaXNDaGFuZ2VTY2FsZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmF1ZGlvcz0ge307XG4gICAgICAgIHRoaXMuaXNBdWRpb3NMb2FkZWQgPSBmYWxzZTtcbiAgICB9XG5cbiAgICBjcmVhdGVDYW52YXMod2lkdGgsIGhlaWdodCkge1xuICAgICAgICBsZXQgZWxlbWVudHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnY2FudmFzJyk7XG4gICAgICAgIGxldCBjYW52YXMgPSBlbGVtZW50c1swXSB8fCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjYW52YXMpO1xuICAgICAgICBjYW52YXMud2lkdGggPSB3aWR0aDtcbiAgICAgICAgY2FudmFzLmhlaWdodCA9IGhlaWdodDtcbiAgICAgICAgLy8gY29uc3QgcmF0aW8gPSBpbm5lcldpZHRoL2lubmVySGVpZ2h0O1xuICAgICAgICAvLyBjYW52YXMud2lkdGggPSBpbm5lckhlaWdodCpyYXRpbztcbiAgICAgICAgLy8gY2FudmFzLmhlaWdodCA9IGlubmVySGVpZ2h0O1xuICAgICAgICByZXR1cm4gY2FudmFzO1xuICAgIH1cblxuICAgIGNyZWF0ZU1hcChuYW1lLCB0aWxlU2V0KSB7XG4gICAgICAgIGNvbnN0IG1hcEltYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgICAgIC8vINC10YHQu9C4INCx0YPQtNC10YIg0YLQsNC50LvQvtCy0LDRjyDQutCw0YDRgtCwINCyINGE0L7RgNC80LDRgtC1IGpzb25cbiAgICAgICAgLy8gbWFwSW1hZ2Uud2lkdGggPSBtYXBEYXRhLndpZHRoICogbWFwRGF0YS50aWxlV2lkdGg7XG4gICAgICAgIC8vIG1hcEltYWdlLmhlaWdodCA9IG1hcERhdGEuaGVpZ2h0ICogbWFwRGF0YS50aWxlSGVpZ2h0O1xuICAgICAgICAvLyDRgdC10LnRh9Cw0YEg0Y3RgtC+INC/0YDQvtGB0YLQviDQutCw0YDRgtC40L3QutCwXG4gICAgICAgIG1hcEltYWdlLndpZHRoID0gdGlsZVNldC5pbWFnZVdpZHRoO1xuICAgICAgICBtYXBJbWFnZS5oZWlnaHQgPSB0aWxlU2V0LmltYWdlSGVpZ2h0O1xuICAgICAgICBjb25zdCBtYXBDb250ZXh0ID0gbWFwSW1hZ2UuZ2V0Q29udGV4dCgnMmQnKTtcblxuICAgICAgICBtYXBDb250ZXh0LmRyYXdJbWFnZSh0aGlzLmltYWdlc1t0aWxlU2V0LmltYWdlTmFtZV0sIDAsIDAsIG1hcEltYWdlLndpZHRoLCBtYXBJbWFnZS5oZWlnaHQpO1xuICAgICAgICB0aGlzLmltYWdlc1tuYW1lXSA9IG1hcEltYWdlO1xuICAgICAgICByZXR1cm4gbmV3IFNwcml0ZSh7XG4gICAgICAgICAgICBpbWFnZU5hbWU6IG5hbWUsXG4gICAgICAgICAgICBzb3VyY2VYOiAwLFxuICAgICAgICAgICAgc291cmNlWTogMCxcbiAgICAgICAgICAgIHdpZHRoOiBtYXBJbWFnZS53aWR0aCxcbiAgICAgICAgICAgIGhlaWdodDogbWFwSW1hZ2UuaGVpZ2h0LFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBmaWxsKGNvbG9yKSB7XG4gICAgICAgIHRoaXMuY29udGV4dC5maWxsU3R5bGUgPSAnIzAwMDAwMCc7XG4gICAgICAgIHRoaXMuY29udGV4dC5maWxsUmVjdCgwLCAwLCB0aGlzLndpZHRoLCB0aGlzLmhlaWdodCk7XG4gICAgfVxuXG4gICAgbG9hZEltYWdlcyhpbWFnZUZpbGVzKSB7XG4gICAgICAgIGxldCBmID0gbmV3IEZvbnRGYWNlKCdDb21pYycsICd1cmwoZm9udHMvQ29taWMud29mZjIpJyk7XG4gICAgICAgIGYubG9hZCgpO1xuICAgICAgICBjb25zdCBsb2FkZXIgPSBuZXcgSW1hZ2VMb2FkZXIoaW1hZ2VGaWxlcyk7XG4gICAgICAgIGxvYWRlci5sb2FkKCkudGhlbigobmFtZXMpID0+IHtcbiAgICAgICAgICAgIHRoaXMuaW1hZ2VzID0gT2JqZWN0LmFzc2lnbih0aGlzLmltYWdlcywgbG9hZGVyLmltYWdlcyk7XG4gICAgICAgICAgICB0aGlzLmlzSW1hZ2VzTG9hZGVkID0gdHJ1ZTtcblxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBsb2FkQXVkaW8oYXVkaW9GaWxlcykge1xuICAgICAgICBjb25zdCBhdWRpb0xvYWRlciA9IG5ldyBBdWRpb0xvYWRlcihhdWRpb0ZpbGVzKVxuICAgICAgICBhdWRpb0xvYWRlci5sb2FkKCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmF1ZGlvcyA9IE9iamVjdC5hc3NpZ24odGhpcy5hdWRpb3MsIGF1ZGlvTG9hZGVyLmF1ZGlvcyk7XG4gICAgICAgICAgICB0aGlzLmlzQXVkaW9zTG9hZGVkID0gdHJ1ZTtcbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBwcmludFRleHQoeCwgeSwgdGV4dCwgc2l6ZSA9ICcyM3B4JywgY29sb3IgPSBcIiMwMDAwMDBcIikge1xuICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFN0eWxlID0gY29sb3I7XG4gICAgICAgIHRoaXMuY29udGV4dC5mb250ID0gYCR7c2l6ZX0gQ29taWNgO1xuICAgICAgICB0aGlzLmNvbnRleHQuZmlsbFRleHQodGV4dCwgeCwgeSk7XG4gICAgfVxuXG4gICAgZHJhd0ltYWdlKHgsIHksIGltYWdlTmFtZSwgKSB7XG4gICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5pbWFnZXNbaW1hZ2VOYW1lXSwgeCwgeSk7XG4gICAgfVxuXG4gICAgZHJhd1NjYWxlSW1hZ2UoaW1hZ2VOYW1lLCB4LCB5LCBzeCwgc3ksIHNXaWR0aCwgc0hlaWdodCwgIGRXaWR0aCwgZEhlaWdodCApIHtcbiAgICAgICAgdGhpcy5jb250ZXh0LmRyYXdJbWFnZSh0aGlzLmltYWdlc1tpbWFnZU5hbWVdLCBzeCwgc3ksIHNXaWR0aCwgc0hlaWdodCwgeCwgeSwgZFdpZHRoLCBkSGVpZ2h0KTtcbiAgICB9XG5cbiAgICBkcmF3SW1hZ2VGdWxsU2NyZWVuKHgsIHksIGltYWdlTmFtZSkge1xuICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMuaW1hZ2VzW2ltYWdlTmFtZV0sIHgsIHksIHRoaXMuY2FudmFzLndpZHRoLCB0aGlzLmNhbnZhcy5oZWlnaHQpO1xuICAgIH1cblxuICAgIGRyYXdJbWFnZVJvdGF0ZWQoaW1hZ2VOYW1lLCB4LCB5LCBzY2FsZSwgcm90LCBpc1JvdGF0ZSA9ICB0cnVlKSB7XG4gICAgICAgIHRoaXMuY29udGV4dC5jbGVhclJlY3QoMCwgMCwgdGhpcy5jb250ZXh0LndpZHRoLCB0aGlzLmNvbnRleHQuaGVpZ2h0KTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybShzY2FsZSwgMCwgMCwgc2NhbGUsIHgsIHkpO1xuICAgICAgICBpZiAoaXNSb3RhdGUpIHtcbiAgICAgICAgICAgIHRoaXMuY29udGV4dC5yb3RhdGUocm90KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmNvbnRleHQuZHJhd0ltYWdlKHRoaXMuaW1hZ2VzW2ltYWdlTmFtZV0sIC10aGlzLmltYWdlc1tpbWFnZU5hbWVdLndpZHRoIC8yLCAtdGhpcy5pbWFnZXNbaW1hZ2VOYW1lXS5oZWlnaHQgLyAyKTtcbiAgICAgICAgdGhpcy5jb250ZXh0LnNldFRyYW5zZm9ybSgxLCAwLCAwLCAxLCAwLCAwKTtcbiAgICB9XG5cbiAgICBjaGFuZ2VTY2FsZShzdGFydCwgZW5kLCBzdGVwKSB7XG4gICAgICAgIGlmKHRoaXMuc2NhbGUudG9GaXhlZCgzKSA9PT0gc3RhcnQpIHtcbiAgICAgICAgICAgIHRoaXMuaXNDaGFuZ2VTY2FsZSA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0aGlzLnNjYWxlLnRvRml4ZWQoMykgPT09IGVuZCkge1xuICAgICAgICAgICAgdGhpcy5pc0NoYW5nZVNjYWxlID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zY2FsZS50b0ZpeGVkKDMpIDw9IHN0YXJ0ICYmICF0aGlzLmlzQ2hhbmdlU2NhbGUpIHtcbiAgICAgICAgICAgIHRoaXMuc2NhbGUgLT0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zY2FsZS50b0ZpeGVkKDMpID49IGVuZCAmJiB0aGlzLmlzQ2hhbmdlU2NhbGUpIHtcbiAgICAgICAgICAgIHRoaXMuc2NhbGUgKz0gc3RlcDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5zY2FsZVxuICAgIH1cblxuICAgIGRyYXdTcHJpdGUoc3ByaXRlKSB7XG5cbiAgICAgICAgbGV0IHNwcml0ZVggPSBzcHJpdGUueDtcbiAgICAgICAgbGV0IHNwcml0ZVkgPSBzcHJpdGUueTtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgICAoc3ByaXRlWCA+PSB0aGlzLmNhbnZhcy53aWR0aCkgfHxcbiAgICAgICAgICAgIChzcHJpdGVZID49IHRoaXMuY2FudmFzLmhlaWdodCkgfHxcbiAgICAgICAgICAgICgoc3ByaXRlWCArIHNwcml0ZS53aWR0aCkgPD0gMCkgfHxcbiAgICAgICAgICAgICgoc3ByaXRlWSArIHNwcml0ZS5oZWlnaHQpIDw9IDApXG4gICAgICAgICkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHNvdXJjZVggPSBzcHJpdGUuc291cmNlWCArIE1hdGguYWJzKE1hdGgubWluKDAsIHNwcml0ZVgpKTtcbiAgICAgICAgbGV0IHNvdXJjZVkgPSBzcHJpdGUuc291cmNlWSArIE1hdGguYWJzKE1hdGgubWluKDAsIHNwcml0ZVkpKTtcbiAgICAgICAgbGV0IHdpZHRoID0gTWF0aC5taW4odGhpcy5jYW52YXMud2lkdGgsIHNwcml0ZVggKyBzcHJpdGUud2lkdGgpIC0gTWF0aC5tYXgoMCwgc3ByaXRlWCk7XG4gICAgICAgIGxldCBoZWlnaHQgPSBNYXRoLm1pbih0aGlzLmNhbnZhcy5oZWlnaHQsIHNwcml0ZVkgKyBzcHJpdGUuaGVpZ2h0KSAtIE1hdGgubWF4KDAsIHNwcml0ZVkpO1xuXG4gICAgICAgIHRoaXMuY29udGV4dC5kcmF3SW1hZ2UodGhpcy5pbWFnZXNbc3ByaXRlLmltYWdlTmFtZV0sXG4gICAgICAgICAgICBzb3VyY2VYLFxuICAgICAgICAgICAgc291cmNlWSxcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0LFxuICAgICAgICAgICAgTWF0aC5tYXgoMCwgc3ByaXRlWCksXG4gICAgICAgICAgICBNYXRoLm1heCgwLCBzcHJpdGVZKSxcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0KTtcbiAgICB9XG59XG4iLCJpbXBvcnQge1Nwcml0ZX0gZnJvbSBcIi4vc3ByaXRlLmpzXCI7XG5pbXBvcnQge0FuaW1hdGlvbn0gZnJvbSAnLi9hbmltYXRpb24uanMnO1xuXG5leHBvcnQgY2xhc3MgU3ByaXRlU2hlZXQge1xuICAgIGNvbnN0cnVjdG9yKHtpbWFnZU5hbWUsIGltYWdlV2lkdGgsIGltYWdlSGVpZ2h0LCBzcHJpdGVXaWR0aCA9IDY0LCBzcHJpdGVIZWlnaHQgPSA2NH0pIHtcbiAgICAgICAgdGhpcy5pbWFnZU5hbWUgPSBpbWFnZU5hbWU7XG4gICAgICAgIHRoaXMuaW1hZ2VXaWR0aCA9IGltYWdlV2lkdGg7XG4gICAgICAgIHRoaXMuaW1hZ2VIZWlnaHQgPSBpbWFnZUhlaWdodDtcbiAgICAgICAgdGhpcy5zcHJpdGVXaWR0aCA9IHNwcml0ZVdpZHRoO1xuICAgICAgICB0aGlzLnNwcml0ZUhlaWdodCA9IHNwcml0ZUhlaWdodDtcbiAgICB9XG5cbiAgICBnZXRBbmltYXRpb24oaW5kZXhlcywgc3BlZWQsIHJlcGVhdCA9IHRydWUsIGF1dG9ydW4gPSB0cnVlKSB7XG4gICAgICAgIHJldHVybiBuZXcgQW5pbWF0aW9uKHtcbiAgICAgICAgICAgIGltYWdlTmFtZTogdGhpcy5pbWFnZU5hbWUsXG4gICAgICAgICAgICBmcmFtZXM6IGluZGV4ZXMubWFwKGluZGV4ID0+ICh7c3g6IHRoaXMuZ2V0U291cmNlWChpbmRleCksIHN5OiB0aGlzLmdldFNvdXJjZVkoaW5kZXgpfSkpLFxuICAgICAgICAgICAgc3BlZWQ6IHNwZWVkLFxuICAgICAgICAgICAgcmVwZWF0OiByZXBlYXQsXG4gICAgICAgICAgICBhdXRvcnVuOiBhdXRvcnVuLFxuICAgICAgICAgICAgd2lkdGg6IHRoaXMuc3ByaXRlV2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHRoaXMuc3ByaXRlSGVpZ2h0XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGdldFNwcml0ZShpbmRleCkge1xuICAgICAgICByZXR1cm4gbmV3IFNwcml0ZSh7XG4gICAgICAgICAgICBpbWFnZU5hbWU6IHRoaXMuaW1hZ2VOYW1lLFxuICAgICAgICAgICAgc291cmNlWDogdGhpcy5nZXRTb3VyY2VYKGluZGV4KSxcbiAgICAgICAgICAgIHNvdXJjZVk6IHRoaXMuZ2V0U291cmNlWShpbmRleCksXG4gICAgICAgICAgICB3aWR0aDogdGhpcy5zcHJpdGVXaWR0aCxcbiAgICAgICAgICAgIGhlaWdodDogdGhpcy5zcHJpdGVIZWlnaHRcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZ2V0U291cmNlWChpbmRleCkge1xuICAgICAgICByZXR1cm4gKC0taW5kZXggKiB0aGlzLnNwcml0ZVdpZHRoKSAlIHRoaXMuaW1hZ2VXaWR0aDtcbiAgICB9XG5cbiAgICBnZXRTb3VyY2VZKGluZGV4KSB7XG4gICAgICAgIHJldHVybiBNYXRoLnRydW5jKCgtLWluZGV4ICogdGhpcy5zcHJpdGVXaWR0aCkgLyB0aGlzLmltYWdlV2lkdGgpICogdGhpcy5zcHJpdGVIZWlnaHQ7XG4gICAgfVxufVxuIiwiZXhwb3J0IGNsYXNzIFNwcml0ZSB7XG4gICAgY29uc3RydWN0b3Ioe2ltYWdlTmFtZSwgc291cmNlWCwgc291cmNlWSwgd2lkdGggPSA2NCwgaGVpZ2h0ID0gNjR9KSB7XG4gICAgICAgIHRoaXMuaW1hZ2VOYW1lID0gaW1hZ2VOYW1lO1xuICAgICAgICB0aGlzLnNvdXJjZVggPSBzb3VyY2VYO1xuICAgICAgICB0aGlzLnNvdXJjZVkgPSBzb3VyY2VZO1xuICAgICAgICB0aGlzLndpZHRoID0gd2lkdGg7XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gaGVpZ2h0O1xuICAgICAgICB0aGlzLnggPSAwO1xuICAgICAgICB0aGlzLnkgPSAwO1xuICAgIH1cblxuICAgIHNldFhZKHgsIHkpIHtcbiAgICAgICAgdGhpcy54ID0geDtcbiAgICAgICAgdGhpcy55ID0geTtcbiAgICB9XG59XG4iLCJleHBvcnQgY2xhc3MgVmVjdG9yIHtcbiAgICBjb25zdHJ1Y3RvcihkaXJlY3Rpb24sIHNwZWVkKSB7XG4gICAgICAgIHRoaXMuc2V0RGlyZWN0aW9uKGRpcmVjdGlvbiwgc3BlZWQpO1xuICAgIH1cblxuICAgIHNldERpcmVjdGlvbihkaXJlY3Rpb24sIHNwZWVkKSB7XG4gICAgICAgIHRoaXMuZGlyZWN0aW9uID0gZGlyZWN0aW9uO1xuICAgICAgICB0aGlzLnNwZWVkID0gc3BlZWQ7XG4gICAgICAgIHRoaXMueCA9IDA7XG4gICAgICAgIHRoaXMueSA9IDA7XG4gICAgICAgIHN3aXRjaCAoZGlyZWN0aW9uKSB7XG4gICAgICAgICAgICBjYXNlIFwidXBcIjpcbiAgICAgICAgICAgICAgICB0aGlzLnkgPSAtc3BlZWQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJkb3duXCI6XG4gICAgICAgICAgICAgICAgdGhpcy55ID0gc3BlZWQ7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICAgIGNhc2UgXCJyaWdodFwiOlxuICAgICAgICAgICAgICAgIHRoaXMueCA9IHNwZWVkO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgICBjYXNlIFwibGVmdFwiOlxuICAgICAgICAgICAgICAgIHRoaXMueCA9IC1zcGVlZDtcbiAgICAgICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgICAgY2FzZSBcImZseVwiOlxuICAgICAgICAgICAgICAgIHRoaXMueCA9IHRoaXMueDtcbiAgICAgICAgICAgICAgICB0aGlzLnkgPSB0aGlzLnk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgfVxuICAgIH1cblxuICAgIG1vdmUob2JqZWN0LCBkdCkge1xuICAgICAgICBvYmplY3QueCArPSBkdCAqICh0aGlzLnggLyAxMDAwKTtcbiAgICAgICAgb2JqZWN0LnkgKz0gZHQgKiAodGhpcy55IC8gMTAwMDApO1xuICAgIH1cbn1cbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN5bWJvbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmNyZWF0ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0aWVzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmtleXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LW5hbWVzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3QuZnJlZXplJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5vYmplY3Quc2VhbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnByZXZlbnQtZXh0ZW5zaW9ucycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWZyb3plbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLXNlYWxlZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LmlzLWV4dGVuc2libGUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5hc3NpZ24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC5pcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYub2JqZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm9iamVjdC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmJpbmQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLm5hbWUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmZ1bmN0aW9uLmhhcy1pbnN0YW5jZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucGFyc2UtaW50Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wYXJzZS1mbG9hdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmNvbnN0cnVjdG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIudG8tZml4ZWQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci50by1wcmVjaXNpb24nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5lcHNpbG9uJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtZmluaXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIuaXMtaW50ZWdlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLW5hbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLmlzLXNhZmUtaW50ZWdlcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubnVtYmVyLm1heC1zYWZlLWludGVnZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5taW4tc2FmZS1pbnRlZ2VyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5udW1iZXIucGFyc2UtZmxvYXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm51bWJlci5wYXJzZS1pbnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYWNvc2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYXNpbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguYXRhbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguY2JydCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5jbHozMicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5jb3NoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmV4cG0xJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmZyb3VuZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5oeXBvdCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5pbXVsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzEwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzFwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLmxvZzInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGguc2lnbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYubWF0aC5zaW5oJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXRoLnRhbmgnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2Lm1hdGgudHJ1bmMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5mcm9tLWNvZGUtcG9pbnQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5yYXcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy50cmltJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5jb2RlLXBvaW50LWF0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZW5kcy13aXRoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuaW5jbHVkZXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5yZXBlYXQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5zdGFydHMtd2l0aCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmFuY2hvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmJpZycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmJsaW5rJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuYm9sZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLmZpeGVkJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udGNvbG9yJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuZm9udHNpemUnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGFsaWNzJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcubGluaycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLnNtYWxsJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3RyaWtlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3ViJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5zdHJpbmcuc3VwJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLm5vdycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuZGF0ZS50by1qc29uJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLnRvLWlzby1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmRhdGUudG8tc3RyaW5nJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5kYXRlLnRvLXByaW1pdGl2ZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuaXMtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmZyb20nKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5Lm9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5qb2luJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5zbGljZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc29ydCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZm9yLWVhY2gnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5Lm1hcCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmlsdGVyJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5zb21lJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5ldmVyeScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkucmVkdWNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5yZWR1Y2UtcmlnaHQnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LmFycmF5LmluZGV4LW9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5sYXN0LWluZGV4LW9mJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5hcnJheS5jb3B5LXdpdGhpbicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmlsbCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmluZCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuZmluZC1pbmRleCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuc3BlY2llcycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5jb25zdHJ1Y3RvcicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLmV4ZWMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC50by1zdHJpbmcnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZ2V4cC5mbGFncycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLm1hdGNoJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWdleHAucmVwbGFjZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLnNlYXJjaCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVnZXhwLnNwbGl0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5wcm9taXNlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnNldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYud2Vhay1tYXAnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LndlYWstc2V0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC5hcnJheS1idWZmZXInKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmRhdGEtdmlldycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQuaW50OC1hcnJheScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYudHlwZWQudWludDgtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLnVpbnQ4LWNsYW1wZWQtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmludDE2LWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MTYtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmludDMyLWFycmF5Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi50eXBlZC51aW50MzItYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0MzItYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnR5cGVkLmZsb2F0NjQtYXJyYXknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuYXBwbHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuY29uc3RydWN0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5kZWxldGUtcHJvcGVydHknKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZW51bWVyYXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LmdldCcpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3InKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuZ2V0LXByb3RvdHlwZS1vZicpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5oYXMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3QuaXMtZXh0ZW5zaWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5vd24ta2V5cycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYucmVmbGVjdC5wcmV2ZW50LWV4dGVuc2lvbnMnKTtcbnJlcXVpcmUoJy4uL21vZHVsZXMvZXM2LnJlZmxlY3Quc2V0Jyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL2VzNi5yZWZsZWN0LnNldC1wcm90b3R5cGUtb2YnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuYXJyYXkuZmxhdC1tYXAnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLkFycmF5LmZsYXRNYXA7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5hcnJheS5pbmNsdWRlcycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuaW5jbHVkZXM7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QuZW50cmllcycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmVudHJpZXM7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnM7XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5vYmplY3QudmFsdWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5PYmplY3QudmFsdWVzO1xuIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYucHJvbWlzZScpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcucHJvbWlzZS5maW5hbGx5Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5Qcm9taXNlWydmaW5hbGx5J107XG4iLCJyZXF1aXJlKCcuLi8uLi9tb2R1bGVzL2VzNy5zdHJpbmcucGFkLWVuZCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnBhZEVuZDtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN0cmluZy5wYWQtc3RhcnQnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9fY29yZScpLlN0cmluZy5wYWRTdGFydDtcbiIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM3LnN0cmluZy50cmltLXJpZ2h0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX2NvcmUnKS5TdHJpbmcudHJpbVJpZ2h0O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3RyaW5nLnRyaW0tbGVmdCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuU3RyaW5nLnRyaW1MZWZ0O1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczcuc3ltYm9sLmFzeW5jLWl0ZXJhdG9yJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uLy4uL21vZHVsZXMvX3drcy1leHQnKS5mKCdhc3luY0l0ZXJhdG9yJyk7XG4iLCJyZXF1aXJlKCcuLi9tb2R1bGVzL2VzNy5nbG9iYWwnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpLmdsb2JhbDtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuMTInIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiLy8gVGhhbmsncyBJRTggZm9yIGhpcyBmdW5ueSBkZWZpbmVQcm9wZXJ0eVxubW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkoe30sICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xuLy8gdHlwZW9mIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQgaXMgJ29iamVjdCcgaW4gb2xkIElFXG52YXIgaXMgPSBpc09iamVjdChkb2N1bWVudCkgJiYgaXNPYmplY3QoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXMgPyBkb2N1bWVudC5jcmVhdGVFbGVtZW50KGl0KSA6IHt9O1xufTtcbiIsInZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciBJU19XUkFQID0gdHlwZSAmICRleHBvcnQuVztcbiAgdmFyIGV4cG9ydHMgPSBJU19HTE9CQUwgPyBjb3JlIDogY29yZVtuYW1lXSB8fCAoY29yZVtuYW1lXSA9IHt9KTtcbiAgdmFyIGV4cFByb3RvID0gZXhwb3J0c1tQUk9UT1RZUEVdO1xuICB2YXIgdGFyZ2V0ID0gSVNfR0xPQkFMID8gZ2xvYmFsIDogSVNfU1RBVElDID8gZ2xvYmFsW25hbWVdIDogKGdsb2JhbFtuYW1lXSB8fCB7fSlbUFJPVE9UWVBFXTtcbiAgdmFyIGtleSwgb3duLCBvdXQ7XG4gIGlmIChJU19HTE9CQUwpIHNvdXJjZSA9IG5hbWU7XG4gIGZvciAoa2V5IGluIHNvdXJjZSkge1xuICAgIC8vIGNvbnRhaW5zIGluIG5hdGl2ZVxuICAgIG93biA9ICFJU19GT1JDRUQgJiYgdGFyZ2V0ICYmIHRhcmdldFtrZXldICE9PSB1bmRlZmluZWQ7XG4gICAgaWYgKG93biAmJiBoYXMoZXhwb3J0cywga2V5KSkgY29udGludWU7XG4gICAgLy8gZXhwb3J0IG5hdGl2ZSBvciBwYXNzZWRcbiAgICBvdXQgPSBvd24gPyB0YXJnZXRba2V5XSA6IHNvdXJjZVtrZXldO1xuICAgIC8vIHByZXZlbnQgZ2xvYmFsIHBvbGx1dGlvbiBmb3IgbmFtZXNwYWNlc1xuICAgIGV4cG9ydHNba2V5XSA9IElTX0dMT0JBTCAmJiB0eXBlb2YgdGFyZ2V0W2tleV0gIT0gJ2Z1bmN0aW9uJyA/IHNvdXJjZVtrZXldXG4gICAgLy8gYmluZCB0aW1lcnMgdG8gZ2xvYmFsIGZvciBjYWxsIGZyb20gZXhwb3J0IGNvbnRleHRcbiAgICA6IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKVxuICAgIC8vIHdyYXAgZ2xvYmFsIGNvbnN0cnVjdG9ycyBmb3IgcHJldmVudCBjaGFuZ2UgdGhlbSBpbiBsaWJyYXJ5XG4gICAgOiBJU19XUkFQICYmIHRhcmdldFtrZXldID09IG91dCA/IChmdW5jdGlvbiAoQykge1xuICAgICAgdmFyIEYgPSBmdW5jdGlvbiAoYSwgYiwgYykge1xuICAgICAgICBpZiAodGhpcyBpbnN0YW5jZW9mIEMpIHtcbiAgICAgICAgICBzd2l0Y2ggKGFyZ3VtZW50cy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGNhc2UgMDogcmV0dXJuIG5ldyBDKCk7XG4gICAgICAgICAgICBjYXNlIDE6IHJldHVybiBuZXcgQyhhKTtcbiAgICAgICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBDKGEsIGIpO1xuICAgICAgICAgIH0gcmV0dXJuIG5ldyBDKGEsIGIsIGMpO1xuICAgICAgICB9IHJldHVybiBDLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9O1xuICAgICAgRltQUk9UT1RZUEVdID0gQ1tQUk9UT1RZUEVdO1xuICAgICAgcmV0dXJuIEY7XG4gICAgLy8gbWFrZSBzdGF0aWMgdmVyc2lvbnMgZm9yIHByb3RvdHlwZSBtZXRob2RzXG4gICAgfSkob3V0KSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5tZXRob2RzLiVOQU1FJVxuICAgIGlmIChJU19QUk9UTykge1xuICAgICAgKGV4cG9ydHMudmlydHVhbCB8fCAoZXhwb3J0cy52aXJ0dWFsID0ge30pKVtrZXldID0gb3V0O1xuICAgICAgLy8gZXhwb3J0IHByb3RvIG1ldGhvZHMgdG8gY29yZS4lQ09OU1RSVUNUT1IlLnByb3RvdHlwZS4lTkFNRSVcbiAgICAgIGlmICh0eXBlICYgJGV4cG9ydC5SICYmIGV4cFByb3RvICYmICFleHBQcm90b1trZXldKSBoaWRlKGV4cFByb3RvLCBrZXksIG91dCk7XG4gICAgfVxuICB9XG59O1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYykge1xuICB0cnkge1xuICAgIHJldHVybiAhIWV4ZWMoKTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYgKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpIF9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gIXJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgJiYgIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KHJlcXVpcmUoJy4vX2RvbS1jcmVhdGUnKSgnZGl2JyksICdhJywgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIDc7IH0gfSkuYSAhPSA3O1xufSk7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsInZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIElFOF9ET01fREVGSU5FID0gcmVxdWlyZSgnLi9faWU4LWRvbS1kZWZpbmUnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGRQID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuXG5leHBvcnRzLmYgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gT2JqZWN0LmRlZmluZVByb3BlcnR5IDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkoTywgUCwgQXR0cmlidXRlcykge1xuICBhbk9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBhbk9iamVjdChBdHRyaWJ1dGVzKTtcbiAgaWYgKElFOF9ET01fREVGSU5FKSB0cnkge1xuICAgIHJldHVybiBkUChPLCBQLCBBdHRyaWJ1dGVzKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIGlmICgnZ2V0JyBpbiBBdHRyaWJ1dGVzIHx8ICdzZXQnIGluIEF0dHJpYnV0ZXMpIHRocm93IFR5cGVFcnJvcignQWNjZXNzb3JzIG5vdCBzdXBwb3J0ZWQhJyk7XG4gIGlmICgndmFsdWUnIGluIEF0dHJpYnV0ZXMpIE9bUF0gPSBBdHRyaWJ1dGVzLnZhbHVlO1xuICByZXR1cm4gTztcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChiaXRtYXAsIHZhbHVlKSB7XG4gIHJldHVybiB7XG4gICAgZW51bWVyYWJsZTogIShiaXRtYXAgJiAxKSxcbiAgICBjb25maWd1cmFibGU6ICEoYml0bWFwICYgMiksXG4gICAgd3JpdGFibGU6ICEoYml0bWFwICYgNCksXG4gICAgdmFsdWU6IHZhbHVlXG4gIH07XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtZ2xvYmFsXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuRywgeyBnbG9iYWw6IHJlcXVpcmUoJy4vX2dsb2JhbCcpIH0pO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKHR5cGVvZiBpdCAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIGZ1bmN0aW9uIScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwidmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIG1zZykge1xuICBpZiAodHlwZW9mIGl0ICE9ICdudW1iZXInICYmIGNvZihpdCkgIT0gJ051bWJlcicpIHRocm93IFR5cGVFcnJvcihtc2cpO1xuICByZXR1cm4gK2l0O1xufTtcbiIsIi8vIDIyLjEuMy4zMSBBcnJheS5wcm90b3R5cGVbQEB1bnNjb3BhYmxlc11cbnZhciBVTlNDT1BBQkxFUyA9IHJlcXVpcmUoJy4vX3drcycpKCd1bnNjb3BhYmxlcycpO1xudmFyIEFycmF5UHJvdG8gPSBBcnJheS5wcm90b3R5cGU7XG5pZiAoQXJyYXlQcm90b1tVTlNDT1BBQkxFU10gPT0gdW5kZWZpbmVkKSByZXF1aXJlKCcuL19oaWRlJykoQXJyYXlQcm90bywgVU5TQ09QQUJMRVMsIHt9KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICBBcnJheVByb3RvW1VOU0NPUEFCTEVTXVtrZXldID0gdHJ1ZTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuIC8vIGBBZHZhbmNlU3RyaW5nSW5kZXhgIGFic3RyYWN0IG9wZXJhdGlvblxuLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtYWR2YW5jZXN0cmluZ2luZGV4XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChTLCBpbmRleCwgdW5pY29kZSkge1xuICByZXR1cm4gaW5kZXggKyAodW5pY29kZSA/IGF0KFMsIGluZGV4KS5sZW5ndGggOiAxKTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwgQ29uc3RydWN0b3IsIG5hbWUsIGZvcmJpZGRlbkZpZWxkKSB7XG4gIGlmICghKGl0IGluc3RhbmNlb2YgQ29uc3RydWN0b3IpIHx8IChmb3JiaWRkZW5GaWVsZCAhPT0gdW5kZWZpbmVkICYmIGZvcmJpZGRlbkZpZWxkIGluIGl0KSkge1xuICAgIHRocm93IFR5cGVFcnJvcihuYW1lICsgJzogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gIH0gcmV0dXJuIGl0O1xufTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGFuIG9iamVjdCEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIi8vIDIyLjEuMy4zIEFycmF5LnByb3RvdHlwZS5jb3B5V2l0aGluKHRhcmdldCwgc3RhcnQsIGVuZCA9IHRoaXMubGVuZ3RoKVxuJ3VzZSBzdHJpY3QnO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFtdLmNvcHlXaXRoaW4gfHwgZnVuY3Rpb24gY29weVdpdGhpbih0YXJnZXQgLyogPSAwICovLCBzdGFydCAvKiA9IDAsIGVuZCA9IEBsZW5ndGggKi8pIHtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgdmFyIGxlbiA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgdmFyIHRvID0gdG9BYnNvbHV0ZUluZGV4KHRhcmdldCwgbGVuKTtcbiAgdmFyIGZyb20gPSB0b0Fic29sdXRlSW5kZXgoc3RhcnQsIGxlbik7XG4gIHZhciBlbmQgPSBhcmd1bWVudHMubGVuZ3RoID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDtcbiAgdmFyIGNvdW50ID0gTWF0aC5taW4oKGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuKSkgLSBmcm9tLCBsZW4gLSB0byk7XG4gIHZhciBpbmMgPSAxO1xuICBpZiAoZnJvbSA8IHRvICYmIHRvIDwgZnJvbSArIGNvdW50KSB7XG4gICAgaW5jID0gLTE7XG4gICAgZnJvbSArPSBjb3VudCAtIDE7XG4gICAgdG8gKz0gY291bnQgLSAxO1xuICB9XG4gIHdoaWxlIChjb3VudC0tID4gMCkge1xuICAgIGlmIChmcm9tIGluIE8pIE9bdG9dID0gT1tmcm9tXTtcbiAgICBlbHNlIGRlbGV0ZSBPW3RvXTtcbiAgICB0byArPSBpbmM7XG4gICAgZnJvbSArPSBpbmM7XG4gIH0gcmV0dXJuIE87XG59O1xuIiwiLy8gMjIuMS4zLjYgQXJyYXkucHJvdG90eXBlLmZpbGwodmFsdWUsIHN0YXJ0ID0gMCwgZW5kID0gdGhpcy5sZW5ndGgpXG4ndXNlIHN0cmljdCc7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGZpbGwodmFsdWUgLyogLCBzdGFydCA9IDAsIGVuZCA9IEBsZW5ndGggKi8pIHtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIGxlbmd0aCk7XG4gIHZhciBlbmQgPSBhTGVuID4gMiA/IGFyZ3VtZW50c1syXSA6IHVuZGVmaW5lZDtcbiAgdmFyIGVuZFBvcyA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuZ3RoIDogdG9BYnNvbHV0ZUluZGV4KGVuZCwgbGVuZ3RoKTtcbiAgd2hpbGUgKGVuZFBvcyA+IGluZGV4KSBPW2luZGV4KytdID0gdmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIGZhbHNlIC0+IEFycmF5I2luZGV4T2Zcbi8vIHRydWUgIC0+IEFycmF5I2luY2x1ZGVzXG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9BYnNvbHV0ZUluZGV4ID0gcmVxdWlyZSgnLi9fdG8tYWJzb2x1dGUtaW5kZXgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKElTX0lOQ0xVREVTKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoJHRoaXMsIGVsLCBmcm9tSW5kZXgpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdCgkdGhpcyk7XG4gICAgdmFyIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKTtcbiAgICB2YXIgaW5kZXggPSB0b0Fic29sdXRlSW5kZXgoZnJvbUluZGV4LCBsZW5ndGgpO1xuICAgIHZhciB2YWx1ZTtcbiAgICAvLyBBcnJheSNpbmNsdWRlcyB1c2VzIFNhbWVWYWx1ZVplcm8gZXF1YWxpdHkgYWxnb3JpdGhtXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIGlmIChJU19JTkNMVURFUyAmJiBlbCAhPSBlbCkgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSB7XG4gICAgICB2YWx1ZSA9IE9baW5kZXgrK107XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgICBpZiAodmFsdWUgIT0gdmFsdWUpIHJldHVybiB0cnVlO1xuICAgIC8vIEFycmF5I2luZGV4T2YgaWdub3JlcyBob2xlcywgQXJyYXkjaW5jbHVkZXMgLSBub3RcbiAgICB9IGVsc2UgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChJU19JTkNMVURFUyB8fCBpbmRleCBpbiBPKSB7XG4gICAgICBpZiAoT1tpbmRleF0gPT09IGVsKSByZXR1cm4gSVNfSU5DTFVERVMgfHwgaW5kZXggfHwgMDtcbiAgICB9IHJldHVybiAhSVNfSU5DTFVERVMgJiYgLTE7XG4gIH07XG59O1xuIiwiLy8gMCAtPiBBcnJheSNmb3JFYWNoXG4vLyAxIC0+IEFycmF5I21hcFxuLy8gMiAtPiBBcnJheSNmaWx0ZXJcbi8vIDMgLT4gQXJyYXkjc29tZVxuLy8gNCAtPiBBcnJheSNldmVyeVxuLy8gNSAtPiBBcnJheSNmaW5kXG4vLyA2IC0+IEFycmF5I2ZpbmRJbmRleFxudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFzYyA9IHJlcXVpcmUoJy4vX2FycmF5LXNwZWNpZXMtY3JlYXRlJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChUWVBFLCAkY3JlYXRlKSB7XG4gIHZhciBJU19NQVAgPSBUWVBFID09IDE7XG4gIHZhciBJU19GSUxURVIgPSBUWVBFID09IDI7XG4gIHZhciBJU19TT01FID0gVFlQRSA9PSAzO1xuICB2YXIgSVNfRVZFUlkgPSBUWVBFID09IDQ7XG4gIHZhciBJU19GSU5EX0lOREVYID0gVFlQRSA9PSA2O1xuICB2YXIgTk9fSE9MRVMgPSBUWVBFID09IDUgfHwgSVNfRklORF9JTkRFWDtcbiAgdmFyIGNyZWF0ZSA9ICRjcmVhdGUgfHwgYXNjO1xuICByZXR1cm4gZnVuY3Rpb24gKCR0aGlzLCBjYWxsYmFja2ZuLCB0aGF0KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCgkdGhpcyk7XG4gICAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICAgIHZhciBmID0gY3R4KGNhbGxiYWNrZm4sIHRoYXQsIDMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChzZWxmLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICB2YXIgcmVzdWx0ID0gSVNfTUFQID8gY3JlYXRlKCR0aGlzLCBsZW5ndGgpIDogSVNfRklMVEVSID8gY3JlYXRlKCR0aGlzLCAwKSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgdmFsLCByZXM7XG4gICAgZm9yICg7bGVuZ3RoID4gaW5kZXg7IGluZGV4KyspIGlmIChOT19IT0xFUyB8fCBpbmRleCBpbiBzZWxmKSB7XG4gICAgICB2YWwgPSBzZWxmW2luZGV4XTtcbiAgICAgIHJlcyA9IGYodmFsLCBpbmRleCwgTyk7XG4gICAgICBpZiAoVFlQRSkge1xuICAgICAgICBpZiAoSVNfTUFQKSByZXN1bHRbaW5kZXhdID0gcmVzOyAgIC8vIG1hcFxuICAgICAgICBlbHNlIGlmIChyZXMpIHN3aXRjaCAoVFlQRSkge1xuICAgICAgICAgIGNhc2UgMzogcmV0dXJuIHRydWU7ICAgICAgICAgICAgIC8vIHNvbWVcbiAgICAgICAgICBjYXNlIDU6IHJldHVybiB2YWw7ICAgICAgICAgICAgICAvLyBmaW5kXG4gICAgICAgICAgY2FzZSA2OiByZXR1cm4gaW5kZXg7ICAgICAgICAgICAgLy8gZmluZEluZGV4XG4gICAgICAgICAgY2FzZSAyOiByZXN1bHQucHVzaCh2YWwpOyAgICAgICAgLy8gZmlsdGVyXG4gICAgICAgIH0gZWxzZSBpZiAoSVNfRVZFUlkpIHJldHVybiBmYWxzZTsgLy8gZXZlcnlcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIElTX0ZJTkRfSU5ERVggPyAtMSA6IElTX1NPTUUgfHwgSVNfRVZFUlkgPyBJU19FVkVSWSA6IHJlc3VsdDtcbiAgfTtcbn07XG4iLCJ2YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBjYWxsYmFja2ZuLCBhTGVuLCBtZW1vLCBpc1JpZ2h0KSB7XG4gIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgdmFyIE8gPSB0b09iamVjdCh0aGF0KTtcbiAgdmFyIHNlbGYgPSBJT2JqZWN0KE8pO1xuICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICB2YXIgaW5kZXggPSBpc1JpZ2h0ID8gbGVuZ3RoIC0gMSA6IDA7XG4gIHZhciBpID0gaXNSaWdodCA/IC0xIDogMTtcbiAgaWYgKGFMZW4gPCAyKSBmb3IgKDs7KSB7XG4gICAgaWYgKGluZGV4IGluIHNlbGYpIHtcbiAgICAgIG1lbW8gPSBzZWxmW2luZGV4XTtcbiAgICAgIGluZGV4ICs9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gICAgaW5kZXggKz0gaTtcbiAgICBpZiAoaXNSaWdodCA/IGluZGV4IDwgMCA6IGxlbmd0aCA8PSBpbmRleCkge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdSZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlJyk7XG4gICAgfVxuICB9XG4gIGZvciAoO2lzUmlnaHQgPyBpbmRleCA+PSAwIDogbGVuZ3RoID4gaW5kZXg7IGluZGV4ICs9IGkpIGlmIChpbmRleCBpbiBzZWxmKSB7XG4gICAgbWVtbyA9IGNhbGxiYWNrZm4obWVtbywgc2VsZltpbmRleF0sIGluZGV4LCBPKTtcbiAgfVxuICByZXR1cm4gbWVtbztcbn07XG4iLCJ2YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBTUEVDSUVTID0gcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob3JpZ2luYWwpIHtcbiAgdmFyIEM7XG4gIGlmIChpc0FycmF5KG9yaWdpbmFsKSkge1xuICAgIEMgPSBvcmlnaW5hbC5jb25zdHJ1Y3RvcjtcbiAgICAvLyBjcm9zcy1yZWFsbSBmYWxsYmFja1xuICAgIGlmICh0eXBlb2YgQyA9PSAnZnVuY3Rpb24nICYmIChDID09PSBBcnJheSB8fCBpc0FycmF5KEMucHJvdG90eXBlKSkpIEMgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGlzT2JqZWN0KEMpKSB7XG4gICAgICBDID0gQ1tTUEVDSUVTXTtcbiAgICAgIGlmIChDID09PSBudWxsKSBDID0gdW5kZWZpbmVkO1xuICAgIH1cbiAgfSByZXR1cm4gQyA9PT0gdW5kZWZpbmVkID8gQXJyYXkgOiBDO1xufTtcbiIsIi8vIDkuNC4yLjMgQXJyYXlTcGVjaWVzQ3JlYXRlKG9yaWdpbmFsQXJyYXksIGxlbmd0aClcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9yaWdpbmFsLCBsZW5ndGgpIHtcbiAgcmV0dXJuIG5ldyAoc3BlY2llc0NvbnN0cnVjdG9yKG9yaWdpbmFsKSkobGVuZ3RoKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgaW52b2tlID0gcmVxdWlyZSgnLi9faW52b2tlJyk7XG52YXIgYXJyYXlTbGljZSA9IFtdLnNsaWNlO1xudmFyIGZhY3RvcmllcyA9IHt9O1xuXG52YXIgY29uc3RydWN0ID0gZnVuY3Rpb24gKEYsIGxlbiwgYXJncykge1xuICBpZiAoIShsZW4gaW4gZmFjdG9yaWVzKSkge1xuICAgIGZvciAodmFyIG4gPSBbXSwgaSA9IDA7IGkgPCBsZW47IGkrKykgbltpXSA9ICdhWycgKyBpICsgJ10nO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgIGZhY3Rvcmllc1tsZW5dID0gRnVuY3Rpb24oJ0YsYScsICdyZXR1cm4gbmV3IEYoJyArIG4uam9pbignLCcpICsgJyknKTtcbiAgfSByZXR1cm4gZmFjdG9yaWVzW2xlbl0oRiwgYXJncyk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZ1bmN0aW9uLmJpbmQgfHwgZnVuY3Rpb24gYmluZCh0aGF0IC8qICwgLi4uYXJncyAqLykge1xuICB2YXIgZm4gPSBhRnVuY3Rpb24odGhpcyk7XG4gIHZhciBwYXJ0QXJncyA9IGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMsIDEpO1xuICB2YXIgYm91bmQgPSBmdW5jdGlvbiAoLyogYXJncy4uLiAqLykge1xuICAgIHZhciBhcmdzID0gcGFydEFyZ3MuY29uY2F0KGFycmF5U2xpY2UuY2FsbChhcmd1bWVudHMpKTtcbiAgICByZXR1cm4gdGhpcyBpbnN0YW5jZW9mIGJvdW5kID8gY29uc3RydWN0KGZuLCBhcmdzLmxlbmd0aCwgYXJncykgOiBpbnZva2UoZm4sIGFyZ3MsIHRoYXQpO1xuICB9O1xuICBpZiAoaXNPYmplY3QoZm4ucHJvdG90eXBlKSkgYm91bmQucHJvdG90eXBlID0gZm4ucHJvdG90eXBlO1xuICByZXR1cm4gYm91bmQ7XG59O1xuIiwiLy8gZ2V0dGluZyB0YWcgZnJvbSAxOS4xLjMuNiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nKClcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBUQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcbi8vIEVTMyB3cm9uZyBoZXJlXG52YXIgQVJHID0gY29mKGZ1bmN0aW9uICgpIHsgcmV0dXJuIGFyZ3VtZW50czsgfSgpKSA9PSAnQXJndW1lbnRzJztcblxuLy8gZmFsbGJhY2sgZm9yIElFMTEgU2NyaXB0IEFjY2VzcyBEZW5pZWQgZXJyb3JcbnZhciB0cnlHZXQgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICB0cnkge1xuICAgIHJldHVybiBpdFtrZXldO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBPLCBULCBCO1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/ICdVbmRlZmluZWQnIDogaXQgPT09IG51bGwgPyAnTnVsbCdcbiAgICAvLyBAQHRvU3RyaW5nVGFnIGNhc2VcbiAgICA6IHR5cGVvZiAoVCA9IHRyeUdldChPID0gT2JqZWN0KGl0KSwgVEFHKSkgPT0gJ3N0cmluZycgPyBUXG4gICAgLy8gYnVpbHRpblRhZyBjYXNlXG4gICAgOiBBUkcgPyBjb2YoTylcbiAgICAvLyBFUzMgYXJndW1lbnRzIGZhbGxiYWNrXG4gICAgOiAoQiA9IGNvZihPKSkgPT0gJ09iamVjdCcgJiYgdHlwZW9mIE8uY2FsbGVlID09ICdmdW5jdGlvbicgPyAnQXJndW1lbnRzJyA6IEI7XG59O1xuIiwidmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0b1N0cmluZy5jYWxsKGl0KS5zbGljZSg4LCAtMSk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyICRpdGVyRGVmaW5lID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKTtcbnZhciBzdGVwID0gcmVxdWlyZSgnLi9faXRlci1zdGVwJyk7XG52YXIgc2V0U3BlY2llcyA9IHJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIGZhc3RLZXkgPSByZXF1aXJlKCcuL19tZXRhJykuZmFzdEtleTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTSVpFID0gREVTQ1JJUFRPUlMgPyAnX3MnIDogJ3NpemUnO1xuXG52YXIgZ2V0RW50cnkgPSBmdW5jdGlvbiAodGhhdCwga2V5KSB7XG4gIC8vIGZhc3QgY2FzZVxuICB2YXIgaW5kZXggPSBmYXN0S2V5KGtleSk7XG4gIHZhciBlbnRyeTtcbiAgaWYgKGluZGV4ICE9PSAnRicpIHJldHVybiB0aGF0Ll9pW2luZGV4XTtcbiAgLy8gZnJvemVuIG9iamVjdCBjYXNlXG4gIGZvciAoZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgaWYgKGVudHJ5LmsgPT0ga2V5KSByZXR1cm4gZW50cnk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBnZXRDb25zdHJ1Y3RvcjogZnVuY3Rpb24gKHdyYXBwZXIsIE5BTUUsIElTX01BUCwgQURERVIpIHtcbiAgICB2YXIgQyA9IHdyYXBwZXIoZnVuY3Rpb24gKHRoYXQsIGl0ZXJhYmxlKSB7XG4gICAgICBhbkluc3RhbmNlKHRoYXQsIEMsIE5BTUUsICdfaScpO1xuICAgICAgdGhhdC5fdCA9IE5BTUU7ICAgICAgICAgLy8gY29sbGVjdGlvbiB0eXBlXG4gICAgICB0aGF0Ll9pID0gY3JlYXRlKG51bGwpOyAvLyBpbmRleFxuICAgICAgdGhhdC5fZiA9IHVuZGVmaW5lZDsgICAgLy8gZmlyc3QgZW50cnlcbiAgICAgIHRoYXQuX2wgPSB1bmRlZmluZWQ7ICAgIC8vIGxhc3QgZW50cnlcbiAgICAgIHRoYXRbU0laRV0gPSAwOyAgICAgICAgIC8vIHNpemVcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMS4zLjEgTWFwLnByb3RvdHlwZS5jbGVhcigpXG4gICAgICAvLyAyMy4yLjMuMiBTZXQucHJvdG90eXBlLmNsZWFyKClcbiAgICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgICAgZm9yICh2YXIgdGhhdCA9IHZhbGlkYXRlKHRoaXMsIE5BTUUpLCBkYXRhID0gdGhhdC5faSwgZW50cnkgPSB0aGF0Ll9mOyBlbnRyeTsgZW50cnkgPSBlbnRyeS5uKSB7XG4gICAgICAgICAgZW50cnkuciA9IHRydWU7XG4gICAgICAgICAgaWYgKGVudHJ5LnApIGVudHJ5LnAgPSBlbnRyeS5wLm4gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgZGVsZXRlIGRhdGFbZW50cnkuaV07XG4gICAgICAgIH1cbiAgICAgICAgdGhhdC5fZiA9IHRoYXQuX2wgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRoYXRbU0laRV0gPSAwO1xuICAgICAgfSxcbiAgICAgIC8vIDIzLjEuMy4zIE1hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjIuMy40IFNldC5wcm90b3R5cGUuZGVsZXRlKHZhbHVlKVxuICAgICAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgdmFyIHRoYXQgPSB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGVudHJ5ID0gZ2V0RW50cnkodGhhdCwga2V5KTtcbiAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgdmFyIG5leHQgPSBlbnRyeS5uO1xuICAgICAgICAgIHZhciBwcmV2ID0gZW50cnkucDtcbiAgICAgICAgICBkZWxldGUgdGhhdC5faVtlbnRyeS5pXTtcbiAgICAgICAgICBlbnRyeS5yID0gdHJ1ZTtcbiAgICAgICAgICBpZiAocHJldikgcHJldi5uID0gbmV4dDtcbiAgICAgICAgICBpZiAobmV4dCkgbmV4dC5wID0gcHJldjtcbiAgICAgICAgICBpZiAodGhhdC5fZiA9PSBlbnRyeSkgdGhhdC5fZiA9IG5leHQ7XG4gICAgICAgICAgaWYgKHRoYXQuX2wgPT0gZW50cnkpIHRoYXQuX2wgPSBwcmV2O1xuICAgICAgICAgIHRoYXRbU0laRV0tLTtcbiAgICAgICAgfSByZXR1cm4gISFlbnRyeTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4yLjMuNiBTZXQucHJvdG90eXBlLmZvckVhY2goY2FsbGJhY2tmbiwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgICAgIC8vIDIzLjEuMy41IE1hcC5wcm90b3R5cGUuZm9yRWFjaChjYWxsYmFja2ZuLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICAgICAgZm9yRWFjaDogZnVuY3Rpb24gZm9yRWFjaChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgICAgICB2YWxpZGF0ZSh0aGlzLCBOQU1FKTtcbiAgICAgICAgdmFyIGYgPSBjdHgoY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQsIDMpO1xuICAgICAgICB2YXIgZW50cnk7XG4gICAgICAgIHdoaWxlIChlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoaXMuX2YpIHtcbiAgICAgICAgICBmKGVudHJ5LnYsIGVudHJ5LmssIHRoaXMpO1xuICAgICAgICAgIC8vIHJldmVydCB0byB0aGUgbGFzdCBleGlzdGluZyBlbnRyeVxuICAgICAgICAgIHdoaWxlIChlbnRyeSAmJiBlbnRyeS5yKSBlbnRyeSA9IGVudHJ5LnA7XG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICAvLyAyMy4xLjMuNyBNYXAucHJvdG90eXBlLmhhcyhrZXkpXG4gICAgICAvLyAyMy4yLjMuNyBTZXQucHJvdG90eXBlLmhhcyh2YWx1ZSlcbiAgICAgIGhhczogZnVuY3Rpb24gaGFzKGtleSkge1xuICAgICAgICByZXR1cm4gISFnZXRFbnRyeSh2YWxpZGF0ZSh0aGlzLCBOQU1FKSwga2V5KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICBpZiAoREVTQ1JJUFRPUlMpIGRQKEMucHJvdG90eXBlLCAnc2l6ZScsIHtcbiAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gdmFsaWRhdGUodGhpcywgTkFNRSlbU0laRV07XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIEM7XG4gIH0sXG4gIGRlZjogZnVuY3Rpb24gKHRoYXQsIGtleSwgdmFsdWUpIHtcbiAgICB2YXIgZW50cnkgPSBnZXRFbnRyeSh0aGF0LCBrZXkpO1xuICAgIHZhciBwcmV2LCBpbmRleDtcbiAgICAvLyBjaGFuZ2UgZXhpc3RpbmcgZW50cnlcbiAgICBpZiAoZW50cnkpIHtcbiAgICAgIGVudHJ5LnYgPSB2YWx1ZTtcbiAgICAvLyBjcmVhdGUgbmV3IGVudHJ5XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoYXQuX2wgPSBlbnRyeSA9IHtcbiAgICAgICAgaTogaW5kZXggPSBmYXN0S2V5KGtleSwgdHJ1ZSksIC8vIDwtIGluZGV4XG4gICAgICAgIGs6IGtleSwgICAgICAgICAgICAgICAgICAgICAgICAvLyA8LSBrZXlcbiAgICAgICAgdjogdmFsdWUsICAgICAgICAgICAgICAgICAgICAgIC8vIDwtIHZhbHVlXG4gICAgICAgIHA6IHByZXYgPSB0aGF0Ll9sLCAgICAgICAgICAgICAvLyA8LSBwcmV2aW91cyBlbnRyeVxuICAgICAgICBuOiB1bmRlZmluZWQsICAgICAgICAgICAgICAgICAgLy8gPC0gbmV4dCBlbnRyeVxuICAgICAgICByOiBmYWxzZSAgICAgICAgICAgICAgICAgICAgICAgLy8gPC0gcmVtb3ZlZFxuICAgICAgfTtcbiAgICAgIGlmICghdGhhdC5fZikgdGhhdC5fZiA9IGVudHJ5O1xuICAgICAgaWYgKHByZXYpIHByZXYubiA9IGVudHJ5O1xuICAgICAgdGhhdFtTSVpFXSsrO1xuICAgICAgLy8gYWRkIHRvIGluZGV4XG4gICAgICBpZiAoaW5kZXggIT09ICdGJykgdGhhdC5faVtpbmRleF0gPSBlbnRyeTtcbiAgICB9IHJldHVybiB0aGF0O1xuICB9LFxuICBnZXRFbnRyeTogZ2V0RW50cnksXG4gIHNldFN0cm9uZzogZnVuY3Rpb24gKEMsIE5BTUUsIElTX01BUCkge1xuICAgIC8vIGFkZCAua2V5cywgLnZhbHVlcywgLmVudHJpZXMsIFtAQGl0ZXJhdG9yXVxuICAgIC8vIDIzLjEuMy40LCAyMy4xLjMuOCwgMjMuMS4zLjExLCAyMy4xLjMuMTIsIDIzLjIuMy41LCAyMy4yLjMuOCwgMjMuMi4zLjEwLCAyMy4yLjMuMTFcbiAgICAkaXRlckRlZmluZShDLCBOQU1FLCBmdW5jdGlvbiAoaXRlcmF0ZWQsIGtpbmQpIHtcbiAgICAgIHRoaXMuX3QgPSB2YWxpZGF0ZShpdGVyYXRlZCwgTkFNRSk7IC8vIHRhcmdldFxuICAgICAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgICAgICAgLy8ga2luZFxuICAgICAgdGhpcy5fbCA9IHVuZGVmaW5lZDsgICAgICAgICAgICAgICAgLy8gcHJldmlvdXNcbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIga2luZCA9IHRoYXQuX2s7XG4gICAgICB2YXIgZW50cnkgPSB0aGF0Ll9sO1xuICAgICAgLy8gcmV2ZXJ0IHRvIHRoZSBsYXN0IGV4aXN0aW5nIGVudHJ5XG4gICAgICB3aGlsZSAoZW50cnkgJiYgZW50cnkucikgZW50cnkgPSBlbnRyeS5wO1xuICAgICAgLy8gZ2V0IG5leHQgZW50cnlcbiAgICAgIGlmICghdGhhdC5fdCB8fCAhKHRoYXQuX2wgPSBlbnRyeSA9IGVudHJ5ID8gZW50cnkubiA6IHRoYXQuX3QuX2YpKSB7XG4gICAgICAgIC8vIG9yIGZpbmlzaCB0aGUgaXRlcmF0aW9uXG4gICAgICAgIHRoYXQuX3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBzdGVwKDEpO1xuICAgICAgfVxuICAgICAgLy8gcmV0dXJuIHN0ZXAgYnkga2luZFxuICAgICAgaWYgKGtpbmQgPT0gJ2tleXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS5rKTtcbiAgICAgIGlmIChraW5kID09ICd2YWx1ZXMnKSByZXR1cm4gc3RlcCgwLCBlbnRyeS52KTtcbiAgICAgIHJldHVybiBzdGVwKDAsIFtlbnRyeS5rLCBlbnRyeS52XSk7XG4gICAgfSwgSVNfTUFQID8gJ2VudHJpZXMnIDogJ3ZhbHVlcycsICFJU19NQVAsIHRydWUpO1xuXG4gICAgLy8gYWRkIFtAQHNwZWNpZXNdLCAyMy4xLjIuMiwgMjMuMi4yLjJcbiAgICBzZXRTcGVjaWVzKE5BTUUpO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG52YXIgZ2V0V2VhayA9IHJlcXVpcmUoJy4vX21ldGEnKS5nZXRXZWFrO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xudmFyICRoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBhcnJheUZpbmQgPSBjcmVhdGVBcnJheU1ldGhvZCg1KTtcbnZhciBhcnJheUZpbmRJbmRleCA9IGNyZWF0ZUFycmF5TWV0aG9kKDYpO1xudmFyIGlkID0gMDtcblxuLy8gZmFsbGJhY2sgZm9yIHVuY2F1Z2h0IGZyb3plbiBrZXlzXG52YXIgdW5jYXVnaHRGcm96ZW5TdG9yZSA9IGZ1bmN0aW9uICh0aGF0KSB7XG4gIHJldHVybiB0aGF0Ll9sIHx8ICh0aGF0Ll9sID0gbmV3IFVuY2F1Z2h0RnJvemVuU3RvcmUoKSk7XG59O1xudmFyIFVuY2F1Z2h0RnJvemVuU3RvcmUgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMuYSA9IFtdO1xufTtcbnZhciBmaW5kVW5jYXVnaHRGcm96ZW4gPSBmdW5jdGlvbiAoc3RvcmUsIGtleSkge1xuICByZXR1cm4gYXJyYXlGaW5kKHN0b3JlLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgIHJldHVybiBpdFswXSA9PT0ga2V5O1xuICB9KTtcbn07XG5VbmNhdWdodEZyb3plblN0b3JlLnByb3RvdHlwZSA9IHtcbiAgZ2V0OiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSByZXR1cm4gZW50cnlbMV07XG4gIH0sXG4gIGhhczogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiAhIWZpbmRVbmNhdWdodEZyb3plbih0aGlzLCBrZXkpO1xuICB9LFxuICBzZXQ6IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgdmFyIGVudHJ5ID0gZmluZFVuY2F1Z2h0RnJvemVuKHRoaXMsIGtleSk7XG4gICAgaWYgKGVudHJ5KSBlbnRyeVsxXSA9IHZhbHVlO1xuICAgIGVsc2UgdGhpcy5hLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgfSxcbiAgJ2RlbGV0ZSc6IGZ1bmN0aW9uIChrZXkpIHtcbiAgICB2YXIgaW5kZXggPSBhcnJheUZpbmRJbmRleCh0aGlzLmEsIGZ1bmN0aW9uIChpdCkge1xuICAgICAgcmV0dXJuIGl0WzBdID09PSBrZXk7XG4gICAgfSk7XG4gICAgaWYgKH5pbmRleCkgdGhpcy5hLnNwbGljZShpbmRleCwgMSk7XG4gICAgcmV0dXJuICEhfmluZGV4O1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgZ2V0Q29uc3RydWN0b3I6IGZ1bmN0aW9uICh3cmFwcGVyLCBOQU1FLCBJU19NQVAsIEFEREVSKSB7XG4gICAgdmFyIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBpdGVyYWJsZSkge1xuICAgICAgYW5JbnN0YW5jZSh0aGF0LCBDLCBOQU1FLCAnX2knKTtcbiAgICAgIHRoYXQuX3QgPSBOQU1FOyAgICAgIC8vIGNvbGxlY3Rpb24gdHlwZVxuICAgICAgdGhhdC5faSA9IGlkKys7ICAgICAgLy8gY29sbGVjdGlvbiBpZFxuICAgICAgdGhhdC5fbCA9IHVuZGVmaW5lZDsgLy8gbGVhayBzdG9yZSBmb3IgdW5jYXVnaHQgZnJvemVuIG9iamVjdHNcbiAgICAgIGlmIChpdGVyYWJsZSAhPSB1bmRlZmluZWQpIGZvck9mKGl0ZXJhYmxlLCBJU19NQVAsIHRoYXRbQURERVJdLCB0aGF0KTtcbiAgICB9KTtcbiAgICByZWRlZmluZUFsbChDLnByb3RvdHlwZSwge1xuICAgICAgLy8gMjMuMy4zLjIgV2Vha01hcC5wcm90b3R5cGUuZGVsZXRlKGtleSlcbiAgICAgIC8vIDIzLjQuMy4zIFdlYWtTZXQucHJvdG90eXBlLmRlbGV0ZSh2YWx1ZSlcbiAgICAgICdkZWxldGUnOiBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKVsnZGVsZXRlJ10oa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKSAmJiBkZWxldGUgZGF0YVt0aGlzLl9pXTtcbiAgICAgIH0sXG4gICAgICAvLyAyMy4zLjMuNCBXZWFrTWFwLnByb3RvdHlwZS5oYXMoa2V5KVxuICAgICAgLy8gMjMuNC4zLjQgV2Vha1NldC5wcm90b3R5cGUuaGFzKHZhbHVlKVxuICAgICAgaGFzOiBmdW5jdGlvbiBoYXMoa2V5KSB7XG4gICAgICAgIGlmICghaXNPYmplY3Qoa2V5KSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YXIgZGF0YSA9IGdldFdlYWsoa2V5KTtcbiAgICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIE5BTUUpKS5oYXMoa2V5KTtcbiAgICAgICAgcmV0dXJuIGRhdGEgJiYgJGhhcyhkYXRhLCB0aGlzLl9pKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gQztcbiAgfSxcbiAgZGVmOiBmdW5jdGlvbiAodGhhdCwga2V5LCB2YWx1ZSkge1xuICAgIHZhciBkYXRhID0gZ2V0V2Vhayhhbk9iamVjdChrZXkpLCB0cnVlKTtcbiAgICBpZiAoZGF0YSA9PT0gdHJ1ZSkgdW5jYXVnaHRGcm96ZW5TdG9yZSh0aGF0KS5zZXQoa2V5LCB2YWx1ZSk7XG4gICAgZWxzZSBkYXRhW3RoYXQuX2ldID0gdmFsdWU7XG4gICAgcmV0dXJuIHRoYXQ7XG4gIH0sXG4gIHVmc3RvcmU6IHVuY2F1Z2h0RnJvemVuU3RvcmVcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciByZWRlZmluZUFsbCA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJyk7XG52YXIgZm9yT2YgPSByZXF1aXJlKCcuL19mb3Itb2YnKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkaXRlckRldGVjdCA9IHJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0Jyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChOQU1FLCB3cmFwcGVyLCBtZXRob2RzLCBjb21tb24sIElTX01BUCwgSVNfV0VBSykge1xuICB2YXIgQmFzZSA9IGdsb2JhbFtOQU1FXTtcbiAgdmFyIEMgPSBCYXNlO1xuICB2YXIgQURERVIgPSBJU19NQVAgPyAnc2V0JyA6ICdhZGQnO1xuICB2YXIgcHJvdG8gPSBDICYmIEMucHJvdG90eXBlO1xuICB2YXIgTyA9IHt9O1xuICB2YXIgZml4TWV0aG9kID0gZnVuY3Rpb24gKEtFWSkge1xuICAgIHZhciBmbiA9IHByb3RvW0tFWV07XG4gICAgcmVkZWZpbmUocHJvdG8sIEtFWSxcbiAgICAgIEtFWSA9PSAnZGVsZXRlJyA/IGZ1bmN0aW9uIChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnaGFzJyA/IGZ1bmN0aW9uIGhhcyhhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IGZhbHNlIDogZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEpO1xuICAgICAgfSA6IEtFWSA9PSAnZ2V0JyA/IGZ1bmN0aW9uIGdldChhKSB7XG4gICAgICAgIHJldHVybiBJU19XRUFLICYmICFpc09iamVjdChhKSA/IHVuZGVmaW5lZCA6IGZuLmNhbGwodGhpcywgYSA9PT0gMCA/IDAgOiBhKTtcbiAgICAgIH0gOiBLRVkgPT0gJ2FkZCcgPyBmdW5jdGlvbiBhZGQoYSkgeyBmbi5jYWxsKHRoaXMsIGEgPT09IDAgPyAwIDogYSk7IHJldHVybiB0aGlzOyB9XG4gICAgICAgIDogZnVuY3Rpb24gc2V0KGEsIGIpIHsgZm4uY2FsbCh0aGlzLCBhID09PSAwID8gMCA6IGEsIGIpOyByZXR1cm4gdGhpczsgfVxuICAgICk7XG4gIH07XG4gIGlmICh0eXBlb2YgQyAhPSAnZnVuY3Rpb24nIHx8ICEoSVNfV0VBSyB8fCBwcm90by5mb3JFYWNoICYmICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgbmV3IEMoKS5lbnRyaWVzKCkubmV4dCgpO1xuICB9KSkpIHtcbiAgICAvLyBjcmVhdGUgY29sbGVjdGlvbiBjb25zdHJ1Y3RvclxuICAgIEMgPSBjb21tb24uZ2V0Q29uc3RydWN0b3Iod3JhcHBlciwgTkFNRSwgSVNfTUFQLCBBRERFUik7XG4gICAgcmVkZWZpbmVBbGwoQy5wcm90b3R5cGUsIG1ldGhvZHMpO1xuICAgIG1ldGEuTkVFRCA9IHRydWU7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAvLyBlYXJseSBpbXBsZW1lbnRhdGlvbnMgbm90IHN1cHBvcnRzIGNoYWluaW5nXG4gICAgdmFyIEhBU05UX0NIQUlOSU5HID0gaW5zdGFuY2VbQURERVJdKElTX1dFQUsgPyB7fSA6IC0wLCAxKSAhPSBpbnN0YW5jZTtcbiAgICAvLyBWOCB+ICBDaHJvbWl1bSA0MC0gd2Vhay1jb2xsZWN0aW9ucyB0aHJvd3Mgb24gcHJpbWl0aXZlcywgYnV0IHNob3VsZCByZXR1cm4gZmFsc2VcbiAgICB2YXIgVEhST1dTX09OX1BSSU1JVElWRVMgPSBmYWlscyhmdW5jdGlvbiAoKSB7IGluc3RhbmNlLmhhcygxKTsgfSk7XG4gICAgLy8gbW9zdCBlYXJseSBpbXBsZW1lbnRhdGlvbnMgZG9lc24ndCBzdXBwb3J0cyBpdGVyYWJsZXMsIG1vc3QgbW9kZXJuIC0gbm90IGNsb3NlIGl0IGNvcnJlY3RseVxuICAgIHZhciBBQ0NFUFRfSVRFUkFCTEVTID0gJGl0ZXJEZXRlY3QoZnVuY3Rpb24gKGl0ZXIpIHsgbmV3IEMoaXRlcik7IH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIC8vIGZvciBlYXJseSBpbXBsZW1lbnRhdGlvbnMgLTAgYW5kICswIG5vdCB0aGUgc2FtZVxuICAgIHZhciBCVUdHWV9aRVJPID0gIUlTX1dFQUsgJiYgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICAgLy8gVjggfiBDaHJvbWl1bSA0Mi0gZmFpbHMgb25seSB3aXRoIDUrIGVsZW1lbnRzXG4gICAgICB2YXIgJGluc3RhbmNlID0gbmV3IEMoKTtcbiAgICAgIHZhciBpbmRleCA9IDU7XG4gICAgICB3aGlsZSAoaW5kZXgtLSkgJGluc3RhbmNlW0FEREVSXShpbmRleCwgaW5kZXgpO1xuICAgICAgcmV0dXJuICEkaW5zdGFuY2UuaGFzKC0wKTtcbiAgICB9KTtcbiAgICBpZiAoIUFDQ0VQVF9JVEVSQUJMRVMpIHtcbiAgICAgIEMgPSB3cmFwcGVyKGZ1bmN0aW9uICh0YXJnZXQsIGl0ZXJhYmxlKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGFyZ2V0LCBDLCBOQU1FKTtcbiAgICAgICAgdmFyIHRoYXQgPSBpbmhlcml0SWZSZXF1aXJlZChuZXcgQmFzZSgpLCB0YXJnZXQsIEMpO1xuICAgICAgICBpZiAoaXRlcmFibGUgIT0gdW5kZWZpbmVkKSBmb3JPZihpdGVyYWJsZSwgSVNfTUFQLCB0aGF0W0FEREVSXSwgdGhhdCk7XG4gICAgICAgIHJldHVybiB0aGF0O1xuICAgICAgfSk7XG4gICAgICBDLnByb3RvdHlwZSA9IHByb3RvO1xuICAgICAgcHJvdG8uY29uc3RydWN0b3IgPSBDO1xuICAgIH1cbiAgICBpZiAoVEhST1dTX09OX1BSSU1JVElWRVMgfHwgQlVHR1lfWkVSTykge1xuICAgICAgZml4TWV0aG9kKCdkZWxldGUnKTtcbiAgICAgIGZpeE1ldGhvZCgnaGFzJyk7XG4gICAgICBJU19NQVAgJiYgZml4TWV0aG9kKCdnZXQnKTtcbiAgICB9XG4gICAgaWYgKEJVR0dZX1pFUk8gfHwgSEFTTlRfQ0hBSU5JTkcpIGZpeE1ldGhvZChBRERFUik7XG4gICAgLy8gd2VhayBjb2xsZWN0aW9ucyBzaG91bGQgbm90IGNvbnRhaW5zIC5jbGVhciBtZXRob2RcbiAgICBpZiAoSVNfV0VBSyAmJiBwcm90by5jbGVhcikgZGVsZXRlIHByb3RvLmNsZWFyO1xuICB9XG5cbiAgc2V0VG9TdHJpbmdUYWcoQywgTkFNRSk7XG5cbiAgT1tOQU1FXSA9IEM7XG4gICRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogKEMgIT0gQmFzZSksIE8pO1xuXG4gIGlmICghSVNfV0VBSykgY29tbW9uLnNldFN0cm9uZyhDLCBOQU1FLCBJU19NQVApO1xuXG4gIHJldHVybiBDO1xufTtcbiIsInZhciBjb3JlID0gbW9kdWxlLmV4cG9ydHMgPSB7IHZlcnNpb246ICcyLjYuMTInIH07XG5pZiAodHlwZW9mIF9fZSA9PSAnbnVtYmVyJykgX19lID0gY29yZTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG9iamVjdCwgaW5kZXgsIHZhbHVlKSB7XG4gIGlmIChpbmRleCBpbiBvYmplY3QpICRkZWZpbmVQcm9wZXJ0eS5mKG9iamVjdCwgaW5kZXgsIGNyZWF0ZURlc2MoMCwgdmFsdWUpKTtcbiAgZWxzZSBvYmplY3RbaW5kZXhdID0gdmFsdWU7XG59O1xuIiwiLy8gb3B0aW9uYWwgLyBzaW1wbGUgY29udGV4dCBiaW5kaW5nXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIHRoYXQsIGxlbmd0aCkge1xuICBhRnVuY3Rpb24oZm4pO1xuICBpZiAodGhhdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gZm47XG4gIHN3aXRjaCAobGVuZ3RoKSB7XG4gICAgY2FzZSAxOiByZXR1cm4gZnVuY3Rpb24gKGEpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEpO1xuICAgIH07XG4gICAgY2FzZSAyOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIpO1xuICAgIH07XG4gICAgY2FzZSAzOiByZXR1cm4gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgIHJldHVybiBmbi5jYWxsKHRoYXQsIGEsIGIsIGMpO1xuICAgIH07XG4gIH1cbiAgcmV0dXJuIGZ1bmN0aW9uICgvKiAuLi5hcmdzICovKSB7XG4gICAgcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3VtZW50cyk7XG4gIH07XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjAuMy40LjM2IC8gMTUuOS41LjQzIERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKClcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZ2V0VGltZSA9IERhdGUucHJvdG90eXBlLmdldFRpbWU7XG52YXIgJHRvSVNPU3RyaW5nID0gRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmc7XG5cbnZhciBseiA9IGZ1bmN0aW9uIChudW0pIHtcbiAgcmV0dXJuIG51bSA+IDkgPyBudW0gOiAnMCcgKyBudW07XG59O1xuXG4vLyBQaGFudG9tSlMgLyBvbGQgV2ViS2l0IGhhcyBhIGJyb2tlbiBpbXBsZW1lbnRhdGlvbnNcbm1vZHVsZS5leHBvcnRzID0gKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICR0b0lTT1N0cmluZy5jYWxsKG5ldyBEYXRlKC01ZTEzIC0gMSkpICE9ICcwMzg1LTA3LTI1VDA3OjA2OjM5Ljk5OVonO1xufSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgJHRvSVNPU3RyaW5nLmNhbGwobmV3IERhdGUoTmFOKSk7XG59KSkgPyBmdW5jdGlvbiB0b0lTT1N0cmluZygpIHtcbiAgaWYgKCFpc0Zpbml0ZShnZXRUaW1lLmNhbGwodGhpcykpKSB0aHJvdyBSYW5nZUVycm9yKCdJbnZhbGlkIHRpbWUgdmFsdWUnKTtcbiAgdmFyIGQgPSB0aGlzO1xuICB2YXIgeSA9IGQuZ2V0VVRDRnVsbFllYXIoKTtcbiAgdmFyIG0gPSBkLmdldFVUQ01pbGxpc2Vjb25kcygpO1xuICB2YXIgcyA9IHkgPCAwID8gJy0nIDogeSA+IDk5OTkgPyAnKycgOiAnJztcbiAgcmV0dXJuIHMgKyAoJzAwMDAwJyArIE1hdGguYWJzKHkpKS5zbGljZShzID8gLTYgOiAtNCkgK1xuICAgICctJyArIGx6KGQuZ2V0VVRDTW9udGgoKSArIDEpICsgJy0nICsgbHooZC5nZXRVVENEYXRlKCkpICtcbiAgICAnVCcgKyBseihkLmdldFVUQ0hvdXJzKCkpICsgJzonICsgbHooZC5nZXRVVENNaW51dGVzKCkpICtcbiAgICAnOicgKyBseihkLmdldFVUQ1NlY29uZHMoKSkgKyAnLicgKyAobSA+IDk5ID8gbSA6ICcwJyArIGx6KG0pKSArICdaJztcbn0gOiAkdG9JU09TdHJpbmc7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIE5VTUJFUiA9ICdudW1iZXInO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChoaW50KSB7XG4gIGlmIChoaW50ICE9PSAnc3RyaW5nJyAmJiBoaW50ICE9PSBOVU1CRVIgJiYgaGludCAhPT0gJ2RlZmF1bHQnKSB0aHJvdyBUeXBlRXJyb3IoJ0luY29ycmVjdCBoaW50Jyk7XG4gIHJldHVybiB0b1ByaW1pdGl2ZShhbk9iamVjdCh0aGlzKSwgaGludCAhPSBOVU1CRVIpO1xufTtcbiIsIi8vIDcuMi4xIFJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBUaGFuaydzIElFOCBmb3IgaGlzIGZ1bm55IGRlZmluZVByb3BlcnR5XG5tb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iLCIvLyBhbGwgZW51bWVyYWJsZSBvYmplY3Qga2V5cywgaW5jbHVkZXMgc3ltYm9sc1xudmFyIGdldEtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUFMgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wcycpO1xudmFyIHBJRSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciByZXN1bHQgPSBnZXRLZXlzKGl0KTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIGlmIChnZXRTeW1ib2xzKSB7XG4gICAgdmFyIHN5bWJvbHMgPSBnZXRTeW1ib2xzKGl0KTtcbiAgICB2YXIgaXNFbnVtID0gcElFLmY7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKHN5bWJvbHMubGVuZ3RoID4gaSkgaWYgKGlzRW51bS5jYWxsKGl0LCBrZXkgPSBzeW1ib2xzW2krK10pKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGNvcmUgPSByZXF1aXJlKCcuL19jb3JlJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbnZhciAkZXhwb3J0ID0gZnVuY3Rpb24gKHR5cGUsIG5hbWUsIHNvdXJjZSkge1xuICB2YXIgSVNfRk9SQ0VEID0gdHlwZSAmICRleHBvcnQuRjtcbiAgdmFyIElTX0dMT0JBTCA9IHR5cGUgJiAkZXhwb3J0Lkc7XG4gIHZhciBJU19TVEFUSUMgPSB0eXBlICYgJGV4cG9ydC5TO1xuICB2YXIgSVNfUFJPVE8gPSB0eXBlICYgJGV4cG9ydC5QO1xuICB2YXIgSVNfQklORCA9IHR5cGUgJiAkZXhwb3J0LkI7XG4gIHZhciB0YXJnZXQgPSBJU19HTE9CQUwgPyBnbG9iYWwgOiBJU19TVEFUSUMgPyBnbG9iYWxbbmFtZV0gfHwgKGdsb2JhbFtuYW1lXSA9IHt9KSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV07XG4gIHZhciBleHBvcnRzID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSk7XG4gIHZhciBleHBQcm90byA9IGV4cG9ydHNbUFJPVE9UWVBFXSB8fCAoZXhwb3J0c1tQUk9UT1RZUEVdID0ge30pO1xuICB2YXIga2V5LCBvd24sIG91dCwgZXhwO1xuICBpZiAoSVNfR0xPQkFMKSBzb3VyY2UgPSBuYW1lO1xuICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gKG93biA/IHRhcmdldCA6IHNvdXJjZSlba2V5XTtcbiAgICAvLyBiaW5kIHRpbWVycyB0byBnbG9iYWwgZm9yIGNhbGwgZnJvbSBleHBvcnQgY29udGV4dFxuICAgIGV4cCA9IElTX0JJTkQgJiYgb3duID8gY3R4KG91dCwgZ2xvYmFsKSA6IElTX1BST1RPICYmIHR5cGVvZiBvdXQgPT0gJ2Z1bmN0aW9uJyA/IGN0eChGdW5jdGlvbi5jYWxsLCBvdXQpIDogb3V0O1xuICAgIC8vIGV4dGVuZCBnbG9iYWxcbiAgICBpZiAodGFyZ2V0KSByZWRlZmluZSh0YXJnZXQsIGtleSwgb3V0LCB0eXBlICYgJGV4cG9ydC5VKTtcbiAgICAvLyBleHBvcnRcbiAgICBpZiAoZXhwb3J0c1trZXldICE9IG91dCkgaGlkZShleHBvcnRzLCBrZXksIGV4cCk7XG4gICAgaWYgKElTX1BST1RPICYmIGV4cFByb3RvW2tleV0gIT0gb3V0KSBleHBQcm90b1trZXldID0gb3V0O1xuICB9XG59O1xuZ2xvYmFsLmNvcmUgPSBjb3JlO1xuLy8gdHlwZSBiaXRtYXBcbiRleHBvcnQuRiA9IDE7ICAgLy8gZm9yY2VkXG4kZXhwb3J0LkcgPSAyOyAgIC8vIGdsb2JhbFxuJGV4cG9ydC5TID0gNDsgICAvLyBzdGF0aWNcbiRleHBvcnQuUCA9IDg7ICAgLy8gcHJvdG9cbiRleHBvcnQuQiA9IDE2OyAgLy8gYmluZFxuJGV4cG9ydC5XID0gMzI7ICAvLyB3cmFwXG4kZXhwb3J0LlUgPSA2NDsgIC8vIHNhZmVcbiRleHBvcnQuUiA9IDEyODsgLy8gcmVhbCBwcm90byBtZXRob2QgZm9yIGBsaWJyYXJ5YFxubW9kdWxlLmV4cG9ydHMgPSAkZXhwb3J0O1xuIiwidmFyIE1BVENIID0gcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIHJlID0gLy4vO1xuICB0cnkge1xuICAgICcvLi8nW0tFWV0ocmUpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgdHJ5IHtcbiAgICAgIHJlW01BVENIXSA9IGZhbHNlO1xuICAgICAgcmV0dXJuICEnLy4vJ1tLRVldKHJlKTtcbiAgICB9IGNhdGNoIChmKSB7IC8qIGVtcHR5ICovIH1cbiAgfSByZXR1cm4gdHJ1ZTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuICEhZXhlYygpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG5yZXF1aXJlKCcuL2VzNi5yZWdleHAuZXhlYycpO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xuXG52YXIgU1BFQ0lFUyA9IHdrcygnc3BlY2llcycpO1xuXG52YXIgUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyAjcmVwbGFjZSBuZWVkcyBidWlsdC1pbiBzdXBwb3J0IGZvciBuYW1lZCBncm91cHMuXG4gIC8vICNtYXRjaCB3b3JrcyBmaW5lIGJlY2F1c2UgaXQganVzdCByZXR1cm4gdGhlIGV4ZWMgcmVzdWx0cywgZXZlbiBpZiBpdCBoYXNcbiAgLy8gYSBcImdyb3BzXCIgcHJvcGVydHkuXG4gIHZhciByZSA9IC8uLztcbiAgcmUuZXhlYyA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgcmVzdWx0Lmdyb3VwcyA9IHsgYTogJzcnIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbiAgcmV0dXJuICcnLnJlcGxhY2UocmUsICckPGE+JykgIT09ICc3Jztcbn0pO1xuXG52YXIgU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDID0gKGZ1bmN0aW9uICgpIHtcbiAgLy8gQ2hyb21lIDUxIGhhcyBhIGJ1Z2d5IFwic3BsaXRcIiBpbXBsZW1lbnRhdGlvbiB3aGVuIFJlZ0V4cCNleGVjICE9PSBuYXRpdmVFeGVjXG4gIHZhciByZSA9IC8oPzopLztcbiAgdmFyIG9yaWdpbmFsRXhlYyA9IHJlLmV4ZWM7XG4gIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiBvcmlnaW5hbEV4ZWMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfTtcbiAgdmFyIHJlc3VsdCA9ICdhYicuc3BsaXQocmUpO1xuICByZXR1cm4gcmVzdWx0Lmxlbmd0aCA9PT0gMiAmJiByZXN1bHRbMF0gPT09ICdhJyAmJiByZXN1bHRbMV0gPT09ICdiJztcbn0pKCk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgbGVuZ3RoLCBleGVjKSB7XG4gIHZhciBTWU1CT0wgPSB3a3MoS0VZKTtcblxuICB2YXIgREVMRUdBVEVTX1RPX1NZTUJPTCA9ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgLy8gU3RyaW5nIG1ldGhvZHMgY2FsbCBzeW1ib2wtbmFtZWQgUmVnRXAgbWV0aG9kc1xuICAgIHZhciBPID0ge307XG4gICAgT1tTWU1CT0xdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfTtcbiAgICByZXR1cm4gJydbS0VZXShPKSAhPSA3O1xuICB9KTtcblxuICB2YXIgREVMRUdBVEVTX1RPX0VYRUMgPSBERUxFR0FURVNfVE9fU1lNQk9MID8gIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBTeW1ib2wtbmFtZWQgUmVnRXhwIG1ldGhvZHMgY2FsbCAuZXhlY1xuICAgIHZhciBleGVjQ2FsbGVkID0gZmFsc2U7XG4gICAgdmFyIHJlID0gL2EvO1xuICAgIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7IGV4ZWNDYWxsZWQgPSB0cnVlOyByZXR1cm4gbnVsbDsgfTtcbiAgICBpZiAoS0VZID09PSAnc3BsaXQnKSB7XG4gICAgICAvLyBSZWdFeHBbQEBzcGxpdF0gZG9lc24ndCBjYWxsIHRoZSByZWdleCdzIGV4ZWMgbWV0aG9kLCBidXQgZmlyc3QgY3JlYXRlc1xuICAgICAgLy8gYSBuZXcgb25lLiBXZSBuZWVkIHRvIHJldHVybiB0aGUgcGF0Y2hlZCByZWdleCB3aGVuIGNyZWF0aW5nIHRoZSBuZXcgb25lLlxuICAgICAgcmUuY29uc3RydWN0b3IgPSB7fTtcbiAgICAgIHJlLmNvbnN0cnVjdG9yW1NQRUNJRVNdID0gZnVuY3Rpb24gKCkgeyByZXR1cm4gcmU7IH07XG4gICAgfVxuICAgIHJlW1NZTUJPTF0oJycpO1xuICAgIHJldHVybiAhZXhlY0NhbGxlZDtcbiAgfSkgOiB1bmRlZmluZWQ7XG5cbiAgaWYgKFxuICAgICFERUxFR0FURVNfVE9fU1lNQk9MIHx8XG4gICAgIURFTEVHQVRFU19UT19FWEVDIHx8XG4gICAgKEtFWSA9PT0gJ3JlcGxhY2UnICYmICFSRVBMQUNFX1NVUFBPUlRTX05BTUVEX0dST1VQUykgfHxcbiAgICAoS0VZID09PSAnc3BsaXQnICYmICFTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMpXG4gICkge1xuICAgIHZhciBuYXRpdmVSZWdFeHBNZXRob2QgPSAvLi9bU1lNQk9MXTtcbiAgICB2YXIgZm5zID0gZXhlYyhcbiAgICAgIGRlZmluZWQsXG4gICAgICBTWU1CT0wsXG4gICAgICAnJ1tLRVldLFxuICAgICAgZnVuY3Rpb24gbWF5YmVDYWxsTmF0aXZlKG5hdGl2ZU1ldGhvZCwgcmVnZXhwLCBzdHIsIGFyZzIsIGZvcmNlU3RyaW5nTWV0aG9kKSB7XG4gICAgICAgIGlmIChyZWdleHAuZXhlYyA9PT0gcmVnZXhwRXhlYykge1xuICAgICAgICAgIGlmIChERUxFR0FURVNfVE9fU1lNQk9MICYmICFmb3JjZVN0cmluZ01ldGhvZCkge1xuICAgICAgICAgICAgLy8gVGhlIG5hdGl2ZSBTdHJpbmcgbWV0aG9kIGFscmVhZHkgZGVsZWdhdGVzIHRvIEBAbWV0aG9kICh0aGlzXG4gICAgICAgICAgICAvLyBwb2x5ZmlsbGVkIGZ1bmN0aW9uKSwgbGVhc2luZyB0byBpbmZpbml0ZSByZWN1cnNpb24uXG4gICAgICAgICAgICAvLyBXZSBhdm9pZCBpdCBieSBkaXJlY3RseSBjYWxsaW5nIHRoZSBuYXRpdmUgQEBtZXRob2QgbWV0aG9kLlxuICAgICAgICAgICAgcmV0dXJuIHsgZG9uZTogdHJ1ZSwgdmFsdWU6IG5hdGl2ZVJlZ0V4cE1ldGhvZC5jYWxsKHJlZ2V4cCwgc3RyLCBhcmcyKSB9O1xuICAgICAgICAgIH1cbiAgICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZTogbmF0aXZlTWV0aG9kLmNhbGwoc3RyLCByZWdleHAsIGFyZzIpIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UgfTtcbiAgICAgIH1cbiAgICApO1xuICAgIHZhciBzdHJmbiA9IGZuc1swXTtcbiAgICB2YXIgcnhmbiA9IGZuc1sxXTtcblxuICAgIHJlZGVmaW5lKFN0cmluZy5wcm90b3R5cGUsIEtFWSwgc3RyZm4pO1xuICAgIGhpZGUoUmVnRXhwLnByb3RvdHlwZSwgU1lNQk9MLCBsZW5ndGggPT0gMlxuICAgICAgLy8gMjEuMi41LjggUmVnRXhwLnByb3RvdHlwZVtAQHJlcGxhY2VdKHN0cmluZywgcmVwbGFjZVZhbHVlKVxuICAgICAgLy8gMjEuMi41LjExIFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF0oc3RyaW5nLCBsaW1pdClcbiAgICAgID8gZnVuY3Rpb24gKHN0cmluZywgYXJnKSB7IHJldHVybiByeGZuLmNhbGwoc3RyaW5nLCB0aGlzLCBhcmcpOyB9XG4gICAgICAvLyAyMS4yLjUuNiBSZWdFeHAucHJvdG90eXBlW0BAbWF0Y2hdKHN0cmluZylcbiAgICAgIC8vIDIxLjIuNS45IFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdKHN0cmluZylcbiAgICAgIDogZnVuY3Rpb24gKHN0cmluZykgeyByZXR1cm4gcnhmbi5jYWxsKHN0cmluZywgdGhpcyk7IH1cbiAgICApO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjEuMi41LjMgZ2V0IFJlZ0V4cC5wcm90b3R5cGUuZmxhZ3NcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciB0aGF0ID0gYW5PYmplY3QodGhpcyk7XG4gIHZhciByZXN1bHQgPSAnJztcbiAgaWYgKHRoYXQuZ2xvYmFsKSByZXN1bHQgKz0gJ2cnO1xuICBpZiAodGhhdC5pZ25vcmVDYXNlKSByZXN1bHQgKz0gJ2knO1xuICBpZiAodGhhdC5tdWx0aWxpbmUpIHJlc3VsdCArPSAnbSc7XG4gIGlmICh0aGF0LnVuaWNvZGUpIHJlc3VsdCArPSAndSc7XG4gIGlmICh0aGF0LnN0aWNreSkgcmVzdWx0ICs9ICd5JztcbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1GbGF0dGVuSW50b0FycmF5XG52YXIgaXNBcnJheSA9IHJlcXVpcmUoJy4vX2lzLWFycmF5Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGN0eCA9IHJlcXVpcmUoJy4vX2N0eCcpO1xudmFyIElTX0NPTkNBVF9TUFJFQURBQkxFID0gcmVxdWlyZSgnLi9fd2tzJykoJ2lzQ29uY2F0U3ByZWFkYWJsZScpO1xuXG5mdW5jdGlvbiBmbGF0dGVuSW50b0FycmF5KHRhcmdldCwgb3JpZ2luYWwsIHNvdXJjZSwgc291cmNlTGVuLCBzdGFydCwgZGVwdGgsIG1hcHBlciwgdGhpc0FyZykge1xuICB2YXIgdGFyZ2V0SW5kZXggPSBzdGFydDtcbiAgdmFyIHNvdXJjZUluZGV4ID0gMDtcbiAgdmFyIG1hcEZuID0gbWFwcGVyID8gY3R4KG1hcHBlciwgdGhpc0FyZywgMykgOiBmYWxzZTtcbiAgdmFyIGVsZW1lbnQsIHNwcmVhZGFibGU7XG5cbiAgd2hpbGUgKHNvdXJjZUluZGV4IDwgc291cmNlTGVuKSB7XG4gICAgaWYgKHNvdXJjZUluZGV4IGluIHNvdXJjZSkge1xuICAgICAgZWxlbWVudCA9IG1hcEZuID8gbWFwRm4oc291cmNlW3NvdXJjZUluZGV4XSwgc291cmNlSW5kZXgsIG9yaWdpbmFsKSA6IHNvdXJjZVtzb3VyY2VJbmRleF07XG5cbiAgICAgIHNwcmVhZGFibGUgPSBmYWxzZTtcbiAgICAgIGlmIChpc09iamVjdChlbGVtZW50KSkge1xuICAgICAgICBzcHJlYWRhYmxlID0gZWxlbWVudFtJU19DT05DQVRfU1BSRUFEQUJMRV07XG4gICAgICAgIHNwcmVhZGFibGUgPSBzcHJlYWRhYmxlICE9PSB1bmRlZmluZWQgPyAhIXNwcmVhZGFibGUgOiBpc0FycmF5KGVsZW1lbnQpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3ByZWFkYWJsZSAmJiBkZXB0aCA+IDApIHtcbiAgICAgICAgdGFyZ2V0SW5kZXggPSBmbGF0dGVuSW50b0FycmF5KHRhcmdldCwgb3JpZ2luYWwsIGVsZW1lbnQsIHRvTGVuZ3RoKGVsZW1lbnQubGVuZ3RoKSwgdGFyZ2V0SW5kZXgsIGRlcHRoIC0gMSkgLSAxO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgaWYgKHRhcmdldEluZGV4ID49IDB4MWZmZmZmZmZmZmZmZmYpIHRocm93IFR5cGVFcnJvcigpO1xuICAgICAgICB0YXJnZXRbdGFyZ2V0SW5kZXhdID0gZWxlbWVudDtcbiAgICAgIH1cblxuICAgICAgdGFyZ2V0SW5kZXgrKztcbiAgICB9XG4gICAgc291cmNlSW5kZXgrKztcbiAgfVxuICByZXR1cm4gdGFyZ2V0SW5kZXg7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZmxhdHRlbkludG9BcnJheTtcbiIsInZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG52YXIgQlJFQUsgPSB7fTtcbnZhciBSRVRVUk4gPSB7fTtcbnZhciBleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmFibGUsIGVudHJpZXMsIGZuLCB0aGF0LCBJVEVSQVRPUikge1xuICB2YXIgaXRlckZuID0gSVRFUkFUT1IgPyBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyYWJsZTsgfSA6IGdldEl0ZXJGbihpdGVyYWJsZSk7XG4gIHZhciBmID0gY3R4KGZuLCB0aGF0LCBlbnRyaWVzID8gMiA6IDEpO1xuICB2YXIgaW5kZXggPSAwO1xuICB2YXIgbGVuZ3RoLCBzdGVwLCBpdGVyYXRvciwgcmVzdWx0O1xuICBpZiAodHlwZW9mIGl0ZXJGbiAhPSAnZnVuY3Rpb24nKSB0aHJvdyBUeXBlRXJyb3IoaXRlcmFibGUgKyAnIGlzIG5vdCBpdGVyYWJsZSEnKTtcbiAgLy8gZmFzdCBjYXNlIGZvciBhcnJheXMgd2l0aCBkZWZhdWx0IGl0ZXJhdG9yXG4gIGlmIChpc0FycmF5SXRlcihpdGVyRm4pKSBmb3IgKGxlbmd0aCA9IHRvTGVuZ3RoKGl0ZXJhYmxlLmxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgcmVzdWx0ID0gZW50cmllcyA/IGYoYW5PYmplY3Qoc3RlcCA9IGl0ZXJhYmxlW2luZGV4XSlbMF0sIHN0ZXBbMV0pIDogZihpdGVyYWJsZVtpbmRleF0pO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9IGVsc2UgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKGl0ZXJhYmxlKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOykge1xuICAgIHJlc3VsdCA9IGNhbGwoaXRlcmF0b3IsIGYsIHN0ZXAudmFsdWUsIGVudHJpZXMpO1xuICAgIGlmIChyZXN1bHQgPT09IEJSRUFLIHx8IHJlc3VsdCA9PT0gUkVUVVJOKSByZXR1cm4gcmVzdWx0O1xuICB9XG59O1xuZXhwb3J0cy5CUkVBSyA9IEJSRUFLO1xuZXhwb3J0cy5SRVRVUk4gPSBSRVRVUk47XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCduYXRpdmUtZnVuY3Rpb24tdG8tc3RyaW5nJywgRnVuY3Rpb24udG9TdHJpbmcpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzg2I2lzc3VlY29tbWVudC0xMTU3NTkwMjhcbnZhciBnbG9iYWwgPSBtb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgJiYgd2luZG93Lk1hdGggPT0gTWF0aFxuICA/IHdpbmRvdyA6IHR5cGVvZiBzZWxmICE9ICd1bmRlZmluZWQnICYmIHNlbGYuTWF0aCA9PSBNYXRoID8gc2VsZlxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgOiBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuaWYgKHR5cGVvZiBfX2cgPT0gJ251bWJlcicpIF9fZyA9IGdsb2JhbDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bmRlZlxuIiwidmFyIGhhc093blByb3BlcnR5ID0ge30uaGFzT3duUHJvcGVydHk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHJldHVybiBoYXNPd25Qcm9wZXJ0eS5jYWxsKGl0LCBrZXkpO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBmdW5jdGlvbiAob2JqZWN0LCBrZXksIHZhbHVlKSB7XG4gIHJldHVybiBkUC5mKG9iamVjdCwga2V5LCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG59IDogZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICBvYmplY3Rba2V5XSA9IHZhbHVlO1xuICByZXR1cm4gb2JqZWN0O1xufTtcbiIsInZhciBkb2N1bWVudCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmRvY3VtZW50O1xubW9kdWxlLmV4cG9ydHMgPSBkb2N1bWVudCAmJiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyZXF1aXJlKCcuL19kb20tY3JlYXRlJykoJ2RpdicpLCAnYScsIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiA3OyB9IH0pLmEgIT0gNztcbn0pO1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgc2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19zZXQtcHJvdG8nKS5zZXQ7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCB0YXJnZXQsIEMpIHtcbiAgdmFyIFMgPSB0YXJnZXQuY29uc3RydWN0b3I7XG4gIHZhciBQO1xuICBpZiAoUyAhPT0gQyAmJiB0eXBlb2YgUyA9PSAnZnVuY3Rpb24nICYmIChQID0gUy5wcm90b3R5cGUpICE9PSBDLnByb3RvdHlwZSAmJiBpc09iamVjdChQKSAmJiBzZXRQcm90b3R5cGVPZikge1xuICAgIHNldFByb3RvdHlwZU9mKHRoYXQsIFApO1xuICB9IHJldHVybiB0aGF0O1xufTtcbiIsIi8vIGZhc3QgYXBwbHksIGh0dHA6Ly9qc3BlcmYubG5raXQuY29tL2Zhc3QtYXBwbHkvNVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZm4sIGFyZ3MsIHRoYXQpIHtcbiAgdmFyIHVuID0gdGhhdCA9PT0gdW5kZWZpbmVkO1xuICBzd2l0Y2ggKGFyZ3MubGVuZ3RoKSB7XG4gICAgY2FzZSAwOiByZXR1cm4gdW4gPyBmbigpXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQpO1xuICAgIGNhc2UgMTogcmV0dXJuIHVuID8gZm4oYXJnc1swXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSk7XG4gICAgY2FzZSAyOiByZXR1cm4gdW4gPyBmbihhcmdzWzBdLCBhcmdzWzFdKVxuICAgICAgICAgICAgICAgICAgICAgIDogZm4uY2FsbCh0aGF0LCBhcmdzWzBdLCBhcmdzWzFdKTtcbiAgICBjYXNlIDM6IHJldHVybiB1biA/IGZuKGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pXG4gICAgICAgICAgICAgICAgICAgICAgOiBmbi5jYWxsKHRoYXQsIGFyZ3NbMF0sIGFyZ3NbMV0sIGFyZ3NbMl0pO1xuICAgIGNhc2UgNDogcmV0dXJuIHVuID8gZm4oYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSlcbiAgICAgICAgICAgICAgICAgICAgICA6IGZuLmNhbGwodGhhdCwgYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gIH0gcmV0dXJuIGZuLmFwcGx5KHRoYXQsIGFyZ3MpO1xufTtcbiIsIi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG4iLCIvLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgIT09IHVuZGVmaW5lZCAmJiAoSXRlcmF0b3JzLkFycmF5ID09PSBpdCB8fCBBcnJheVByb3RvW0lURVJBVE9SXSA9PT0gaXQpO1xufTtcbiIsIi8vIDcuMi4yIElzQXJyYXkoYXJndW1lbnQpXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG5tb2R1bGUuZXhwb3J0cyA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gaXNBcnJheShhcmcpIHtcbiAgcmV0dXJuIGNvZihhcmcpID09ICdBcnJheSc7XG59O1xuIiwiLy8gMjAuMS4yLjMgTnVtYmVyLmlzSW50ZWdlcihudW1iZXIpXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGlzSW50ZWdlcihpdCkge1xuICByZXR1cm4gIWlzT2JqZWN0KGl0KSAmJiBpc0Zpbml0ZShpdCkgJiYgZmxvb3IoaXQpID09PSBpdDtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09PSAnb2JqZWN0JyA/IGl0ICE9PSBudWxsIDogdHlwZW9mIGl0ID09PSAnZnVuY3Rpb24nO1xufTtcbiIsIi8vIDcuMi44IElzUmVnRXhwKGFyZ3VtZW50KVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG52YXIgTUFUQ0ggPSByZXF1aXJlKCcuL193a3MnKSgnbWF0Y2gnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHZhciBpc1JlZ0V4cDtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiAoKGlzUmVnRXhwID0gaXRbTUFUQ0hdKSAhPT0gdW5kZWZpbmVkID8gISFpc1JlZ0V4cCA6IGNvZihpdCkgPT0gJ1JlZ0V4cCcpO1xufTtcbiIsIi8vIGNhbGwgc29tZXRoaW5nIG9uIGl0ZXJhdG9yIHN0ZXAgd2l0aCBzYWZlIGNsb3Npbmcgb24gZXJyb3JcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlcmF0b3IsIGZuLCB2YWx1ZSwgZW50cmllcykge1xuICB0cnkge1xuICAgIHJldHVybiBlbnRyaWVzID8gZm4oYW5PYmplY3QodmFsdWUpWzBdLCB2YWx1ZVsxXSkgOiBmbih2YWx1ZSk7XG4gIC8vIDcuNC42IEl0ZXJhdG9yQ2xvc2UoaXRlcmF0b3IsIGNvbXBsZXRpb24pXG4gIH0gY2F0Y2ggKGUpIHtcbiAgICB2YXIgcmV0ID0gaXRlcmF0b3JbJ3JldHVybiddO1xuICAgIGlmIChyZXQgIT09IHVuZGVmaW5lZCkgYW5PYmplY3QocmV0LmNhbGwoaXRlcmF0b3IpKTtcbiAgICB0aHJvdyBlO1xuICB9XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGNyZWF0ZSA9IHJlcXVpcmUoJy4vX29iamVjdC1jcmVhdGUnKTtcbnZhciBkZXNjcmlwdG9yID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBJdGVyYXRvclByb3RvdHlwZSA9IHt9O1xuXG4vLyAyNS4xLjIuMS4xICVJdGVyYXRvclByb3RvdHlwZSVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faGlkZScpKEl0ZXJhdG9yUHJvdG90eXBlLCByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKSwgZnVuY3Rpb24gKCkgeyByZXR1cm4gdGhpczsgfSk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKENvbnN0cnVjdG9yLCBOQU1FLCBuZXh0KSB7XG4gIENvbnN0cnVjdG9yLnByb3RvdHlwZSA9IGNyZWF0ZShJdGVyYXRvclByb3RvdHlwZSwgeyBuZXh0OiBkZXNjcmlwdG9yKDEsIG5leHQpIH0pO1xuICBzZXRUb1N0cmluZ1RhZyhDb25zdHJ1Y3RvciwgTkFNRSArICcgSXRlcmF0b3InKTtcbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgJGl0ZXJDcmVhdGUgPSByZXF1aXJlKCcuL19pdGVyLWNyZWF0ZScpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEJVR0dZID0gIShbXS5rZXlzICYmICduZXh0JyBpbiBbXS5rZXlzKCkpOyAvLyBTYWZhcmkgaGFzIGJ1Z2d5IGl0ZXJhdG9ycyB3L28gYG5leHRgXG52YXIgRkZfSVRFUkFUT1IgPSAnQEBpdGVyYXRvcic7XG52YXIgS0VZUyA9ICdrZXlzJztcbnZhciBWQUxVRVMgPSAndmFsdWVzJztcblxudmFyIHJldHVyblRoaXMgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChCYXNlLCBOQU1FLCBDb25zdHJ1Y3RvciwgbmV4dCwgREVGQVVMVCwgSVNfU0VULCBGT1JDRUQpIHtcbiAgJGl0ZXJDcmVhdGUoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpO1xuICB2YXIgZ2V0TWV0aG9kID0gZnVuY3Rpb24gKGtpbmQpIHtcbiAgICBpZiAoIUJVR0dZICYmIGtpbmQgaW4gcHJvdG8pIHJldHVybiBwcm90b1traW5kXTtcbiAgICBzd2l0Y2ggKGtpbmQpIHtcbiAgICAgIGNhc2UgS0VZUzogcmV0dXJuIGZ1bmN0aW9uIGtleXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gICAgICBjYXNlIFZBTFVFUzogcmV0dXJuIGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICB9IHJldHVybiBmdW5jdGlvbiBlbnRyaWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICB9O1xuICB2YXIgVEFHID0gTkFNRSArICcgSXRlcmF0b3InO1xuICB2YXIgREVGX1ZBTFVFUyA9IERFRkFVTFQgPT0gVkFMVUVTO1xuICB2YXIgVkFMVUVTX0JVRyA9IGZhbHNlO1xuICB2YXIgcHJvdG8gPSBCYXNlLnByb3RvdHlwZTtcbiAgdmFyICRuYXRpdmUgPSBwcm90b1tJVEVSQVRPUl0gfHwgcHJvdG9bRkZfSVRFUkFUT1JdIHx8IERFRkFVTFQgJiYgcHJvdG9bREVGQVVMVF07XG4gIHZhciAkZGVmYXVsdCA9ICRuYXRpdmUgfHwgZ2V0TWV0aG9kKERFRkFVTFQpO1xuICB2YXIgJGVudHJpZXMgPSBERUZBVUxUID8gIURFRl9WQUxVRVMgPyAkZGVmYXVsdCA6IGdldE1ldGhvZCgnZW50cmllcycpIDogdW5kZWZpbmVkO1xuICB2YXIgJGFueU5hdGl2ZSA9IE5BTUUgPT0gJ0FycmF5JyA/IHByb3RvLmVudHJpZXMgfHwgJG5hdGl2ZSA6ICRuYXRpdmU7XG4gIHZhciBtZXRob2RzLCBrZXksIEl0ZXJhdG9yUHJvdG90eXBlO1xuICAvLyBGaXggbmF0aXZlXG4gIGlmICgkYW55TmF0aXZlKSB7XG4gICAgSXRlcmF0b3JQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZigkYW55TmF0aXZlLmNhbGwobmV3IEJhc2UoKSkpO1xuICAgIGlmIChJdGVyYXRvclByb3RvdHlwZSAhPT0gT2JqZWN0LnByb3RvdHlwZSAmJiBJdGVyYXRvclByb3RvdHlwZS5uZXh0KSB7XG4gICAgICAvLyBTZXQgQEB0b1N0cmluZ1RhZyB0byBuYXRpdmUgaXRlcmF0b3JzXG4gICAgICBzZXRUb1N0cmluZ1RhZyhJdGVyYXRvclByb3RvdHlwZSwgVEFHLCB0cnVlKTtcbiAgICAgIC8vIGZpeCBmb3Igc29tZSBvbGQgZW5naW5lc1xuICAgICAgaWYgKCFMSUJSQVJZICYmIHR5cGVvZiBJdGVyYXRvclByb3RvdHlwZVtJVEVSQVRPUl0gIT0gJ2Z1bmN0aW9uJykgaGlkZShJdGVyYXRvclByb3RvdHlwZSwgSVRFUkFUT1IsIHJldHVyblRoaXMpO1xuICAgIH1cbiAgfVxuICAvLyBmaXggQXJyYXkje3ZhbHVlcywgQEBpdGVyYXRvcn0ubmFtZSBpbiBWOCAvIEZGXG4gIGlmIChERUZfVkFMVUVTICYmICRuYXRpdmUgJiYgJG5hdGl2ZS5uYW1lICE9PSBWQUxVRVMpIHtcbiAgICBWQUxVRVNfQlVHID0gdHJ1ZTtcbiAgICAkZGVmYXVsdCA9IGZ1bmN0aW9uIHZhbHVlcygpIHsgcmV0dXJuICRuYXRpdmUuY2FsbCh0aGlzKTsgfTtcbiAgfVxuICAvLyBEZWZpbmUgaXRlcmF0b3JcbiAgaWYgKCghTElCUkFSWSB8fCBGT1JDRUQpICYmIChCVUdHWSB8fCBWQUxVRVNfQlVHIHx8ICFwcm90b1tJVEVSQVRPUl0pKSB7XG4gICAgaGlkZShwcm90bywgSVRFUkFUT1IsICRkZWZhdWx0KTtcbiAgfVxuICAvLyBQbHVnIGZvciBsaWJyYXJ5XG4gIEl0ZXJhdG9yc1tOQU1FXSA9ICRkZWZhdWx0O1xuICBJdGVyYXRvcnNbVEFHXSA9IHJldHVyblRoaXM7XG4gIGlmIChERUZBVUxUKSB7XG4gICAgbWV0aG9kcyA9IHtcbiAgICAgIHZhbHVlczogREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKFZBTFVFUyksXG4gICAgICBrZXlzOiBJU19TRVQgPyAkZGVmYXVsdCA6IGdldE1ldGhvZChLRVlTKSxcbiAgICAgIGVudHJpZXM6ICRlbnRyaWVzXG4gICAgfTtcbiAgICBpZiAoRk9SQ0VEKSBmb3IgKGtleSBpbiBtZXRob2RzKSB7XG4gICAgICBpZiAoIShrZXkgaW4gcHJvdG8pKSByZWRlZmluZShwcm90bywga2V5LCBtZXRob2RzW2tleV0pO1xuICAgIH0gZWxzZSAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChCVUdHWSB8fCBWQUxVRVNfQlVHKSwgTkFNRSwgbWV0aG9kcyk7XG4gIH1cbiAgcmV0dXJuIG1ldGhvZHM7XG59O1xuIiwidmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgU0FGRV9DTE9TSU5HID0gZmFsc2U7XG5cbnRyeSB7XG4gIHZhciByaXRlciA9IFs3XVtJVEVSQVRPUl0oKTtcbiAgcml0ZXJbJ3JldHVybiddID0gZnVuY3Rpb24gKCkgeyBTQUZFX0NMT1NJTkcgPSB0cnVlOyB9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdGhyb3ctbGl0ZXJhbFxuICBBcnJheS5mcm9tKHJpdGVyLCBmdW5jdGlvbiAoKSB7IHRocm93IDI7IH0pO1xufSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMsIHNraXBDbG9zaW5nKSB7XG4gIGlmICghc2tpcENsb3NpbmcgJiYgIVNBRkVfQ0xPU0lORykgcmV0dXJuIGZhbHNlO1xuICB2YXIgc2FmZSA9IGZhbHNlO1xuICB0cnkge1xuICAgIHZhciBhcnIgPSBbN107XG4gICAgdmFyIGl0ZXIgPSBhcnJbSVRFUkFUT1JdKCk7XG4gICAgaXRlci5uZXh0ID0gZnVuY3Rpb24gKCkgeyByZXR1cm4geyBkb25lOiBzYWZlID0gdHJ1ZSB9OyB9O1xuICAgIGFycltJVEVSQVRPUl0gPSBmdW5jdGlvbiAoKSB7IHJldHVybiBpdGVyOyB9O1xuICAgIGV4ZWMoYXJyKTtcbiAgfSBjYXRjaCAoZSkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiBzYWZlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGRvbmUsIHZhbHVlKSB7XG4gIHJldHVybiB7IHZhbHVlOiB2YWx1ZSwgZG9uZTogISFkb25lIH07XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB7fTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZmFsc2U7XG4iLCIvLyAyMC4yLjIuMTQgTWF0aC5leHBtMSh4KVxudmFyICRleHBtMSA9IE1hdGguZXhwbTE7XG5tb2R1bGUuZXhwb3J0cyA9ICghJGV4cG0xXG4gIC8vIE9sZCBGRiBidWdcbiAgfHwgJGV4cG0xKDEwKSA+IDIyMDI1LjQ2NTc5NDgwNjcxOSB8fCAkZXhwbTEoMTApIDwgMjIwMjUuNDY1Nzk0ODA2NzE2NTE2OFxuICAvLyBUb3IgQnJvd3NlciBidWdcbiAgfHwgJGV4cG0xKC0yZS0xNykgIT0gLTJlLTE3XG4pID8gZnVuY3Rpb24gZXhwbTEoeCkge1xuICByZXR1cm4gKHggPSAreCkgPT0gMCA/IHggOiB4ID4gLTFlLTYgJiYgeCA8IDFlLTYgPyB4ICsgeCAqIHggLyAyIDogTWF0aC5leHAoeCkgLSAxO1xufSA6ICRleHBtMTtcbiIsIi8vIDIwLjIuMi4xNiBNYXRoLmZyb3VuZCh4KVxudmFyIHNpZ24gPSByZXF1aXJlKCcuL19tYXRoLXNpZ24nKTtcbnZhciBwb3cgPSBNYXRoLnBvdztcbnZhciBFUFNJTE9OID0gcG93KDIsIC01Mik7XG52YXIgRVBTSUxPTjMyID0gcG93KDIsIC0yMyk7XG52YXIgTUFYMzIgPSBwb3coMiwgMTI3KSAqICgyIC0gRVBTSUxPTjMyKTtcbnZhciBNSU4zMiA9IHBvdygyLCAtMTI2KTtcblxudmFyIHJvdW5kVGllc1RvRXZlbiA9IGZ1bmN0aW9uIChuKSB7XG4gIHJldHVybiBuICsgMSAvIEVQU0lMT04gLSAxIC8gRVBTSUxPTjtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gTWF0aC5mcm91bmQgfHwgZnVuY3Rpb24gZnJvdW5kKHgpIHtcbiAgdmFyICRhYnMgPSBNYXRoLmFicyh4KTtcbiAgdmFyICRzaWduID0gc2lnbih4KTtcbiAgdmFyIGEsIHJlc3VsdDtcbiAgaWYgKCRhYnMgPCBNSU4zMikgcmV0dXJuICRzaWduICogcm91bmRUaWVzVG9FdmVuKCRhYnMgLyBNSU4zMiAvIEVQU0lMT04zMikgKiBNSU4zMiAqIEVQU0lMT04zMjtcbiAgYSA9ICgxICsgRVBTSUxPTjMyIC8gRVBTSUxPTikgKiAkYWJzO1xuICByZXN1bHQgPSBhIC0gKGEgLSAkYWJzKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICBpZiAocmVzdWx0ID4gTUFYMzIgfHwgcmVzdWx0ICE9IHJlc3VsdCkgcmV0dXJuICRzaWduICogSW5maW5pdHk7XG4gIHJldHVybiAkc2lnbiAqIHJlc3VsdDtcbn07XG4iLCIvLyAyMC4yLjIuMjAgTWF0aC5sb2cxcCh4KVxubW9kdWxlLmV4cG9ydHMgPSBNYXRoLmxvZzFwIHx8IGZ1bmN0aW9uIGxvZzFwKHgpIHtcbiAgcmV0dXJuICh4ID0gK3gpID4gLTFlLTggJiYgeCA8IDFlLTggPyB4IC0geCAqIHggLyAyIDogTWF0aC5sb2coMSArIHgpO1xufTtcbiIsIi8vIDIwLjIuMi4yOCBNYXRoLnNpZ24oeClcbm1vZHVsZS5leHBvcnRzID0gTWF0aC5zaWduIHx8IGZ1bmN0aW9uIHNpZ24oeCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gIHJldHVybiAoeCA9ICt4KSA9PSAwIHx8IHggIT0geCA/IHggOiB4IDwgMCA/IC0xIDogMTtcbn07XG4iLCJ2YXIgTUVUQSA9IHJlcXVpcmUoJy4vX3VpZCcpKCdtZXRhJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBzZXREZXNjID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBpZCA9IDA7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZSB8fCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0cnVlO1xufTtcbnZhciBGUkVFWkUgPSAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBpc0V4dGVuc2libGUoT2JqZWN0LnByZXZlbnRFeHRlbnNpb25zKHt9KSk7XG59KTtcbnZhciBzZXRNZXRhID0gZnVuY3Rpb24gKGl0KSB7XG4gIHNldERlc2MoaXQsIE1FVEEsIHsgdmFsdWU6IHtcbiAgICBpOiAnTycgKyArK2lkLCAvLyBvYmplY3QgSURcbiAgICB3OiB7fSAgICAgICAgICAvLyB3ZWFrIGNvbGxlY3Rpb25zIElEc1xuICB9IH0pO1xufTtcbnZhciBmYXN0S2V5ID0gZnVuY3Rpb24gKGl0LCBjcmVhdGUpIHtcbiAgLy8gcmV0dXJuIHByaW1pdGl2ZSB3aXRoIHByZWZpeFxuICBpZiAoIWlzT2JqZWN0KGl0KSkgcmV0dXJuIHR5cGVvZiBpdCA9PSAnc3ltYm9sJyA/IGl0IDogKHR5cGVvZiBpdCA9PSAnc3RyaW5nJyA/ICdTJyA6ICdQJykgKyBpdDtcbiAgaWYgKCFoYXMoaXQsIE1FVEEpKSB7XG4gICAgLy8gY2FuJ3Qgc2V0IG1ldGFkYXRhIHRvIHVuY2F1Z2h0IGZyb3plbiBvYmplY3RcbiAgICBpZiAoIWlzRXh0ZW5zaWJsZShpdCkpIHJldHVybiAnRic7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZiAoIWNyZWF0ZSkgcmV0dXJuICdFJztcbiAgICAvLyBhZGQgbWlzc2luZyBtZXRhZGF0YVxuICAgIHNldE1ldGEoaXQpO1xuICAvLyByZXR1cm4gb2JqZWN0IElEXG4gIH0gcmV0dXJuIGl0W01FVEFdLmk7XG59O1xudmFyIGdldFdlYWsgPSBmdW5jdGlvbiAoaXQsIGNyZWF0ZSkge1xuICBpZiAoIWhhcyhpdCwgTUVUQSkpIHtcbiAgICAvLyBjYW4ndCBzZXQgbWV0YWRhdGEgdG8gdW5jYXVnaHQgZnJvemVuIG9iamVjdFxuICAgIGlmICghaXNFeHRlbnNpYmxlKGl0KSkgcmV0dXJuIHRydWU7XG4gICAgLy8gbm90IG5lY2Vzc2FyeSB0byBhZGQgbWV0YWRhdGFcbiAgICBpZiAoIWNyZWF0ZSkgcmV0dXJuIGZhbHNlO1xuICAgIC8vIGFkZCBtaXNzaW5nIG1ldGFkYXRhXG4gICAgc2V0TWV0YShpdCk7XG4gIC8vIHJldHVybiBoYXNoIHdlYWsgY29sbGVjdGlvbnMgSURzXG4gIH0gcmV0dXJuIGl0W01FVEFdLnc7XG59O1xuLy8gYWRkIG1ldGFkYXRhIG9uIGZyZWV6ZS1mYW1pbHkgbWV0aG9kcyBjYWxsaW5nXG52YXIgb25GcmVlemUgPSBmdW5jdGlvbiAoaXQpIHtcbiAgaWYgKEZSRUVaRSAmJiBtZXRhLk5FRUQgJiYgaXNFeHRlbnNpYmxlKGl0KSAmJiAhaGFzKGl0LCBNRVRBKSkgc2V0TWV0YShpdCk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgbWV0YSA9IG1vZHVsZS5leHBvcnRzID0ge1xuICBLRVk6IE1FVEEsXG4gIE5FRUQ6IGZhbHNlLFxuICBmYXN0S2V5OiBmYXN0S2V5LFxuICBnZXRXZWFrOiBnZXRXZWFrLFxuICBvbkZyZWV6ZTogb25GcmVlemVcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbWFjcm90YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBPYnNlcnZlciA9IGdsb2JhbC5NdXRhdGlvbk9ic2VydmVyIHx8IGdsb2JhbC5XZWJLaXRNdXRhdGlvbk9ic2VydmVyO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciBQcm9taXNlID0gZ2xvYmFsLlByb21pc2U7XG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9fY29mJykocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGhlYWQsIGxhc3QsIG5vdGlmeTtcblxuICB2YXIgZmx1c2ggPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHBhcmVudCwgZm47XG4gICAgaWYgKGlzTm9kZSAmJiAocGFyZW50ID0gcHJvY2Vzcy5kb21haW4pKSBwYXJlbnQuZXhpdCgpO1xuICAgIHdoaWxlIChoZWFkKSB7XG4gICAgICBmbiA9IGhlYWQuZm47XG4gICAgICBoZWFkID0gaGVhZC5uZXh0O1xuICAgICAgdHJ5IHtcbiAgICAgICAgZm4oKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGhlYWQpIG5vdGlmeSgpO1xuICAgICAgICBlbHNlIGxhc3QgPSB1bmRlZmluZWQ7XG4gICAgICAgIHRocm93IGU7XG4gICAgICB9XG4gICAgfSBsYXN0ID0gdW5kZWZpbmVkO1xuICAgIGlmIChwYXJlbnQpIHBhcmVudC5lbnRlcigpO1xuICB9O1xuXG4gIC8vIE5vZGUuanNcbiAgaWYgKGlzTm9kZSkge1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHByb2Nlc3MubmV4dFRpY2soZmx1c2gpO1xuICAgIH07XG4gIC8vIGJyb3dzZXJzIHdpdGggTXV0YXRpb25PYnNlcnZlciwgZXhjZXB0IGlPUyBTYWZhcmkgLSBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMzM5XG4gIH0gZWxzZSBpZiAoT2JzZXJ2ZXIgJiYgIShnbG9iYWwubmF2aWdhdG9yICYmIGdsb2JhbC5uYXZpZ2F0b3Iuc3RhbmRhbG9uZSkpIHtcbiAgICB2YXIgdG9nZ2xlID0gdHJ1ZTtcbiAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKCcnKTtcbiAgICBuZXcgT2JzZXJ2ZXIoZmx1c2gpLm9ic2VydmUobm9kZSwgeyBjaGFyYWN0ZXJEYXRhOiB0cnVlIH0pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIG5vdGlmeSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIG5vZGUuZGF0YSA9IHRvZ2dsZSA9ICF0b2dnbGU7XG4gICAgfTtcbiAgLy8gZW52aXJvbm1lbnRzIHdpdGggbWF5YmUgbm9uLWNvbXBsZXRlbHkgY29ycmVjdCwgYnV0IGV4aXN0ZW50IFByb21pc2VcbiAgfSBlbHNlIGlmIChQcm9taXNlICYmIFByb21pc2UucmVzb2x2ZSkge1xuICAgIC8vIFByb21pc2UucmVzb2x2ZSB3aXRob3V0IGFuIGFyZ3VtZW50IHRocm93cyBhbiBlcnJvciBpbiBMRyBXZWJPUyAyXG4gICAgdmFyIHByb21pc2UgPSBQcm9taXNlLnJlc29sdmUodW5kZWZpbmVkKTtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICBwcm9taXNlLnRoZW4oZmx1c2gpO1xuICAgIH07XG4gIC8vIGZvciBvdGhlciBlbnZpcm9ubWVudHMgLSBtYWNyb3Rhc2sgYmFzZWQgb246XG4gIC8vIC0gc2V0SW1tZWRpYXRlXG4gIC8vIC0gTWVzc2FnZUNoYW5uZWxcbiAgLy8gLSB3aW5kb3cucG9zdE1lc3NhZ1xuICAvLyAtIG9ucmVhZHlzdGF0ZWNoYW5nZVxuICAvLyAtIHNldFRpbWVvdXRcbiAgfSBlbHNlIHtcbiAgICBub3RpZnkgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBzdHJhbmdlIElFICsgd2VicGFjayBkZXYgc2VydmVyIGJ1ZyAtIHVzZSAuY2FsbChnbG9iYWwpXG4gICAgICBtYWNyb3Rhc2suY2FsbChnbG9iYWwsIGZsdXNoKTtcbiAgICB9O1xuICB9XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIChmbikge1xuICAgIHZhciB0YXNrID0geyBmbjogZm4sIG5leHQ6IHVuZGVmaW5lZCB9O1xuICAgIGlmIChsYXN0KSBsYXN0Lm5leHQgPSB0YXNrO1xuICAgIGlmICghaGVhZCkge1xuICAgICAgaGVhZCA9IHRhc2s7XG4gICAgICBub3RpZnkoKTtcbiAgICB9IGxhc3QgPSB0YXNrO1xuICB9O1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDI1LjQuMS41IE5ld1Byb21pc2VDYXBhYmlsaXR5KEMpXG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xuXG5mdW5jdGlvbiBQcm9taXNlQ2FwYWJpbGl0eShDKSB7XG4gIHZhciByZXNvbHZlLCByZWplY3Q7XG4gIHRoaXMucHJvbWlzZSA9IG5ldyBDKGZ1bmN0aW9uICgkJHJlc29sdmUsICQkcmVqZWN0KSB7XG4gICAgaWYgKHJlc29sdmUgIT09IHVuZGVmaW5lZCB8fCByZWplY3QgIT09IHVuZGVmaW5lZCkgdGhyb3cgVHlwZUVycm9yKCdCYWQgUHJvbWlzZSBjb25zdHJ1Y3RvcicpO1xuICAgIHJlc29sdmUgPSAkJHJlc29sdmU7XG4gICAgcmVqZWN0ID0gJCRyZWplY3Q7XG4gIH0pO1xuICB0aGlzLnJlc29sdmUgPSBhRnVuY3Rpb24ocmVzb2x2ZSk7XG4gIHRoaXMucmVqZWN0ID0gYUZ1bmN0aW9uKHJlamVjdCk7XG59XG5cbm1vZHVsZS5leHBvcnRzLmYgPSBmdW5jdGlvbiAoQykge1xuICByZXR1cm4gbmV3IFByb21pc2VDYXBhYmlsaXR5KEMpO1xufTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDE5LjEuMi4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UsIC4uLilcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgZ09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgcElFID0gcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgSU9iamVjdCA9IHJlcXVpcmUoJy4vX2lvYmplY3QnKTtcbnZhciAkYXNzaWduID0gT2JqZWN0LmFzc2lnbjtcblxuLy8gc2hvdWxkIHdvcmsgd2l0aCBzeW1ib2xzIGFuZCBzaG91bGQgaGF2ZSBkZXRlcm1pbmlzdGljIHByb3BlcnR5IG9yZGVyIChWOCBidWcpXG5tb2R1bGUuZXhwb3J0cyA9ICEkYXNzaWduIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICB2YXIgQSA9IHt9O1xuICB2YXIgQiA9IHt9O1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIFMgPSBTeW1ib2woKTtcbiAgdmFyIEsgPSAnYWJjZGVmZ2hpamtsbW5vcHFyc3QnO1xuICBBW1NdID0gNztcbiAgSy5zcGxpdCgnJykuZm9yRWFjaChmdW5jdGlvbiAoaykgeyBCW2tdID0gazsgfSk7XG4gIHJldHVybiAkYXNzaWduKHt9LCBBKVtTXSAhPSA3IHx8IE9iamVjdC5rZXlzKCRhc3NpZ24oe30sIEIpKS5qb2luKCcnKSAhPSBLO1xufSkgPyBmdW5jdGlvbiBhc3NpZ24odGFyZ2V0LCBzb3VyY2UpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgVCA9IHRvT2JqZWN0KHRhcmdldCk7XG4gIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgdmFyIGluZGV4ID0gMTtcbiAgdmFyIGdldFN5bWJvbHMgPSBnT1BTLmY7XG4gIHZhciBpc0VudW0gPSBwSUUuZjtcbiAgd2hpbGUgKGFMZW4gPiBpbmRleCkge1xuICAgIHZhciBTID0gSU9iamVjdChhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHZhciBrZXlzID0gZ2V0U3ltYm9scyA/IGdldEtleXMoUykuY29uY2F0KGdldFN5bWJvbHMoUykpIDogZ2V0S2V5cyhTKTtcbiAgICB2YXIgbGVuZ3RoID0ga2V5cy5sZW5ndGg7XG4gICAgdmFyIGogPSAwO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGopIHtcbiAgICAgIGtleSA9IGtleXNbaisrXTtcbiAgICAgIGlmICghREVTQ1JJUFRPUlMgfHwgaXNFbnVtLmNhbGwoUywga2V5KSkgVFtrZXldID0gU1trZXldO1xuICAgIH1cbiAgfSByZXR1cm4gVDtcbn0gOiAkYXNzaWduO1xuIiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBkUHMgPSByZXF1aXJlKCcuL19vYmplY3QtZHBzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgRW1wdHkgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdpZnJhbWUnKTtcbiAgdmFyIGkgPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHZhciBsdCA9ICc8JztcbiAgdmFyIGd0ID0gJz4nO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICByZXF1aXJlKCcuL19odG1sJykuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lLnNyYyA9ICdqYXZhc2NyaXB0Oic7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2NyaXB0LXVybFxuICAvLyBjcmVhdGVEaWN0ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuT2JqZWN0O1xuICAvLyBodG1sLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUobHQgKyAnc2NyaXB0JyArIGd0ICsgJ2RvY3VtZW50LkY9T2JqZWN0JyArIGx0ICsgJy9zY3JpcHQnICsgZ3QpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICBjcmVhdGVEaWN0ID0gaWZyYW1lRG9jdW1lbnQuRjtcbiAgd2hpbGUgKGktLSkgZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5KCk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZFAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyA9IGdldEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgUDtcbiAgd2hpbGUgKGxlbmd0aCA+IGkpIGRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcbiIsInZhciBwSUUgPSByZXF1aXJlKCcuL19vYmplY3QtcGllJyk7XG52YXIgY3JlYXRlRGVzYyA9IHJlcXVpcmUoJy4vX3Byb3BlcnR5LWRlc2MnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBJRThfRE9NX0RFRklORSA9IHJlcXVpcmUoJy4vX2llOC1kb20tZGVmaW5lJyk7XG52YXIgZ09QRCA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBnT1BEIDogZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKE8sIFApIHtcbiAgTyA9IHRvSU9iamVjdChPKTtcbiAgUCA9IHRvUHJpbWl0aXZlKFAsIHRydWUpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGdPUEQoTywgUCk7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxuICBpZiAoaGFzKE8sIFApKSByZXR1cm4gY3JlYXRlRGVzYyghcElFLmYuY2FsbChPLCBQKSwgT1tQXSk7XG59O1xuIiwiLy8gZmFsbGJhY2sgZm9yIElFMTEgYnVnZ3kgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMgd2l0aCBpZnJhbWUgYW5kIHdpbmRvd1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIHRvU3RyaW5nID0ge30udG9TdHJpbmc7XG5cbnZhciB3aW5kb3dOYW1lcyA9IHR5cGVvZiB3aW5kb3cgPT0gJ29iamVjdCcgJiYgd2luZG93ICYmIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzXG4gID8gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMod2luZG93KSA6IFtdO1xuXG52YXIgZ2V0V2luZG93TmFtZXMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gZ09QTihpdCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gd2luZG93TmFtZXMuc2xpY2UoKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMuZiA9IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoaXQpIHtcbiAgcmV0dXJuIHdpbmRvd05hbWVzICYmIHRvU3RyaW5nLmNhbGwoaXQpID09ICdbb2JqZWN0IFdpbmRvd10nID8gZ2V0V2luZG93TmFtZXMoaXQpIDogZ09QTih0b0lPYmplY3QoaXQpKTtcbn07XG4iLCIvLyAxOS4xLjIuNyAvIDE1LjIuMy40IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cy1pbnRlcm5hbCcpO1xudmFyIGhpZGRlbktleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJykuY29uY2F0KCdsZW5ndGgnLCAncHJvdG90eXBlJyk7XG5cbmV4cG9ydHMuZiA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzIHx8IGZ1bmN0aW9uIGdldE93blByb3BlcnR5TmFtZXMoTykge1xuICByZXR1cm4gJGtleXMoTywgaGlkZGVuS2V5cyk7XG59O1xuIiwiZXhwb3J0cy5mID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scztcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwidmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lcykge1xuICB2YXIgTyA9IHRvSU9iamVjdChvYmplY3QpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gTykgaWYgKGtleSAhPSBJRV9QUk9UTykgaGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIvLyAxOS4xLjIuMTQgLyAxNS4yLjMuMTQgT2JqZWN0LmtleXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuIiwiZXhwb3J0cy5mID0ge30ucHJvcGVydHlJc0VudW1lcmFibGU7XG4iLCIvLyBtb3N0IE9iamVjdCBtZXRob2RzIGJ5IEVTNiBzaG91bGQgYWNjZXB0IHByaW1pdGl2ZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIGV4ZWMpIHtcbiAgdmFyIGZuID0gKGNvcmUuT2JqZWN0IHx8IHt9KVtLRVldIHx8IE9iamVjdFtLRVldO1xuICB2YXIgZXhwID0ge307XG4gIGV4cFtLRVldID0gZXhlYyhmbik7XG4gICRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkgeyBmbigxKTsgfSksICdPYmplY3QnLCBleHApO1xufTtcbiIsInZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGlzRW51bSA9IHJlcXVpcmUoJy4vX29iamVjdC1waWUnKS5mO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXNFbnRyaWVzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoaXQpIHtcbiAgICB2YXIgTyA9IHRvSU9iamVjdChpdCk7XG4gICAgdmFyIGtleXMgPSBnZXRLZXlzKE8pO1xuICAgIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBrZXk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGkpIHtcbiAgICAgIGtleSA9IGtleXNbaSsrXTtcbiAgICAgIGlmICghREVTQ1JJUFRPUlMgfHwgaXNFbnVtLmNhbGwoTywga2V5KSkge1xuICAgICAgICByZXN1bHQucHVzaChpc0VudHJpZXMgPyBba2V5LCBPW2tleV1dIDogT1trZXldKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfTtcbn07XG4iLCIvLyBhbGwgb2JqZWN0IGtleXMsIGluY2x1ZGVzIG5vbi1lbnVtZXJhYmxlIGFuZCBzeW1ib2xzXG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJyk7XG52YXIgZ09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBSZWZsZWN0ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdDtcbm1vZHVsZS5leHBvcnRzID0gUmVmbGVjdCAmJiBSZWZsZWN0Lm93bktleXMgfHwgZnVuY3Rpb24gb3duS2V5cyhpdCkge1xuICB2YXIga2V5cyA9IGdPUE4uZihhbk9iamVjdChpdCkpO1xuICB2YXIgZ2V0U3ltYm9scyA9IGdPUFMuZjtcbiAgcmV0dXJuIGdldFN5bWJvbHMgPyBrZXlzLmNvbmNhdChnZXRTeW1ib2xzKGl0KSkgOiBrZXlzO1xufTtcbiIsInZhciAkcGFyc2VGbG9hdCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLnBhcnNlRmxvYXQ7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG5cbm1vZHVsZS5leHBvcnRzID0gMSAvICRwYXJzZUZsb2F0KHJlcXVpcmUoJy4vX3N0cmluZy13cycpICsgJy0wJykgIT09IC1JbmZpbml0eSA/IGZ1bmN0aW9uIHBhcnNlRmxvYXQoc3RyKSB7XG4gIHZhciBzdHJpbmcgPSAkdHJpbShTdHJpbmcoc3RyKSwgMyk7XG4gIHZhciByZXN1bHQgPSAkcGFyc2VGbG9hdChzdHJpbmcpO1xuICByZXR1cm4gcmVzdWx0ID09PSAwICYmIHN0cmluZy5jaGFyQXQoMCkgPT0gJy0nID8gLTAgOiByZXN1bHQ7XG59IDogJHBhcnNlRmxvYXQ7XG4iLCJ2YXIgJHBhcnNlSW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykucGFyc2VJbnQ7XG52YXIgJHRyaW0gPSByZXF1aXJlKCcuL19zdHJpbmctdHJpbScpLnRyaW07XG52YXIgd3MgPSByZXF1aXJlKCcuL19zdHJpbmctd3MnKTtcbnZhciBoZXggPSAvXlstK10/MFt4WF0vO1xuXG5tb2R1bGUuZXhwb3J0cyA9ICRwYXJzZUludCh3cyArICcwOCcpICE9PSA4IHx8ICRwYXJzZUludCh3cyArICcweDE2JykgIT09IDIyID8gZnVuY3Rpb24gcGFyc2VJbnQoc3RyLCByYWRpeCkge1xuICB2YXIgc3RyaW5nID0gJHRyaW0oU3RyaW5nKHN0ciksIDMpO1xuICByZXR1cm4gJHBhcnNlSW50KHN0cmluZywgKHJhZGl4ID4+PiAwKSB8fCAoaGV4LnRlc3Qoc3RyaW5nKSA/IDE2IDogMTApKTtcbn0gOiAkcGFyc2VJbnQ7XG4iLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChleGVjKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIHsgZTogZmFsc2UsIHY6IGV4ZWMoKSB9O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIHsgZTogdHJ1ZSwgdjogZSB9O1xuICB9XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBuZXdQcm9taXNlQ2FwYWJpbGl0eSA9IHJlcXVpcmUoJy4vX25ldy1wcm9taXNlLWNhcGFiaWxpdHknKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQywgeCkge1xuICBhbk9iamVjdChDKTtcbiAgaWYgKGlzT2JqZWN0KHgpICYmIHguY29uc3RydWN0b3IgPT09IEMpIHJldHVybiB4O1xuICB2YXIgcHJvbWlzZUNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eS5mKEMpO1xuICB2YXIgcmVzb2x2ZSA9IHByb21pc2VDYXBhYmlsaXR5LnJlc29sdmU7XG4gIHJlc29sdmUoeCk7XG4gIHJldHVybiBwcm9taXNlQ2FwYWJpbGl0eS5wcm9taXNlO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGJpdG1hcCwgdmFsdWUpIHtcbiAgcmV0dXJuIHtcbiAgICBlbnVtZXJhYmxlOiAhKGJpdG1hcCAmIDEpLFxuICAgIGNvbmZpZ3VyYWJsZTogIShiaXRtYXAgJiAyKSxcbiAgICB3cml0YWJsZTogIShiaXRtYXAgJiA0KSxcbiAgICB2YWx1ZTogdmFsdWVcbiAgfTtcbn07XG4iLCJ2YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodGFyZ2V0LCBzcmMsIHNhZmUpIHtcbiAgZm9yICh2YXIga2V5IGluIHNyYykgcmVkZWZpbmUodGFyZ2V0LCBrZXksIHNyY1trZXldLCBzYWZlKTtcbiAgcmV0dXJuIHRhcmdldDtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBTUkMgPSByZXF1aXJlKCcuL191aWQnKSgnc3JjJyk7XG52YXIgJHRvU3RyaW5nID0gcmVxdWlyZSgnLi9fZnVuY3Rpb24tdG8tc3RyaW5nJyk7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciBUUEwgPSAoJycgKyAkdG9TdHJpbmcpLnNwbGl0KFRPX1NUUklORyk7XG5cbnJlcXVpcmUoJy4vX2NvcmUnKS5pbnNwZWN0U291cmNlID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiAkdG9TdHJpbmcuY2FsbChpdCk7XG59O1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoTywga2V5LCB2YWwsIHNhZmUpIHtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2YgdmFsID09ICdmdW5jdGlvbic7XG4gIGlmIChpc0Z1bmN0aW9uKSBoYXModmFsLCAnbmFtZScpIHx8IGhpZGUodmFsLCAnbmFtZScsIGtleSk7XG4gIGlmIChPW2tleV0gPT09IHZhbCkgcmV0dXJuO1xuICBpZiAoaXNGdW5jdGlvbikgaGFzKHZhbCwgU1JDKSB8fCBoaWRlKHZhbCwgU1JDLCBPW2tleV0gPyAnJyArIE9ba2V5XSA6IFRQTC5qb2luKFN0cmluZyhrZXkpKSk7XG4gIGlmIChPID09PSBnbG9iYWwpIHtcbiAgICBPW2tleV0gPSB2YWw7XG4gIH0gZWxzZSBpZiAoIXNhZmUpIHtcbiAgICBkZWxldGUgT1trZXldO1xuICAgIGhpZGUoTywga2V5LCB2YWwpO1xuICB9IGVsc2UgaWYgKE9ba2V5XSkge1xuICAgIE9ba2V5XSA9IHZhbDtcbiAgfSBlbHNlIHtcbiAgICBoaWRlKE8sIGtleSwgdmFsKTtcbiAgfVxuLy8gYWRkIGZha2UgRnVuY3Rpb24jdG9TdHJpbmcgZm9yIGNvcnJlY3Qgd29yayB3cmFwcGVkIG1ldGhvZHMgLyBjb25zdHJ1Y3RvcnMgd2l0aCBtZXRob2RzIGxpa2UgTG9EYXNoIGlzTmF0aXZlXG59KShGdW5jdGlvbi5wcm90b3R5cGUsIFRPX1NUUklORywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gIHJldHVybiB0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nICYmIHRoaXNbU1JDXSB8fCAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBidWlsdGluRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcblxuIC8vIGBSZWdFeHBFeGVjYCBhYnN0cmFjdCBvcGVyYXRpb25cbi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cGV4ZWNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFIsIFMpIHtcbiAgdmFyIGV4ZWMgPSBSLmV4ZWM7XG4gIGlmICh0eXBlb2YgZXhlYyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhciByZXN1bHQgPSBleGVjLmNhbGwoUiwgUyk7XG4gICAgaWYgKHR5cGVvZiByZXN1bHQgIT09ICdvYmplY3QnKSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAgZXhlYyBtZXRob2QgcmV0dXJuZWQgc29tZXRoaW5nIG90aGVyIHRoYW4gYW4gT2JqZWN0IG9yIG51bGwnKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuICBpZiAoY2xhc3NvZihSKSAhPT0gJ1JlZ0V4cCcpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdSZWdFeHAjZXhlYyBjYWxsZWQgb24gaW5jb21wYXRpYmxlIHJlY2VpdmVyJyk7XG4gIH1cbiAgcmV0dXJuIGJ1aWx0aW5FeGVjLmNhbGwoUiwgUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgcmVnZXhwRmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xuXG52YXIgbmF0aXZlRXhlYyA9IFJlZ0V4cC5wcm90b3R5cGUuZXhlYztcbi8vIFRoaXMgYWx3YXlzIHJlZmVycyB0byB0aGUgbmF0aXZlIGltcGxlbWVudGF0aW9uLCBiZWNhdXNlIHRoZVxuLy8gU3RyaW5nI3JlcGxhY2UgcG9seWZpbGwgdXNlcyAuL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMuanMsXG4vLyB3aGljaCBsb2FkcyB0aGlzIGZpbGUgYmVmb3JlIHBhdGNoaW5nIHRoZSBtZXRob2QuXG52YXIgbmF0aXZlUmVwbGFjZSA9IFN0cmluZy5wcm90b3R5cGUucmVwbGFjZTtcblxudmFyIHBhdGNoZWRFeGVjID0gbmF0aXZlRXhlYztcblxudmFyIExBU1RfSU5ERVggPSAnbGFzdEluZGV4JztcblxudmFyIFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORyA9IChmdW5jdGlvbiAoKSB7XG4gIHZhciByZTEgPSAvYS8sXG4gICAgICByZTIgPSAvYiovZztcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMSwgJ2EnKTtcbiAgbmF0aXZlRXhlYy5jYWxsKHJlMiwgJ2EnKTtcbiAgcmV0dXJuIHJlMVtMQVNUX0lOREVYXSAhPT0gMCB8fCByZTJbTEFTVF9JTkRFWF0gIT09IDA7XG59KSgpO1xuXG4vLyBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cCwgY29waWVkIGZyb20gZXM1LXNoaW0ncyBTdHJpbmcjc3BsaXQgcGF0Y2guXG52YXIgTlBDR19JTkNMVURFRCA9IC8oKT8/Ly5leGVjKCcnKVsxXSAhPT0gdW5kZWZpbmVkO1xuXG52YXIgUEFUQ0ggPSBVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgfHwgTlBDR19JTkNMVURFRDtcblxuaWYgKFBBVENIKSB7XG4gIHBhdGNoZWRFeGVjID0gZnVuY3Rpb24gZXhlYyhzdHIpIHtcbiAgICB2YXIgcmUgPSB0aGlzO1xuICAgIHZhciBsYXN0SW5kZXgsIHJlQ29weSwgbWF0Y2gsIGk7XG5cbiAgICBpZiAoTlBDR19JTkNMVURFRCkge1xuICAgICAgcmVDb3B5ID0gbmV3IFJlZ0V4cCgnXicgKyByZS5zb3VyY2UgKyAnJCg/IVxcXFxzKScsIHJlZ2V4cEZsYWdzLmNhbGwocmUpKTtcbiAgICB9XG4gICAgaWYgKFVQREFURVNfTEFTVF9JTkRFWF9XUk9ORykgbGFzdEluZGV4ID0gcmVbTEFTVF9JTkRFWF07XG5cbiAgICBtYXRjaCA9IG5hdGl2ZUV4ZWMuY2FsbChyZSwgc3RyKTtcblxuICAgIGlmIChVUERBVEVTX0xBU1RfSU5ERVhfV1JPTkcgJiYgbWF0Y2gpIHtcbiAgICAgIHJlW0xBU1RfSU5ERVhdID0gcmUuZ2xvYmFsID8gbWF0Y2guaW5kZXggKyBtYXRjaFswXS5sZW5ndGggOiBsYXN0SW5kZXg7XG4gICAgfVxuICAgIGlmIChOUENHX0lOQ0xVREVEICYmIG1hdGNoICYmIG1hdGNoLmxlbmd0aCA+IDEpIHtcbiAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCBjb25zaXN0ZW50bHkgcmV0dXJuIGB1bmRlZmluZWRgXG4gICAgICAvLyBmb3IgTlBDRywgbGlrZSBJRTguIE5PVEU6IFRoaXMgZG9lc24nIHdvcmsgZm9yIC8oLj8pPy9cbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb29wLWZ1bmNcbiAgICAgIG5hdGl2ZVJlcGxhY2UuY2FsbChtYXRjaFswXSwgcmVDb3B5LCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGZvciAoaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMjsgaSsrKSB7XG4gICAgICAgICAgaWYgKGFyZ3VtZW50c1tpXSA9PT0gdW5kZWZpbmVkKSBtYXRjaFtpXSA9IHVuZGVmaW5lZDtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hdGNoO1xuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHBhdGNoZWRFeGVjO1xuIiwiLy8gNy4yLjkgU2FtZVZhbHVlKHgsIHkpXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5pcyB8fCBmdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgcmV0dXJuIHggPT09IHkgPyB4ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geSA6IHggIT0geCAmJiB5ICE9IHk7XG59O1xuIiwiLy8gV29ya3Mgd2l0aCBfX3Byb3RvX18gb25seS4gT2xkIHY4IGNhbid0IHdvcmsgd2l0aCBudWxsIHByb3RvIG9iamVjdHMuXG4vKiBlc2xpbnQtZGlzYWJsZSBuby1wcm90byAqL1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBjaGVjayA9IGZ1bmN0aW9uIChPLCBwcm90bykge1xuICBhbk9iamVjdChPKTtcbiAgaWYgKCFpc09iamVjdChwcm90bykgJiYgcHJvdG8gIT09IG51bGwpIHRocm93IFR5cGVFcnJvcihwcm90byArIFwiOiBjYW4ndCBzZXQgYXMgcHJvdG90eXBlIVwiKTtcbn07XG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgc2V0OiBPYmplY3Quc2V0UHJvdG90eXBlT2YgfHwgKCdfX3Byb3RvX18nIGluIHt9ID8gLy8gZXNsaW50LWRpc2FibGUtbGluZVxuICAgIGZ1bmN0aW9uICh0ZXN0LCBidWdneSwgc2V0KSB7XG4gICAgICB0cnkge1xuICAgICAgICBzZXQgPSByZXF1aXJlKCcuL19jdHgnKShGdW5jdGlvbi5jYWxsLCByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmYoT2JqZWN0LnByb3RvdHlwZSwgJ19fcHJvdG9fXycpLnNldCwgMik7XG4gICAgICAgIHNldCh0ZXN0LCBbXSk7XG4gICAgICAgIGJ1Z2d5ID0gISh0ZXN0IGluc3RhbmNlb2YgQXJyYXkpO1xuICAgICAgfSBjYXRjaCAoZSkgeyBidWdneSA9IHRydWU7IH1cbiAgICAgIHJldHVybiBmdW5jdGlvbiBzZXRQcm90b3R5cGVPZihPLCBwcm90bykge1xuICAgICAgICBjaGVjayhPLCBwcm90byk7XG4gICAgICAgIGlmIChidWdneSkgTy5fX3Byb3RvX18gPSBwcm90bztcbiAgICAgICAgZWxzZSBzZXQoTywgcHJvdG8pO1xuICAgICAgICByZXR1cm4gTztcbiAgICAgIH07XG4gICAgfSh7fSwgZmFsc2UpIDogdW5kZWZpbmVkKSxcbiAgY2hlY2s6IGNoZWNrXG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgREVTQ1JJUFRPUlMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpO1xudmFyIFNQRUNJRVMgPSByZXF1aXJlKCcuL193a3MnKSgnc3BlY2llcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVkpIHtcbiAgdmFyIEMgPSBnbG9iYWxbS0VZXTtcbiAgaWYgKERFU0NSSVBUT1JTICYmIEMgJiYgIUNbU1BFQ0lFU10pIGRQLmYoQywgU1BFQ0lFUywge1xuICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH1cbiAgfSk7XG59O1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAyMCBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwiLy8gNy4zLjIwIFNwZWNpZXNDb25zdHJ1Y3RvcihPLCBkZWZhdWx0Q29uc3RydWN0b3IpXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgU1BFQ0lFUyA9IHJlcXVpcmUoJy4vX3drcycpKCdzcGVjaWVzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChPLCBEKSB7XG4gIHZhciBDID0gYW5PYmplY3QoTykuY29uc3RydWN0b3I7XG4gIHZhciBTO1xuICByZXR1cm4gQyA9PT0gdW5kZWZpbmVkIHx8IChTID0gYW5PYmplY3QoQylbU1BFQ0lFU10pID09IHVuZGVmaW5lZCA/IEQgOiBhRnVuY3Rpb24oUyk7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobWV0aG9kLCBhcmcpIHtcbiAgcmV0dXJuICEhbWV0aG9kICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1jYWxsXG4gICAgYXJnID8gbWV0aG9kLmNhbGwobnVsbCwgZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9LCAxKSA6IG1ldGhvZC5jYWxsKG51bGwpO1xuICB9KTtcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG4vLyB0cnVlICAtPiBTdHJpbmcjYXRcbi8vIGZhbHNlIC0+IFN0cmluZyNjb2RlUG9pbnRBdFxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoVE9fU1RSSU5HKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodGhhdCwgcG9zKSB7XG4gICAgdmFyIHMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gICAgdmFyIGkgPSB0b0ludGVnZXIocG9zKTtcbiAgICB2YXIgbCA9IHMubGVuZ3RoO1xuICAgIHZhciBhLCBiO1xuICAgIGlmIChpIDwgMCB8fCBpID49IGwpIHJldHVybiBUT19TVFJJTkcgPyAnJyA6IHVuZGVmaW5lZDtcbiAgICBhID0gcy5jaGFyQ29kZUF0KGkpO1xuICAgIHJldHVybiBhIDwgMHhkODAwIHx8IGEgPiAweGRiZmYgfHwgaSArIDEgPT09IGwgfHwgKGIgPSBzLmNoYXJDb2RlQXQoaSArIDEpKSA8IDB4ZGMwMCB8fCBiID4gMHhkZmZmXG4gICAgICA/IFRPX1NUUklORyA/IHMuY2hhckF0KGkpIDogYVxuICAgICAgOiBUT19TVFJJTkcgPyBzLnNsaWNlKGksIGkgKyAyKSA6IChhIC0gMHhkODAwIDw8IDEwKSArIChiIC0gMHhkYzAwKSArIDB4MTAwMDA7XG4gIH07XG59O1xuIiwiLy8gaGVscGVyIGZvciBTdHJpbmcje3N0YXJ0c1dpdGgsIGVuZHNXaXRoLCBpbmNsdWRlc31cbnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4vX2lzLXJlZ2V4cCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHRoYXQsIHNlYXJjaFN0cmluZywgTkFNRSkge1xuICBpZiAoaXNSZWdFeHAoc2VhcmNoU3RyaW5nKSkgdGhyb3cgVHlwZUVycm9yKCdTdHJpbmcjJyArIE5BTUUgKyBcIiBkb2Vzbid0IGFjY2VwdCByZWdleCFcIik7XG4gIHJldHVybiBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG59O1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBxdW90ID0gL1wiL2c7XG4vLyBCLjIuMy4yLjEgQ3JlYXRlSFRNTChzdHJpbmcsIHRhZywgYXR0cmlidXRlLCB2YWx1ZSlcbnZhciBjcmVhdGVIVE1MID0gZnVuY3Rpb24gKHN0cmluZywgdGFnLCBhdHRyaWJ1dGUsIHZhbHVlKSB7XG4gIHZhciBTID0gU3RyaW5nKGRlZmluZWQoc3RyaW5nKSk7XG4gIHZhciBwMSA9ICc8JyArIHRhZztcbiAgaWYgKGF0dHJpYnV0ZSAhPT0gJycpIHAxICs9ICcgJyArIGF0dHJpYnV0ZSArICc9XCInICsgU3RyaW5nKHZhbHVlKS5yZXBsYWNlKHF1b3QsICcmcXVvdDsnKSArICdcIic7XG4gIHJldHVybiBwMSArICc+JyArIFMgKyAnPC8nICsgdGFnICsgJz4nO1xufTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKE5BTUUsIGV4ZWMpIHtcbiAgdmFyIE8gPSB7fTtcbiAgT1tOQU1FXSA9IGV4ZWMoY3JlYXRlSFRNTCk7XG4gICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHZhciB0ZXN0ID0gJydbTkFNRV0oJ1wiJyk7XG4gICAgcmV0dXJuIHRlc3QgIT09IHRlc3QudG9Mb3dlckNhc2UoKSB8fCB0ZXN0LnNwbGl0KCdcIicpLmxlbmd0aCA+IDM7XG4gIH0pLCAnU3RyaW5nJywgTyk7XG59O1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtc3RyaW5nLXBhZC1zdGFydC1lbmRcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIHJlcGVhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh0aGF0LCBtYXhMZW5ndGgsIGZpbGxTdHJpbmcsIGxlZnQpIHtcbiAgdmFyIFMgPSBTdHJpbmcoZGVmaW5lZCh0aGF0KSk7XG4gIHZhciBzdHJpbmdMZW5ndGggPSBTLmxlbmd0aDtcbiAgdmFyIGZpbGxTdHIgPSBmaWxsU3RyaW5nID09PSB1bmRlZmluZWQgPyAnICcgOiBTdHJpbmcoZmlsbFN0cmluZyk7XG4gIHZhciBpbnRNYXhMZW5ndGggPSB0b0xlbmd0aChtYXhMZW5ndGgpO1xuICBpZiAoaW50TWF4TGVuZ3RoIDw9IHN0cmluZ0xlbmd0aCB8fCBmaWxsU3RyID09ICcnKSByZXR1cm4gUztcbiAgdmFyIGZpbGxMZW4gPSBpbnRNYXhMZW5ndGggLSBzdHJpbmdMZW5ndGg7XG4gIHZhciBzdHJpbmdGaWxsZXIgPSByZXBlYXQuY2FsbChmaWxsU3RyLCBNYXRoLmNlaWwoZmlsbExlbiAvIGZpbGxTdHIubGVuZ3RoKSk7XG4gIGlmIChzdHJpbmdGaWxsZXIubGVuZ3RoID4gZmlsbExlbikgc3RyaW5nRmlsbGVyID0gc3RyaW5nRmlsbGVyLnNsaWNlKDAsIGZpbGxMZW4pO1xuICByZXR1cm4gbGVmdCA/IHN0cmluZ0ZpbGxlciArIFMgOiBTICsgc3RyaW5nRmlsbGVyO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiByZXBlYXQoY291bnQpIHtcbiAgdmFyIHN0ciA9IFN0cmluZyhkZWZpbmVkKHRoaXMpKTtcbiAgdmFyIHJlcyA9ICcnO1xuICB2YXIgbiA9IHRvSW50ZWdlcihjb3VudCk7XG4gIGlmIChuIDwgMCB8fCBuID09IEluZmluaXR5KSB0aHJvdyBSYW5nZUVycm9yKFwiQ291bnQgY2FuJ3QgYmUgbmVnYXRpdmVcIik7XG4gIGZvciAoO24gPiAwOyAobiA+Pj49IDEpICYmIChzdHIgKz0gc3RyKSkgaWYgKG4gJiAxKSByZXMgKz0gc3RyO1xuICByZXR1cm4gcmVzO1xufTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc3BhY2VzID0gcmVxdWlyZSgnLi9fc3RyaW5nLXdzJyk7XG52YXIgc3BhY2UgPSAnWycgKyBzcGFjZXMgKyAnXSc7XG52YXIgbm9uID0gJ1xcdTIwMGJcXHUwMDg1JztcbnZhciBsdHJpbSA9IFJlZ0V4cCgnXicgKyBzcGFjZSArIHNwYWNlICsgJyonKTtcbnZhciBydHJpbSA9IFJlZ0V4cChzcGFjZSArIHNwYWNlICsgJyokJyk7XG5cbnZhciBleHBvcnRlciA9IGZ1bmN0aW9uIChLRVksIGV4ZWMsIEFMSUFTKSB7XG4gIHZhciBleHAgPSB7fTtcbiAgdmFyIEZPUkNFID0gZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAhIXNwYWNlc1tLRVldKCkgfHwgbm9uW0tFWV0oKSAhPSBub247XG4gIH0pO1xuICB2YXIgZm4gPSBleHBbS0VZXSA9IEZPUkNFID8gZXhlYyh0cmltKSA6IHNwYWNlc1tLRVldO1xuICBpZiAoQUxJQVMpIGV4cFtBTElBU10gPSBmbjtcbiAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBGT1JDRSwgJ1N0cmluZycsIGV4cCk7XG59O1xuXG4vLyAxIC0+IFN0cmluZyN0cmltTGVmdFxuLy8gMiAtPiBTdHJpbmcjdHJpbVJpZ2h0XG4vLyAzIC0+IFN0cmluZyN0cmltXG52YXIgdHJpbSA9IGV4cG9ydGVyLnRyaW0gPSBmdW5jdGlvbiAoc3RyaW5nLCBUWVBFKSB7XG4gIHN0cmluZyA9IFN0cmluZyhkZWZpbmVkKHN0cmluZykpO1xuICBpZiAoVFlQRSAmIDEpIHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKGx0cmltLCAnJyk7XG4gIGlmIChUWVBFICYgMikgc3RyaW5nID0gc3RyaW5nLnJlcGxhY2UocnRyaW0sICcnKTtcbiAgcmV0dXJuIHN0cmluZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0ZXI7XG4iLCJtb2R1bGUuZXhwb3J0cyA9ICdcXHgwOVxceDBBXFx4MEJcXHgwQ1xceDBEXFx4MjBcXHhBMFxcdTE2ODBcXHUxODBFXFx1MjAwMFxcdTIwMDFcXHUyMDAyXFx1MjAwMycgK1xuICAnXFx1MjAwNFxcdTIwMDVcXHUyMDA2XFx1MjAwN1xcdTIwMDhcXHUyMDA5XFx1MjAwQVxcdTIwMkZcXHUyMDVGXFx1MzAwMFxcdTIwMjhcXHUyMDI5XFx1RkVGRic7XG4iLCJ2YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgaW52b2tlID0gcmVxdWlyZSgnLi9faW52b2tlJyk7XG52YXIgaHRtbCA9IHJlcXVpcmUoJy4vX2h0bWwnKTtcbnZhciBjZWwgPSByZXF1aXJlKCcuL19kb20tY3JlYXRlJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgcHJvY2VzcyA9IGdsb2JhbC5wcm9jZXNzO1xudmFyIHNldFRhc2sgPSBnbG9iYWwuc2V0SW1tZWRpYXRlO1xudmFyIGNsZWFyVGFzayA9IGdsb2JhbC5jbGVhckltbWVkaWF0ZTtcbnZhciBNZXNzYWdlQ2hhbm5lbCA9IGdsb2JhbC5NZXNzYWdlQ2hhbm5lbDtcbnZhciBEaXNwYXRjaCA9IGdsb2JhbC5EaXNwYXRjaDtcbnZhciBjb3VudGVyID0gMDtcbnZhciBxdWV1ZSA9IHt9O1xudmFyIE9OUkVBRFlTVEFURUNIQU5HRSA9ICdvbnJlYWR5c3RhdGVjaGFuZ2UnO1xudmFyIGRlZmVyLCBjaGFubmVsLCBwb3J0O1xudmFyIHJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGlkID0gK3RoaXM7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b3R5cGUtYnVpbHRpbnNcbiAgaWYgKHF1ZXVlLmhhc093blByb3BlcnR5KGlkKSkge1xuICAgIHZhciBmbiA9IHF1ZXVlW2lkXTtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICAgIGZuKCk7XG4gIH1cbn07XG52YXIgbGlzdGVuZXIgPSBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgcnVuLmNhbGwoZXZlbnQuZGF0YSk7XG59O1xuLy8gTm9kZS5qcyAwLjkrICYgSUUxMCsgaGFzIHNldEltbWVkaWF0ZSwgb3RoZXJ3aXNlOlxuaWYgKCFzZXRUYXNrIHx8ICFjbGVhclRhc2spIHtcbiAgc2V0VGFzayA9IGZ1bmN0aW9uIHNldEltbWVkaWF0ZShmbikge1xuICAgIHZhciBhcmdzID0gW107XG4gICAgdmFyIGkgPSAxO1xuICAgIHdoaWxlIChhcmd1bWVudHMubGVuZ3RoID4gaSkgYXJncy5wdXNoKGFyZ3VtZW50c1tpKytdKTtcbiAgICBxdWV1ZVsrK2NvdW50ZXJdID0gZnVuY3Rpb24gKCkge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gICAgICBpbnZva2UodHlwZW9mIGZuID09ICdmdW5jdGlvbicgPyBmbiA6IEZ1bmN0aW9uKGZuKSwgYXJncyk7XG4gICAgfTtcbiAgICBkZWZlcihjb3VudGVyKTtcbiAgICByZXR1cm4gY291bnRlcjtcbiAgfTtcbiAgY2xlYXJUYXNrID0gZnVuY3Rpb24gY2xlYXJJbW1lZGlhdGUoaWQpIHtcbiAgICBkZWxldGUgcXVldWVbaWRdO1xuICB9O1xuICAvLyBOb2RlLmpzIDAuOC1cbiAgaWYgKHJlcXVpcmUoJy4vX2NvZicpKHByb2Nlc3MpID09ICdwcm9jZXNzJykge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBwcm9jZXNzLm5leHRUaWNrKGN0eChydW4sIGlkLCAxKSk7XG4gICAgfTtcbiAgLy8gU3BoZXJlIChKUyBnYW1lIGVuZ2luZSkgRGlzcGF0Y2ggQVBJXG4gIH0gZWxzZSBpZiAoRGlzcGF0Y2ggJiYgRGlzcGF0Y2gubm93KSB7XG4gICAgZGVmZXIgPSBmdW5jdGlvbiAoaWQpIHtcbiAgICAgIERpc3BhdGNoLm5vdyhjdHgocnVuLCBpZCwgMSkpO1xuICAgIH07XG4gIC8vIEJyb3dzZXJzIHdpdGggTWVzc2FnZUNoYW5uZWwsIGluY2x1ZGVzIFdlYldvcmtlcnNcbiAgfSBlbHNlIGlmIChNZXNzYWdlQ2hhbm5lbCkge1xuICAgIGNoYW5uZWwgPSBuZXcgTWVzc2FnZUNoYW5uZWwoKTtcbiAgICBwb3J0ID0gY2hhbm5lbC5wb3J0MjtcbiAgICBjaGFubmVsLnBvcnQxLm9ubWVzc2FnZSA9IGxpc3RlbmVyO1xuICAgIGRlZmVyID0gY3R4KHBvcnQucG9zdE1lc3NhZ2UsIHBvcnQsIDEpO1xuICAvLyBCcm93c2VycyB3aXRoIHBvc3RNZXNzYWdlLCBza2lwIFdlYldvcmtlcnNcbiAgLy8gSUU4IGhhcyBwb3N0TWVzc2FnZSwgYnV0IGl0J3Mgc3luYyAmIHR5cGVvZiBpdHMgcG9zdE1lc3NhZ2UgaXMgJ29iamVjdCdcbiAgfSBlbHNlIGlmIChnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lciAmJiB0eXBlb2YgcG9zdE1lc3NhZ2UgPT0gJ2Z1bmN0aW9uJyAmJiAhZ2xvYmFsLmltcG9ydFNjcmlwdHMpIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgZ2xvYmFsLnBvc3RNZXNzYWdlKGlkICsgJycsICcqJyk7XG4gICAgfTtcbiAgICBnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGxpc3RlbmVyLCBmYWxzZSk7XG4gIC8vIElFOC1cbiAgfSBlbHNlIGlmIChPTlJFQURZU1RBVEVDSEFOR0UgaW4gY2VsKCdzY3JpcHQnKSkge1xuICAgIGRlZmVyID0gZnVuY3Rpb24gKGlkKSB7XG4gICAgICBodG1sLmFwcGVuZENoaWxkKGNlbCgnc2NyaXB0JykpW09OUkVBRFlTVEFURUNIQU5HRV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGh0bWwucmVtb3ZlQ2hpbGQodGhpcyk7XG4gICAgICAgIHJ1bi5jYWxsKGlkKTtcbiAgICAgIH07XG4gICAgfTtcbiAgLy8gUmVzdCBvbGQgYnJvd3NlcnNcbiAgfSBlbHNlIHtcbiAgICBkZWZlciA9IGZ1bmN0aW9uIChpZCkge1xuICAgICAgc2V0VGltZW91dChjdHgocnVuLCBpZCwgMSksIDApO1xuICAgIH07XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0ge1xuICBzZXQ6IHNldFRhc2ssXG4gIGNsZWFyOiBjbGVhclRhc2tcbn07XG4iLCJ2YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1heCA9IE1hdGgubWF4O1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaW5kZXgsIGxlbmd0aCkge1xuICBpbmRleCA9IHRvSW50ZWdlcihpbmRleCk7XG4gIHJldHVybiBpbmRleCA8IDAgPyBtYXgoaW5kZXggKyBsZW5ndGgsIDApIDogbWluKGluZGV4LCBsZW5ndGgpO1xufTtcbiIsIi8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXRvaW5kZXhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCA9PT0gdW5kZWZpbmVkKSByZXR1cm4gMDtcbiAgdmFyIG51bWJlciA9IHRvSW50ZWdlcihpdCk7XG4gIHZhciBsZW5ndGggPSB0b0xlbmd0aChudW1iZXIpO1xuICBpZiAobnVtYmVyICE9PSBsZW5ndGgpIHRocm93IFJhbmdlRXJyb3IoJ1dyb25nIGxlbmd0aCEnKTtcbiAgcmV0dXJuIGxlbmd0aDtcbn07XG4iLCIvLyA3LjEuNCBUb0ludGVnZXJcbnZhciBjZWlsID0gTWF0aC5jZWlsO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpc05hTihpdCA9ICtpdCkgPyAwIDogKGl0ID4gMCA/IGZsb29yIDogY2VpbCkoaXQpO1xufTtcbiIsIi8vIHRvIGluZGV4ZWQgb2JqZWN0LCB0b09iamVjdCB3aXRoIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgc3RyaW5nc1xudmFyIElPYmplY3QgPSByZXF1aXJlKCcuL19pb2JqZWN0Jyk7XG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBJT2JqZWN0KGRlZmluZWQoaXQpKTtcbn07XG4iLCIvLyA3LjEuMTUgVG9MZW5ndGhcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPiAwID8gbWluKHRvSW50ZWdlcihpdCksIDB4MWZmZmZmZmZmZmZmZmYpIDogMDsgLy8gcG93KDIsIDUzKSAtIDEgPT0gOTAwNzE5OTI1NDc0MDk5MVxufTtcbiIsIi8vIDcuMS4xMyBUb09iamVjdChhcmd1bWVudClcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIE9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjEgVG9QcmltaXRpdmUoaW5wdXQgWywgUHJlZmVycmVkVHlwZV0pXG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbi8vIGluc3RlYWQgb2YgdGhlIEVTNiBzcGVjIHZlcnNpb24sIHdlIGRpZG4ndCBpbXBsZW1lbnQgQEB0b1ByaW1pdGl2ZSBjYXNlXG4vLyBhbmQgdGhlIHNlY29uZCBhcmd1bWVudCAtIGZsYWcgLSBwcmVmZXJyZWQgdHlwZSBpcyBhIHN0cmluZ1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFMpIHtcbiAgaWYgKCFpc09iamVjdChpdCkpIHJldHVybiBpdDtcbiAgdmFyIGZuLCB2YWw7XG4gIGlmIChTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICBpZiAodHlwZW9mIChmbiA9IGl0LnZhbHVlT2YpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKCFTICYmIHR5cGVvZiAoZm4gPSBpdC50b1N0cmluZykgPT0gJ2Z1bmN0aW9uJyAmJiAhaXNPYmplY3QodmFsID0gZm4uY2FsbChpdCkpKSByZXR1cm4gdmFsO1xuICB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjb252ZXJ0IG9iamVjdCB0byBwcmltaXRpdmUgdmFsdWVcIik7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuaWYgKHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykpIHtcbiAgdmFyIExJQlJBUlkgPSByZXF1aXJlKCcuL19saWJyYXJ5Jyk7XG4gIHZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbiAgdmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbiAgdmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiAgdmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG4gIHZhciAkYnVmZmVyID0gcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJyk7XG4gIHZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbiAgdmFyIGFuSW5zdGFuY2UgPSByZXF1aXJlKCcuL19hbi1pbnN0YW5jZScpO1xuICB2YXIgcHJvcGVydHlEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xuICB2YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbiAgdmFyIHJlZGVmaW5lQWxsID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUtYWxsJyk7XG4gIHZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG4gIHZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xuICB2YXIgdG9JbmRleCA9IHJlcXVpcmUoJy4vX3RvLWluZGV4Jyk7XG4gIHZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xuICB2YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbiAgdmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xuICB2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbiAgdmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4gIHZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xuICB2YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG4gIHZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG4gIHZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbiAgdmFyIGdPUE4gPSByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmY7XG4gIHZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuICB2YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG4gIHZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbiAgdmFyIGNyZWF0ZUFycmF5TWV0aG9kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpO1xuICB2YXIgY3JlYXRlQXJyYXlJbmNsdWRlcyA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJyk7XG4gIHZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG4gIHZhciBBcnJheUl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vZXM2LmFycmF5Lml0ZXJhdG9yJyk7XG4gIHZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbiAgdmFyICRpdGVyRGV0ZWN0ID0gcmVxdWlyZSgnLi9faXRlci1kZXRlY3QnKTtcbiAgdmFyIHNldFNwZWNpZXMgPSByZXF1aXJlKCcuL19zZXQtc3BlY2llcycpO1xuICB2YXIgYXJyYXlGaWxsID0gcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpO1xuICB2YXIgYXJyYXlDb3B5V2l0aGluID0gcmVxdWlyZSgnLi9fYXJyYXktY29weS13aXRoaW4nKTtcbiAgdmFyICREUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xuICB2YXIgJEdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xuICB2YXIgZFAgPSAkRFAuZjtcbiAgdmFyIGdPUEQgPSAkR09QRC5mO1xuICB2YXIgUmFuZ2VFcnJvciA9IGdsb2JhbC5SYW5nZUVycm9yO1xuICB2YXIgVHlwZUVycm9yID0gZ2xvYmFsLlR5cGVFcnJvcjtcbiAgdmFyIFVpbnQ4QXJyYXkgPSBnbG9iYWwuVWludDhBcnJheTtcbiAgdmFyIEFSUkFZX0JVRkZFUiA9ICdBcnJheUJ1ZmZlcic7XG4gIHZhciBTSEFSRURfQlVGRkVSID0gJ1NoYXJlZCcgKyBBUlJBWV9CVUZGRVI7XG4gIHZhciBCWVRFU19QRVJfRUxFTUVOVCA9ICdCWVRFU19QRVJfRUxFTUVOVCc7XG4gIHZhciBQUk9UT1RZUEUgPSAncHJvdG90eXBlJztcbiAgdmFyIEFycmF5UHJvdG8gPSBBcnJheVtQUk9UT1RZUEVdO1xuICB2YXIgJEFycmF5QnVmZmVyID0gJGJ1ZmZlci5BcnJheUJ1ZmZlcjtcbiAgdmFyICREYXRhVmlldyA9ICRidWZmZXIuRGF0YVZpZXc7XG4gIHZhciBhcnJheUZvckVhY2ggPSBjcmVhdGVBcnJheU1ldGhvZCgwKTtcbiAgdmFyIGFycmF5RmlsdGVyID0gY3JlYXRlQXJyYXlNZXRob2QoMik7XG4gIHZhciBhcnJheVNvbWUgPSBjcmVhdGVBcnJheU1ldGhvZCgzKTtcbiAgdmFyIGFycmF5RXZlcnkgPSBjcmVhdGVBcnJheU1ldGhvZCg0KTtcbiAgdmFyIGFycmF5RmluZCA9IGNyZWF0ZUFycmF5TWV0aG9kKDUpO1xuICB2YXIgYXJyYXlGaW5kSW5kZXggPSBjcmVhdGVBcnJheU1ldGhvZCg2KTtcbiAgdmFyIGFycmF5SW5jbHVkZXMgPSBjcmVhdGVBcnJheUluY2x1ZGVzKHRydWUpO1xuICB2YXIgYXJyYXlJbmRleE9mID0gY3JlYXRlQXJyYXlJbmNsdWRlcyhmYWxzZSk7XG4gIHZhciBhcnJheVZhbHVlcyA9IEFycmF5SXRlcmF0b3JzLnZhbHVlcztcbiAgdmFyIGFycmF5S2V5cyA9IEFycmF5SXRlcmF0b3JzLmtleXM7XG4gIHZhciBhcnJheUVudHJpZXMgPSBBcnJheUl0ZXJhdG9ycy5lbnRyaWVzO1xuICB2YXIgYXJyYXlMYXN0SW5kZXhPZiA9IEFycmF5UHJvdG8ubGFzdEluZGV4T2Y7XG4gIHZhciBhcnJheVJlZHVjZSA9IEFycmF5UHJvdG8ucmVkdWNlO1xuICB2YXIgYXJyYXlSZWR1Y2VSaWdodCA9IEFycmF5UHJvdG8ucmVkdWNlUmlnaHQ7XG4gIHZhciBhcnJheUpvaW4gPSBBcnJheVByb3RvLmpvaW47XG4gIHZhciBhcnJheVNvcnQgPSBBcnJheVByb3RvLnNvcnQ7XG4gIHZhciBhcnJheVNsaWNlID0gQXJyYXlQcm90by5zbGljZTtcbiAgdmFyIGFycmF5VG9TdHJpbmcgPSBBcnJheVByb3RvLnRvU3RyaW5nO1xuICB2YXIgYXJyYXlUb0xvY2FsZVN0cmluZyA9IEFycmF5UHJvdG8udG9Mb2NhbGVTdHJpbmc7XG4gIHZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbiAgdmFyIFRBRyA9IHdrcygndG9TdHJpbmdUYWcnKTtcbiAgdmFyIFRZUEVEX0NPTlNUUlVDVE9SID0gdWlkKCd0eXBlZF9jb25zdHJ1Y3RvcicpO1xuICB2YXIgREVGX0NPTlNUUlVDVE9SID0gdWlkKCdkZWZfY29uc3RydWN0b3InKTtcbiAgdmFyIEFMTF9DT05TVFJVQ1RPUlMgPSAkdHlwZWQuQ09OU1RSO1xuICB2YXIgVFlQRURfQVJSQVkgPSAkdHlwZWQuVFlQRUQ7XG4gIHZhciBWSUVXID0gJHR5cGVkLlZJRVc7XG4gIHZhciBXUk9OR19MRU5HVEggPSAnV3JvbmcgbGVuZ3RoISc7XG5cbiAgdmFyICRtYXAgPSBjcmVhdGVBcnJheU1ldGhvZCgxLCBmdW5jdGlvbiAoTywgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGFsbG9jYXRlKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pLCBsZW5ndGgpO1xuICB9KTtcblxuICB2YXIgTElUVExFX0VORElBTiA9IGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkobmV3IFVpbnQxNkFycmF5KFsxXSkuYnVmZmVyKVswXSA9PT0gMTtcbiAgfSk7XG5cbiAgdmFyIEZPUkNFRF9TRVQgPSAhIVVpbnQ4QXJyYXkgJiYgISFVaW50OEFycmF5W1BST1RPVFlQRV0uc2V0ICYmIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgVWludDhBcnJheSgxKS5zZXQoe30pO1xuICB9KTtcblxuICB2YXIgdG9PZmZzZXQgPSBmdW5jdGlvbiAoaXQsIEJZVEVTKSB7XG4gICAgdmFyIG9mZnNldCA9IHRvSW50ZWdlcihpdCk7XG4gICAgaWYgKG9mZnNldCA8IDAgfHwgb2Zmc2V0ICUgQllURVMpIHRocm93IFJhbmdlRXJyb3IoJ1dyb25nIG9mZnNldCEnKTtcbiAgICByZXR1cm4gb2Zmc2V0O1xuICB9O1xuXG4gIHZhciB2YWxpZGF0ZSA9IGZ1bmN0aW9uIChpdCkge1xuICAgIGlmIChpc09iamVjdChpdCkgJiYgVFlQRURfQVJSQVkgaW4gaXQpIHJldHVybiBpdDtcbiAgICB0aHJvdyBUeXBlRXJyb3IoaXQgKyAnIGlzIG5vdCBhIHR5cGVkIGFycmF5IScpO1xuICB9O1xuXG4gIHZhciBhbGxvY2F0ZSA9IGZ1bmN0aW9uIChDLCBsZW5ndGgpIHtcbiAgICBpZiAoIShpc09iamVjdChDKSAmJiBUWVBFRF9DT05TVFJVQ1RPUiBpbiBDKSkge1xuICAgICAgdGhyb3cgVHlwZUVycm9yKCdJdCBpcyBub3QgYSB0eXBlZCBhcnJheSBjb25zdHJ1Y3RvciEnKTtcbiAgICB9IHJldHVybiBuZXcgQyhsZW5ndGgpO1xuICB9O1xuXG4gIHZhciBzcGVjaWVzRnJvbUxpc3QgPSBmdW5jdGlvbiAoTywgbGlzdCkge1xuICAgIHJldHVybiBmcm9tTGlzdChzcGVjaWVzQ29uc3RydWN0b3IoTywgT1tERUZfQ09OU1RSVUNUT1JdKSwgbGlzdCk7XG4gIH07XG5cbiAgdmFyIGZyb21MaXN0ID0gZnVuY3Rpb24gKEMsIGxpc3QpIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBsZW5ndGggPSBsaXN0Lmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gYWxsb2NhdGUoQywgbGVuZ3RoKTtcbiAgICB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHJlc3VsdFtpbmRleF0gPSBsaXN0W2luZGV4KytdO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgdmFyIGFkZEdldHRlciA9IGZ1bmN0aW9uIChpdCwga2V5LCBpbnRlcm5hbCkge1xuICAgIGRQKGl0LCBrZXksIHsgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzLl9kW2ludGVybmFsXTsgfSB9KTtcbiAgfTtcblxuICB2YXIgJGZyb20gPSBmdW5jdGlvbiBmcm9tKHNvdXJjZSAvKiAsIG1hcGZuLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdChzb3VyY2UpO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgbWFwZm4gPSBhTGVuID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgICB2YXIgbWFwcGluZyA9IG1hcGZuICE9PSB1bmRlZmluZWQ7XG4gICAgdmFyIGl0ZXJGbiA9IGdldEl0ZXJGbihPKTtcbiAgICB2YXIgaSwgbGVuZ3RoLCB2YWx1ZXMsIHJlc3VsdCwgc3RlcCwgaXRlcmF0b3I7XG4gICAgaWYgKGl0ZXJGbiAhPSB1bmRlZmluZWQgJiYgIWlzQXJyYXlJdGVyKGl0ZXJGbikpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgdmFsdWVzID0gW10sIGkgPSAwOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGkrKykge1xuICAgICAgICB2YWx1ZXMucHVzaChzdGVwLnZhbHVlKTtcbiAgICAgIH0gTyA9IHZhbHVlcztcbiAgICB9XG4gICAgaWYgKG1hcHBpbmcgJiYgYUxlbiA+IDIpIG1hcGZuID0gY3R4KG1hcGZuLCBhcmd1bWVudHNbMl0sIDIpO1xuICAgIGZvciAoaSA9IDAsIGxlbmd0aCA9IHRvTGVuZ3RoKE8ubGVuZ3RoKSwgcmVzdWx0ID0gYWxsb2NhdGUodGhpcywgbGVuZ3RoKTsgbGVuZ3RoID4gaTsgaSsrKSB7XG4gICAgICByZXN1bHRbaV0gPSBtYXBwaW5nID8gbWFwZm4oT1tpXSwgaSkgOiBPW2ldO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9O1xuXG4gIHZhciAkb2YgPSBmdW5jdGlvbiBvZigvKiAuLi5pdGVtcyAqLykge1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGxlbmd0aCA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIHJlc3VsdCA9IGFsbG9jYXRlKHRoaXMsIGxlbmd0aCk7XG4gICAgd2hpbGUgKGxlbmd0aCA+IGluZGV4KSByZXN1bHRbaW5kZXhdID0gYXJndW1lbnRzW2luZGV4KytdO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH07XG5cbiAgLy8gaU9TIFNhZmFyaSA2LnggZmFpbHMgaGVyZVxuICB2YXIgVE9fTE9DQUxFX0JVRyA9ICEhVWludDhBcnJheSAmJiBmYWlscyhmdW5jdGlvbiAoKSB7IGFycmF5VG9Mb2NhbGVTdHJpbmcuY2FsbChuZXcgVWludDhBcnJheSgxKSk7IH0pO1xuXG4gIHZhciAkdG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b0xvY2FsZVN0cmluZygpIHtcbiAgICByZXR1cm4gYXJyYXlUb0xvY2FsZVN0cmluZy5hcHBseShUT19MT0NBTEVfQlVHID8gYXJyYXlTbGljZS5jYWxsKHZhbGlkYXRlKHRoaXMpKSA6IHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICB9O1xuXG4gIHZhciBwcm90byA9IHtcbiAgICBjb3B5V2l0aGluOiBmdW5jdGlvbiBjb3B5V2l0aGluKHRhcmdldCwgc3RhcnQgLyogLCBlbmQgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUNvcHlXaXRoaW4uY2FsbCh2YWxpZGF0ZSh0aGlzKSwgdGFyZ2V0LCBzdGFydCwgYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZXZlcnk6IGZ1bmN0aW9uIGV2ZXJ5KGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlFdmVyeSh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgZmlsbDogZnVuY3Rpb24gZmlsbCh2YWx1ZSAvKiAsIHN0YXJ0LCBlbmQgKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5RmlsbC5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIGZpbHRlcjogZnVuY3Rpb24gZmlsdGVyKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5RmlsdGVyKHZhbGlkYXRlKHRoaXMpLCBjYWxsYmFja2ZuLFxuICAgICAgICBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCkpO1xuICAgIH0sXG4gICAgZmluZDogZnVuY3Rpb24gZmluZChwcmVkaWNhdGUgLyogLCB0aGlzQXJnICovKSB7XG4gICAgICByZXR1cm4gYXJyYXlGaW5kKHZhbGlkYXRlKHRoaXMpLCBwcmVkaWNhdGUsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KHByZWRpY2F0ZSAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUZpbmRJbmRleCh2YWxpZGF0ZSh0aGlzKSwgcHJlZGljYXRlLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBmb3JFYWNoOiBmdW5jdGlvbiBmb3JFYWNoKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgICBhcnJheUZvckVhY2godmFsaWRhdGUodGhpcyksIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIGluZGV4T2Y6IGZ1bmN0aW9uIGluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCAqLykge1xuICAgICAgcmV0dXJuIGFycmF5SW5kZXhPZih2YWxpZGF0ZSh0aGlzKSwgc2VhcmNoRWxlbWVudCwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggKi8pIHtcbiAgICAgIHJldHVybiBhcnJheUluY2x1ZGVzKHZhbGlkYXRlKHRoaXMpLCBzZWFyY2hFbGVtZW50LCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gICAgfSxcbiAgICBqb2luOiBmdW5jdGlvbiBqb2luKHNlcGFyYXRvcikgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlKb2luLmFwcGx5KHZhbGlkYXRlKHRoaXMpLCBhcmd1bWVudHMpO1xuICAgIH0sXG4gICAgbGFzdEluZGV4T2Y6IGZ1bmN0aW9uIGxhc3RJbmRleE9mKHNlYXJjaEVsZW1lbnQgLyogLCBmcm9tSW5kZXggKi8pIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgICAgcmV0dXJuIGFycmF5TGFzdEluZGV4T2YuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICBtYXA6IGZ1bmN0aW9uIG1hcChtYXBmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICAgIHJldHVybiAkbWFwKHZhbGlkYXRlKHRoaXMpLCBtYXBmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgcmVkdWNlOiBmdW5jdGlvbiByZWR1Y2UoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlSZWR1Y2UuYXBwbHkodmFsaWRhdGUodGhpcyksIGFyZ3VtZW50cyk7XG4gICAgfSxcbiAgICByZWR1Y2VSaWdodDogZnVuY3Rpb24gcmVkdWNlUmlnaHQoY2FsbGJhY2tmbiAvKiAsIGluaXRpYWxWYWx1ZSAqLykgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgICByZXR1cm4gYXJyYXlSZWR1Y2VSaWdodC5hcHBseSh2YWxpZGF0ZSh0aGlzKSwgYXJndW1lbnRzKTtcbiAgICB9LFxuICAgIHJldmVyc2U6IGZ1bmN0aW9uIHJldmVyc2UoKSB7XG4gICAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgICB2YXIgbGVuZ3RoID0gdmFsaWRhdGUodGhhdCkubGVuZ3RoO1xuICAgICAgdmFyIG1pZGRsZSA9IE1hdGguZmxvb3IobGVuZ3RoIC8gMik7XG4gICAgICB2YXIgaW5kZXggPSAwO1xuICAgICAgdmFyIHZhbHVlO1xuICAgICAgd2hpbGUgKGluZGV4IDwgbWlkZGxlKSB7XG4gICAgICAgIHZhbHVlID0gdGhhdFtpbmRleF07XG4gICAgICAgIHRoYXRbaW5kZXgrK10gPSB0aGF0Wy0tbGVuZ3RoXTtcbiAgICAgICAgdGhhdFtsZW5ndGhdID0gdmFsdWU7XG4gICAgICB9IHJldHVybiB0aGF0O1xuICAgIH0sXG4gICAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgICAgcmV0dXJuIGFycmF5U29tZSh2YWxpZGF0ZSh0aGlzKSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQpO1xuICAgIH0sXG4gICAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICAgIHJldHVybiBhcnJheVNvcnQuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgY29tcGFyZWZuKTtcbiAgICB9LFxuICAgIHN1YmFycmF5OiBmdW5jdGlvbiBzdWJhcnJheShiZWdpbiwgZW5kKSB7XG4gICAgICB2YXIgTyA9IHZhbGlkYXRlKHRoaXMpO1xuICAgICAgdmFyIGxlbmd0aCA9IE8ubGVuZ3RoO1xuICAgICAgdmFyICRiZWdpbiA9IHRvQWJzb2x1dGVJbmRleChiZWdpbiwgbGVuZ3RoKTtcbiAgICAgIHJldHVybiBuZXcgKHNwZWNpZXNDb25zdHJ1Y3RvcihPLCBPW0RFRl9DT05TVFJVQ1RPUl0pKShcbiAgICAgICAgTy5idWZmZXIsXG4gICAgICAgIE8uYnl0ZU9mZnNldCArICRiZWdpbiAqIE8uQllURVNfUEVSX0VMRU1FTlQsXG4gICAgICAgIHRvTGVuZ3RoKChlbmQgPT09IHVuZGVmaW5lZCA/IGxlbmd0aCA6IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbmd0aCkpIC0gJGJlZ2luKVxuICAgICAgKTtcbiAgICB9XG4gIH07XG5cbiAgdmFyICRzbGljZSA9IGZ1bmN0aW9uIHNsaWNlKHN0YXJ0LCBlbmQpIHtcbiAgICByZXR1cm4gc3BlY2llc0Zyb21MaXN0KHRoaXMsIGFycmF5U2xpY2UuY2FsbCh2YWxpZGF0ZSh0aGlzKSwgc3RhcnQsIGVuZCkpO1xuICB9O1xuXG4gIHZhciAkc2V0ID0gZnVuY3Rpb24gc2V0KGFycmF5TGlrZSAvKiAsIG9mZnNldCAqLykge1xuICAgIHZhbGlkYXRlKHRoaXMpO1xuICAgIHZhciBvZmZzZXQgPSB0b09mZnNldChhcmd1bWVudHNbMV0sIDEpO1xuICAgIHZhciBsZW5ndGggPSB0aGlzLmxlbmd0aDtcbiAgICB2YXIgc3JjID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgoc3JjLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gMDtcbiAgICBpZiAobGVuICsgb2Zmc2V0ID4gbGVuZ3RoKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0xFTkdUSCk7XG4gICAgd2hpbGUgKGluZGV4IDwgbGVuKSB0aGlzW29mZnNldCArIGluZGV4XSA9IHNyY1tpbmRleCsrXTtcbiAgfTtcblxuICB2YXIgJGl0ZXJhdG9ycyA9IHtcbiAgICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKCkge1xuICAgICAgcmV0dXJuIGFycmF5RW50cmllcy5jYWxsKHZhbGlkYXRlKHRoaXMpKTtcbiAgICB9LFxuICAgIGtleXM6IGZ1bmN0aW9uIGtleXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlLZXlzLmNhbGwodmFsaWRhdGUodGhpcykpO1xuICAgIH0sXG4gICAgdmFsdWVzOiBmdW5jdGlvbiB2YWx1ZXMoKSB7XG4gICAgICByZXR1cm4gYXJyYXlWYWx1ZXMuY2FsbCh2YWxpZGF0ZSh0aGlzKSk7XG4gICAgfVxuICB9O1xuXG4gIHZhciBpc1RBSW5kZXggPSBmdW5jdGlvbiAodGFyZ2V0LCBrZXkpIHtcbiAgICByZXR1cm4gaXNPYmplY3QodGFyZ2V0KVxuICAgICAgJiYgdGFyZ2V0W1RZUEVEX0FSUkFZXVxuICAgICAgJiYgdHlwZW9mIGtleSAhPSAnc3ltYm9sJ1xuICAgICAgJiYga2V5IGluIHRhcmdldFxuICAgICAgJiYgU3RyaW5nKCtrZXkpID09IFN0cmluZyhrZXkpO1xuICB9O1xuICB2YXIgJGdldERlc2MgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIHtcbiAgICByZXR1cm4gaXNUQUluZGV4KHRhcmdldCwga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSlcbiAgICAgID8gcHJvcGVydHlEZXNjKDIsIHRhcmdldFtrZXldKVxuICAgICAgOiBnT1BEKHRhcmdldCwga2V5KTtcbiAgfTtcbiAgdmFyICRzZXREZXNjID0gZnVuY3Rpb24gZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICBpZiAoaXNUQUluZGV4KHRhcmdldCwga2V5ID0gdG9QcmltaXRpdmUoa2V5LCB0cnVlKSlcbiAgICAgICYmIGlzT2JqZWN0KGRlc2MpXG4gICAgICAmJiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICAgICYmICFoYXMoZGVzYywgJ2dldCcpXG4gICAgICAmJiAhaGFzKGRlc2MsICdzZXQnKVxuICAgICAgLy8gVE9ETzogYWRkIHZhbGlkYXRpb24gZGVzY3JpcHRvciB3L28gY2FsbGluZyBhY2Nlc3NvcnNcbiAgICAgICYmICFkZXNjLmNvbmZpZ3VyYWJsZVxuICAgICAgJiYgKCFoYXMoZGVzYywgJ3dyaXRhYmxlJykgfHwgZGVzYy53cml0YWJsZSlcbiAgICAgICYmICghaGFzKGRlc2MsICdlbnVtZXJhYmxlJykgfHwgZGVzYy5lbnVtZXJhYmxlKVxuICAgICkge1xuICAgICAgdGFyZ2V0W2tleV0gPSBkZXNjLnZhbHVlO1xuICAgICAgcmV0dXJuIHRhcmdldDtcbiAgICB9IHJldHVybiBkUCh0YXJnZXQsIGtleSwgZGVzYyk7XG4gIH07XG5cbiAgaWYgKCFBTExfQ09OU1RSVUNUT1JTKSB7XG4gICAgJEdPUEQuZiA9ICRnZXREZXNjO1xuICAgICREUC5mID0gJHNldERlc2M7XG4gIH1cblxuICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFBTExfQ09OU1RSVUNUT1JTLCAnT2JqZWN0Jywge1xuICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvcjogJGdldERlc2MsXG4gICAgZGVmaW5lUHJvcGVydHk6ICRzZXREZXNjXG4gIH0pO1xuXG4gIGlmIChmYWlscyhmdW5jdGlvbiAoKSB7IGFycmF5VG9TdHJpbmcuY2FsbCh7fSk7IH0pKSB7XG4gICAgYXJyYXlUb1N0cmluZyA9IGFycmF5VG9Mb2NhbGVTdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICAgIHJldHVybiBhcnJheUpvaW4uY2FsbCh0aGlzKTtcbiAgICB9O1xuICB9XG5cbiAgdmFyICRUeXBlZEFycmF5UHJvdG90eXBlJCA9IHJlZGVmaW5lQWxsKHt9LCBwcm90byk7XG4gIHJlZGVmaW5lQWxsKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJGl0ZXJhdG9ycyk7XG4gIGhpZGUoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBJVEVSQVRPUiwgJGl0ZXJhdG9ycy52YWx1ZXMpO1xuICByZWRlZmluZUFsbCgkVHlwZWRBcnJheVByb3RvdHlwZSQsIHtcbiAgICBzbGljZTogJHNsaWNlLFxuICAgIHNldDogJHNldCxcbiAgICBjb25zdHJ1Y3RvcjogZnVuY3Rpb24gKCkgeyAvKiBub29wICovIH0sXG4gICAgdG9TdHJpbmc6IGFycmF5VG9TdHJpbmcsXG4gICAgdG9Mb2NhbGVTdHJpbmc6ICR0b0xvY2FsZVN0cmluZ1xuICB9KTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J1ZmZlcicsICdiJyk7XG4gIGFkZEdldHRlcigkVHlwZWRBcnJheVByb3RvdHlwZSQsICdieXRlT2Zmc2V0JywgJ28nKTtcbiAgYWRkR2V0dGVyKCRUeXBlZEFycmF5UHJvdG90eXBlJCwgJ2J5dGVMZW5ndGgnLCAnbCcpO1xuICBhZGRHZXR0ZXIoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCAnbGVuZ3RoJywgJ2UnKTtcbiAgZFAoJFR5cGVkQXJyYXlQcm90b3R5cGUkLCBUQUcsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXNbVFlQRURfQVJSQVldOyB9XG4gIH0pO1xuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBtYXgtc3RhdGVtZW50c1xuICBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChLRVksIEJZVEVTLCB3cmFwcGVyLCBDTEFNUEVEKSB7XG4gICAgQ0xBTVBFRCA9ICEhQ0xBTVBFRDtcbiAgICB2YXIgTkFNRSA9IEtFWSArIChDTEFNUEVEID8gJ0NsYW1wZWQnIDogJycpICsgJ0FycmF5JztcbiAgICB2YXIgR0VUVEVSID0gJ2dldCcgKyBLRVk7XG4gICAgdmFyIFNFVFRFUiA9ICdzZXQnICsgS0VZO1xuICAgIHZhciBUeXBlZEFycmF5ID0gZ2xvYmFsW05BTUVdO1xuICAgIHZhciBCYXNlID0gVHlwZWRBcnJheSB8fCB7fTtcbiAgICB2YXIgVEFDID0gVHlwZWRBcnJheSAmJiBnZXRQcm90b3R5cGVPZihUeXBlZEFycmF5KTtcbiAgICB2YXIgRk9SQ0VEID0gIVR5cGVkQXJyYXkgfHwgISR0eXBlZC5BQlY7XG4gICAgdmFyIE8gPSB7fTtcbiAgICB2YXIgVHlwZWRBcnJheVByb3RvdHlwZSA9IFR5cGVkQXJyYXkgJiYgVHlwZWRBcnJheVtQUk9UT1RZUEVdO1xuICAgIHZhciBnZXR0ZXIgPSBmdW5jdGlvbiAodGhhdCwgaW5kZXgpIHtcbiAgICAgIHZhciBkYXRhID0gdGhhdC5fZDtcbiAgICAgIHJldHVybiBkYXRhLnZbR0VUVEVSXShpbmRleCAqIEJZVEVTICsgZGF0YS5vLCBMSVRUTEVfRU5ESUFOKTtcbiAgICB9O1xuICAgIHZhciBzZXR0ZXIgPSBmdW5jdGlvbiAodGhhdCwgaW5kZXgsIHZhbHVlKSB7XG4gICAgICB2YXIgZGF0YSA9IHRoYXQuX2Q7XG4gICAgICBpZiAoQ0xBTVBFRCkgdmFsdWUgPSAodmFsdWUgPSBNYXRoLnJvdW5kKHZhbHVlKSkgPCAwID8gMCA6IHZhbHVlID4gMHhmZiA/IDB4ZmYgOiB2YWx1ZSAmIDB4ZmY7XG4gICAgICBkYXRhLnZbU0VUVEVSXShpbmRleCAqIEJZVEVTICsgZGF0YS5vLCB2YWx1ZSwgTElUVExFX0VORElBTik7XG4gICAgfTtcbiAgICB2YXIgYWRkRWxlbWVudCA9IGZ1bmN0aW9uICh0aGF0LCBpbmRleCkge1xuICAgICAgZFAodGhhdCwgaW5kZXgsIHtcbiAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgcmV0dXJuIGdldHRlcih0aGlzLCBpbmRleCk7XG4gICAgICAgIH0sXG4gICAgICAgIHNldDogZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgICAgcmV0dXJuIHNldHRlcih0aGlzLCBpbmRleCwgdmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIHtcbiAgICAgIFR5cGVkQXJyYXkgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBkYXRhLCAkb2Zmc2V0LCAkbGVuZ3RoKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSwgJ19kJyk7XG4gICAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICAgIHZhciBvZmZzZXQgPSAwO1xuICAgICAgICB2YXIgYnVmZmVyLCBieXRlTGVuZ3RoLCBsZW5ndGgsIGtsYXNzO1xuICAgICAgICBpZiAoIWlzT2JqZWN0KGRhdGEpKSB7XG4gICAgICAgICAgbGVuZ3RoID0gdG9JbmRleChkYXRhKTtcbiAgICAgICAgICBieXRlTGVuZ3RoID0gbGVuZ3RoICogQllURVM7XG4gICAgICAgICAgYnVmZmVyID0gbmV3ICRBcnJheUJ1ZmZlcihieXRlTGVuZ3RoKTtcbiAgICAgICAgfSBlbHNlIGlmIChkYXRhIGluc3RhbmNlb2YgJEFycmF5QnVmZmVyIHx8IChrbGFzcyA9IGNsYXNzb2YoZGF0YSkpID09IEFSUkFZX0JVRkZFUiB8fCBrbGFzcyA9PSBTSEFSRURfQlVGRkVSKSB7XG4gICAgICAgICAgYnVmZmVyID0gZGF0YTtcbiAgICAgICAgICBvZmZzZXQgPSB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUyk7XG4gICAgICAgICAgdmFyICRsZW4gPSBkYXRhLmJ5dGVMZW5ndGg7XG4gICAgICAgICAgaWYgKCRsZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKCRsZW4gJSBCWVRFUykgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgICAgICAgICAgYnl0ZUxlbmd0aCA9ICRsZW4gLSBvZmZzZXQ7XG4gICAgICAgICAgICBpZiAoYnl0ZUxlbmd0aCA8IDApIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgYnl0ZUxlbmd0aCA9IHRvTGVuZ3RoKCRsZW5ndGgpICogQllURVM7XG4gICAgICAgICAgICBpZiAoYnl0ZUxlbmd0aCArIG9mZnNldCA+ICRsZW4pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfTEVOR1RIKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgbGVuZ3RoID0gYnl0ZUxlbmd0aCAvIEJZVEVTO1xuICAgICAgICB9IGVsc2UgaWYgKFRZUEVEX0FSUkFZIGluIGRhdGEpIHtcbiAgICAgICAgICByZXR1cm4gZnJvbUxpc3QoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaGlkZSh0aGF0LCAnX2QnLCB7XG4gICAgICAgICAgYjogYnVmZmVyLFxuICAgICAgICAgIG86IG9mZnNldCxcbiAgICAgICAgICBsOiBieXRlTGVuZ3RoLFxuICAgICAgICAgIGU6IGxlbmd0aCxcbiAgICAgICAgICB2OiBuZXcgJERhdGFWaWV3KGJ1ZmZlcilcbiAgICAgICAgfSk7XG4gICAgICAgIHdoaWxlIChpbmRleCA8IGxlbmd0aCkgYWRkRWxlbWVudCh0aGF0LCBpbmRleCsrKTtcbiAgICAgIH0pO1xuICAgICAgVHlwZWRBcnJheVByb3RvdHlwZSA9IFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IGNyZWF0ZSgkVHlwZWRBcnJheVByb3RvdHlwZSQpO1xuICAgICAgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCAnY29uc3RydWN0b3InLCBUeXBlZEFycmF5KTtcbiAgICB9IGVsc2UgaWYgKCFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBUeXBlZEFycmF5KDEpO1xuICAgIH0pIHx8ICFmYWlscyhmdW5jdGlvbiAoKSB7XG4gICAgICBuZXcgVHlwZWRBcnJheSgtMSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgfSkgfHwgISRpdGVyRGV0ZWN0KGZ1bmN0aW9uIChpdGVyKSB7XG4gICAgICBuZXcgVHlwZWRBcnJheSgpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkobnVsbCk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgICBuZXcgVHlwZWRBcnJheSgxLjUpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgICAgbmV3IFR5cGVkQXJyYXkoaXRlcik7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgfSwgdHJ1ZSkpIHtcbiAgICAgIFR5cGVkQXJyYXkgPSB3cmFwcGVyKGZ1bmN0aW9uICh0aGF0LCBkYXRhLCAkb2Zmc2V0LCAkbGVuZ3RoKSB7XG4gICAgICAgIGFuSW5zdGFuY2UodGhhdCwgVHlwZWRBcnJheSwgTkFNRSk7XG4gICAgICAgIHZhciBrbGFzcztcbiAgICAgICAgLy8gYHdzYCBtb2R1bGUgYnVnLCB0ZW1wb3JhcmlseSByZW1vdmUgdmFsaWRhdGlvbiBsZW5ndGggZm9yIFVpbnQ4QXJyYXlcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL3dlYnNvY2tldHMvd3MvcHVsbC82NDVcbiAgICAgICAgaWYgKCFpc09iamVjdChkYXRhKSkgcmV0dXJuIG5ldyBCYXNlKHRvSW5kZXgoZGF0YSkpO1xuICAgICAgICBpZiAoZGF0YSBpbnN0YW5jZW9mICRBcnJheUJ1ZmZlciB8fCAoa2xhc3MgPSBjbGFzc29mKGRhdGEpKSA9PSBBUlJBWV9CVUZGRVIgfHwga2xhc3MgPT0gU0hBUkVEX0JVRkZFUikge1xuICAgICAgICAgIHJldHVybiAkbGVuZ3RoICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgID8gbmV3IEJhc2UoZGF0YSwgdG9PZmZzZXQoJG9mZnNldCwgQllURVMpLCAkbGVuZ3RoKVxuICAgICAgICAgICAgOiAkb2Zmc2V0ICE9PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgPyBuZXcgQmFzZShkYXRhLCB0b09mZnNldCgkb2Zmc2V0LCBCWVRFUykpXG4gICAgICAgICAgICAgIDogbmV3IEJhc2UoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKFRZUEVEX0FSUkFZIGluIGRhdGEpIHJldHVybiBmcm9tTGlzdChUeXBlZEFycmF5LCBkYXRhKTtcbiAgICAgICAgcmV0dXJuICRmcm9tLmNhbGwoVHlwZWRBcnJheSwgZGF0YSk7XG4gICAgICB9KTtcbiAgICAgIGFycmF5Rm9yRWFjaChUQUMgIT09IEZ1bmN0aW9uLnByb3RvdHlwZSA/IGdPUE4oQmFzZSkuY29uY2F0KGdPUE4oVEFDKSkgOiBnT1BOKEJhc2UpLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgIGlmICghKGtleSBpbiBUeXBlZEFycmF5KSkgaGlkZShUeXBlZEFycmF5LCBrZXksIEJhc2Vba2V5XSk7XG4gICAgICB9KTtcbiAgICAgIFR5cGVkQXJyYXlbUFJPVE9UWVBFXSA9IFR5cGVkQXJyYXlQcm90b3R5cGU7XG4gICAgICBpZiAoIUxJQlJBUlkpIFR5cGVkQXJyYXlQcm90b3R5cGUuY29uc3RydWN0b3IgPSBUeXBlZEFycmF5O1xuICAgIH1cbiAgICB2YXIgJG5hdGl2ZUl0ZXJhdG9yID0gVHlwZWRBcnJheVByb3RvdHlwZVtJVEVSQVRPUl07XG4gICAgdmFyIENPUlJFQ1RfSVRFUl9OQU1FID0gISEkbmF0aXZlSXRlcmF0b3JcbiAgICAgICYmICgkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSAndmFsdWVzJyB8fCAkbmF0aXZlSXRlcmF0b3IubmFtZSA9PSB1bmRlZmluZWQpO1xuICAgIHZhciAkaXRlcmF0b3IgPSAkaXRlcmF0b3JzLnZhbHVlcztcbiAgICBoaWRlKFR5cGVkQXJyYXksIFRZUEVEX0NPTlNUUlVDVE9SLCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIFRZUEVEX0FSUkFZLCBOQU1FKTtcbiAgICBoaWRlKFR5cGVkQXJyYXlQcm90b3R5cGUsIFZJRVcsIHRydWUpO1xuICAgIGhpZGUoVHlwZWRBcnJheVByb3RvdHlwZSwgREVGX0NPTlNUUlVDVE9SLCBUeXBlZEFycmF5KTtcblxuICAgIGlmIChDTEFNUEVEID8gbmV3IFR5cGVkQXJyYXkoMSlbVEFHXSAhPSBOQU1FIDogIShUQUcgaW4gVHlwZWRBcnJheVByb3RvdHlwZSkpIHtcbiAgICAgIGRQKFR5cGVkQXJyYXlQcm90b3R5cGUsIFRBRywge1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIE5BTUU7IH1cbiAgICAgIH0pO1xuICAgIH1cblxuICAgIE9bTkFNRV0gPSBUeXBlZEFycmF5O1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAoVHlwZWRBcnJheSAhPSBCYXNlKSwgTyk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUywgTkFNRSwge1xuICAgICAgQllURVNfUEVSX0VMRU1FTlQ6IEJZVEVTXG4gICAgfSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHsgQmFzZS5vZi5jYWxsKFR5cGVkQXJyYXksIDEpOyB9KSwgTkFNRSwge1xuICAgICAgZnJvbTogJGZyb20sXG4gICAgICBvZjogJG9mXG4gICAgfSk7XG5cbiAgICBpZiAoIShCWVRFU19QRVJfRUxFTUVOVCBpbiBUeXBlZEFycmF5UHJvdG90eXBlKSkgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBCWVRFU19QRVJfRUxFTUVOVCwgQllURVMpO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAsIE5BTUUsIHByb3RvKTtcblxuICAgIHNldFNwZWNpZXMoTkFNRSk7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIEZPUkNFRF9TRVQsIE5BTUUsIHsgc2V0OiAkc2V0IH0pO1xuXG4gICAgJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhQ09SUkVDVF9JVEVSX05BTUUsIE5BTUUsICRpdGVyYXRvcnMpO1xuXG4gICAgaWYgKCFMSUJSQVJZICYmIFR5cGVkQXJyYXlQcm90b3R5cGUudG9TdHJpbmcgIT0gYXJyYXlUb1N0cmluZykgVHlwZWRBcnJheVByb3RvdHlwZS50b1N0cmluZyA9IGFycmF5VG9TdHJpbmc7XG5cbiAgICAkZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIG5ldyBUeXBlZEFycmF5KDEpLnNsaWNlKCk7XG4gICAgfSksIE5BTUUsIHsgc2xpY2U6ICRzbGljZSB9KTtcblxuICAgICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBbMSwgMl0udG9Mb2NhbGVTdHJpbmcoKSAhPSBuZXcgVHlwZWRBcnJheShbMSwgMl0pLnRvTG9jYWxlU3RyaW5nKCk7XG4gICAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICAgIFR5cGVkQXJyYXlQcm90b3R5cGUudG9Mb2NhbGVTdHJpbmcuY2FsbChbMSwgMl0pO1xuICAgIH0pKSwgTkFNRSwgeyB0b0xvY2FsZVN0cmluZzogJHRvTG9jYWxlU3RyaW5nIH0pO1xuXG4gICAgSXRlcmF0b3JzW05BTUVdID0gQ09SUkVDVF9JVEVSX05BTUUgPyAkbmF0aXZlSXRlcmF0b3IgOiAkaXRlcmF0b3I7XG4gICAgaWYgKCFMSUJSQVJZICYmICFDT1JSRUNUX0lURVJfTkFNRSkgaGlkZShUeXBlZEFycmF5UHJvdG90eXBlLCBJVEVSQVRPUiwgJGl0ZXJhdG9yKTtcbiAgfTtcbn0gZWxzZSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBERVNDUklQVE9SUyA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJyk7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciAkdHlwZWQgPSByZXF1aXJlKCcuL190eXBlZCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgcmVkZWZpbmVBbGwgPSByZXF1aXJlKCcuL19yZWRlZmluZS1hbGwnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgYW5JbnN0YW5jZSA9IHJlcXVpcmUoJy4vX2FuLWluc3RhbmNlJyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgdG9JbmRleCA9IHJlcXVpcmUoJy4vX3RvLWluZGV4Jyk7XG52YXIgZ09QTiA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuJykuZjtcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgYXJyYXlGaWxsID0gcmVxdWlyZSgnLi9fYXJyYXktZmlsbCcpO1xudmFyIHNldFRvU3RyaW5nVGFnID0gcmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKTtcbnZhciBBUlJBWV9CVUZGRVIgPSAnQXJyYXlCdWZmZXInO1xudmFyIERBVEFfVklFVyA9ICdEYXRhVmlldyc7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgV1JPTkdfTEVOR1RIID0gJ1dyb25nIGxlbmd0aCEnO1xudmFyIFdST05HX0lOREVYID0gJ1dyb25nIGluZGV4ISc7XG52YXIgJEFycmF5QnVmZmVyID0gZ2xvYmFsW0FSUkFZX0JVRkZFUl07XG52YXIgJERhdGFWaWV3ID0gZ2xvYmFsW0RBVEFfVklFV107XG52YXIgTWF0aCA9IGdsb2JhbC5NYXRoO1xudmFyIFJhbmdlRXJyb3IgPSBnbG9iYWwuUmFuZ2VFcnJvcjtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zaGFkb3ctcmVzdHJpY3RlZC1uYW1lc1xudmFyIEluZmluaXR5ID0gZ2xvYmFsLkluZmluaXR5O1xudmFyIEJhc2VCdWZmZXIgPSAkQXJyYXlCdWZmZXI7XG52YXIgYWJzID0gTWF0aC5hYnM7XG52YXIgcG93ID0gTWF0aC5wb3c7XG52YXIgZmxvb3IgPSBNYXRoLmZsb29yO1xudmFyIGxvZyA9IE1hdGgubG9nO1xudmFyIExOMiA9IE1hdGguTE4yO1xudmFyIEJVRkZFUiA9ICdidWZmZXInO1xudmFyIEJZVEVfTEVOR1RIID0gJ2J5dGVMZW5ndGgnO1xudmFyIEJZVEVfT0ZGU0VUID0gJ2J5dGVPZmZzZXQnO1xudmFyICRCVUZGRVIgPSBERVNDUklQVE9SUyA/ICdfYicgOiBCVUZGRVI7XG52YXIgJExFTkdUSCA9IERFU0NSSVBUT1JTID8gJ19sJyA6IEJZVEVfTEVOR1RIO1xudmFyICRPRkZTRVQgPSBERVNDUklQVE9SUyA/ICdfbycgOiBCWVRFX09GRlNFVDtcblxuLy8gSUVFRTc1NCBjb252ZXJzaW9ucyBiYXNlZCBvbiBodHRwczovL2dpdGh1Yi5jb20vZmVyb3NzL2llZWU3NTRcbmZ1bmN0aW9uIHBhY2tJRUVFNzU0KHZhbHVlLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGJ1ZmZlciA9IG5ldyBBcnJheShuQnl0ZXMpO1xuICB2YXIgZUxlbiA9IG5CeXRlcyAqIDggLSBtTGVuIC0gMTtcbiAgdmFyIGVNYXggPSAoMSA8PCBlTGVuKSAtIDE7XG4gIHZhciBlQmlhcyA9IGVNYXggPj4gMTtcbiAgdmFyIHJ0ID0gbUxlbiA9PT0gMjMgPyBwb3coMiwgLTI0KSAtIHBvdygyLCAtNzcpIDogMDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgcyA9IHZhbHVlIDwgMCB8fCB2YWx1ZSA9PT0gMCAmJiAxIC8gdmFsdWUgPCAwID8gMSA6IDA7XG4gIHZhciBlLCBtLCBjO1xuICB2YWx1ZSA9IGFicyh2YWx1ZSk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgaWYgKHZhbHVlICE9IHZhbHVlIHx8IHZhbHVlID09PSBJbmZpbml0eSkge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBtID0gdmFsdWUgIT0gdmFsdWUgPyAxIDogMDtcbiAgICBlID0gZU1heDtcbiAgfSBlbHNlIHtcbiAgICBlID0gZmxvb3IobG9nKHZhbHVlKSAvIExOMik7XG4gICAgaWYgKHZhbHVlICogKGMgPSBwb3coMiwgLWUpKSA8IDEpIHtcbiAgICAgIGUtLTtcbiAgICAgIGMgKj0gMjtcbiAgICB9XG4gICAgaWYgKGUgKyBlQmlhcyA+PSAxKSB7XG4gICAgICB2YWx1ZSArPSBydCAvIGM7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhbHVlICs9IHJ0ICogcG93KDIsIDEgLSBlQmlhcyk7XG4gICAgfVxuICAgIGlmICh2YWx1ZSAqIGMgPj0gMikge1xuICAgICAgZSsrO1xuICAgICAgYyAvPSAyO1xuICAgIH1cbiAgICBpZiAoZSArIGVCaWFzID49IGVNYXgpIHtcbiAgICAgIG0gPSAwO1xuICAgICAgZSA9IGVNYXg7XG4gICAgfSBlbHNlIGlmIChlICsgZUJpYXMgPj0gMSkge1xuICAgICAgbSA9ICh2YWx1ZSAqIGMgLSAxKSAqIHBvdygyLCBtTGVuKTtcbiAgICAgIGUgPSBlICsgZUJpYXM7XG4gICAgfSBlbHNlIHtcbiAgICAgIG0gPSB2YWx1ZSAqIHBvdygyLCBlQmlhcyAtIDEpICogcG93KDIsIG1MZW4pO1xuICAgICAgZSA9IDA7XG4gICAgfVxuICB9XG4gIGZvciAoOyBtTGVuID49IDg7IGJ1ZmZlcltpKytdID0gbSAmIDI1NSwgbSAvPSAyNTYsIG1MZW4gLT0gOCk7XG4gIGUgPSBlIDw8IG1MZW4gfCBtO1xuICBlTGVuICs9IG1MZW47XG4gIGZvciAoOyBlTGVuID4gMDsgYnVmZmVyW2krK10gPSBlICYgMjU1LCBlIC89IDI1NiwgZUxlbiAtPSA4KTtcbiAgYnVmZmVyWy0taV0gfD0gcyAqIDEyODtcbiAgcmV0dXJuIGJ1ZmZlcjtcbn1cbmZ1bmN0aW9uIHVucGFja0lFRUU3NTQoYnVmZmVyLCBtTGVuLCBuQnl0ZXMpIHtcbiAgdmFyIGVMZW4gPSBuQnl0ZXMgKiA4IC0gbUxlbiAtIDE7XG4gIHZhciBlTWF4ID0gKDEgPDwgZUxlbikgLSAxO1xuICB2YXIgZUJpYXMgPSBlTWF4ID4+IDE7XG4gIHZhciBuQml0cyA9IGVMZW4gLSA3O1xuICB2YXIgaSA9IG5CeXRlcyAtIDE7XG4gIHZhciBzID0gYnVmZmVyW2ktLV07XG4gIHZhciBlID0gcyAmIDEyNztcbiAgdmFyIG07XG4gIHMgPj49IDc7XG4gIGZvciAoOyBuQml0cyA+IDA7IGUgPSBlICogMjU2ICsgYnVmZmVyW2ldLCBpLS0sIG5CaXRzIC09IDgpO1xuICBtID0gZSAmICgxIDw8IC1uQml0cykgLSAxO1xuICBlID4+PSAtbkJpdHM7XG4gIG5CaXRzICs9IG1MZW47XG4gIGZvciAoOyBuQml0cyA+IDA7IG0gPSBtICogMjU2ICsgYnVmZmVyW2ldLCBpLS0sIG5CaXRzIC09IDgpO1xuICBpZiAoZSA9PT0gMCkge1xuICAgIGUgPSAxIC0gZUJpYXM7XG4gIH0gZWxzZSBpZiAoZSA9PT0gZU1heCkge1xuICAgIHJldHVybiBtID8gTmFOIDogcyA/IC1JbmZpbml0eSA6IEluZmluaXR5O1xuICB9IGVsc2Uge1xuICAgIG0gPSBtICsgcG93KDIsIG1MZW4pO1xuICAgIGUgPSBlIC0gZUJpYXM7XG4gIH0gcmV0dXJuIChzID8gLTEgOiAxKSAqIG0gKiBwb3coMiwgZSAtIG1MZW4pO1xufVxuXG5mdW5jdGlvbiB1bnBhY2tJMzIoYnl0ZXMpIHtcbiAgcmV0dXJuIGJ5dGVzWzNdIDw8IDI0IHwgYnl0ZXNbMl0gPDwgMTYgfCBieXRlc1sxXSA8PCA4IHwgYnl0ZXNbMF07XG59XG5mdW5jdGlvbiBwYWNrSTgoaXQpIHtcbiAgcmV0dXJuIFtpdCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0kxNihpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmZdO1xufVxuZnVuY3Rpb24gcGFja0kzMihpdCkge1xuICByZXR1cm4gW2l0ICYgMHhmZiwgaXQgPj4gOCAmIDB4ZmYsIGl0ID4+IDE2ICYgMHhmZiwgaXQgPj4gMjQgJiAweGZmXTtcbn1cbmZ1bmN0aW9uIHBhY2tGNjQoaXQpIHtcbiAgcmV0dXJuIHBhY2tJRUVFNzU0KGl0LCA1MiwgOCk7XG59XG5mdW5jdGlvbiBwYWNrRjMyKGl0KSB7XG4gIHJldHVybiBwYWNrSUVFRTc1NChpdCwgMjMsIDQpO1xufVxuXG5mdW5jdGlvbiBhZGRHZXR0ZXIoQywga2V5LCBpbnRlcm5hbCkge1xuICBkUChDW1BST1RPVFlQRV0sIGtleSwgeyBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXNbaW50ZXJuYWxdOyB9IH0pO1xufVxuXG5mdW5jdGlvbiBnZXQodmlldywgYnl0ZXMsIGluZGV4LCBpc0xpdHRsZUVuZGlhbikge1xuICB2YXIgbnVtSW5kZXggPSAraW5kZXg7XG4gIHZhciBpbnRJbmRleCA9IHRvSW5kZXgobnVtSW5kZXgpO1xuICBpZiAoaW50SW5kZXggKyBieXRlcyA+IHZpZXdbJExFTkdUSF0pIHRocm93IFJhbmdlRXJyb3IoV1JPTkdfSU5ERVgpO1xuICB2YXIgc3RvcmUgPSB2aWV3WyRCVUZGRVJdLl9iO1xuICB2YXIgc3RhcnQgPSBpbnRJbmRleCArIHZpZXdbJE9GRlNFVF07XG4gIHZhciBwYWNrID0gc3RvcmUuc2xpY2Uoc3RhcnQsIHN0YXJ0ICsgYnl0ZXMpO1xuICByZXR1cm4gaXNMaXR0bGVFbmRpYW4gPyBwYWNrIDogcGFjay5yZXZlcnNlKCk7XG59XG5mdW5jdGlvbiBzZXQodmlldywgYnl0ZXMsIGluZGV4LCBjb252ZXJzaW9uLCB2YWx1ZSwgaXNMaXR0bGVFbmRpYW4pIHtcbiAgdmFyIG51bUluZGV4ID0gK2luZGV4O1xuICB2YXIgaW50SW5kZXggPSB0b0luZGV4KG51bUluZGV4KTtcbiAgaWYgKGludEluZGV4ICsgYnl0ZXMgPiB2aWV3WyRMRU5HVEhdKSB0aHJvdyBSYW5nZUVycm9yKFdST05HX0lOREVYKTtcbiAgdmFyIHN0b3JlID0gdmlld1skQlVGRkVSXS5fYjtcbiAgdmFyIHN0YXJ0ID0gaW50SW5kZXggKyB2aWV3WyRPRkZTRVRdO1xuICB2YXIgcGFjayA9IGNvbnZlcnNpb24oK3ZhbHVlKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBieXRlczsgaSsrKSBzdG9yZVtzdGFydCArIGldID0gcGFja1tpc0xpdHRsZUVuZGlhbiA/IGkgOiBieXRlcyAtIGkgLSAxXTtcbn1cblxuaWYgKCEkdHlwZWQuQUJWKSB7XG4gICRBcnJheUJ1ZmZlciA9IGZ1bmN0aW9uIEFycmF5QnVmZmVyKGxlbmd0aCkge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuICAgIHZhciBieXRlTGVuZ3RoID0gdG9JbmRleChsZW5ndGgpO1xuICAgIHRoaXMuX2IgPSBhcnJheUZpbGwuY2FsbChuZXcgQXJyYXkoYnl0ZUxlbmd0aCksIDApO1xuICAgIHRoaXNbJExFTkdUSF0gPSBieXRlTGVuZ3RoO1xuICB9O1xuXG4gICREYXRhVmlldyA9IGZ1bmN0aW9uIERhdGFWaWV3KGJ1ZmZlciwgYnl0ZU9mZnNldCwgYnl0ZUxlbmd0aCkge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJERhdGFWaWV3LCBEQVRBX1ZJRVcpO1xuICAgIGFuSW5zdGFuY2UoYnVmZmVyLCAkQXJyYXlCdWZmZXIsIERBVEFfVklFVyk7XG4gICAgdmFyIGJ1ZmZlckxlbmd0aCA9IGJ1ZmZlclskTEVOR1RIXTtcbiAgICB2YXIgb2Zmc2V0ID0gdG9JbnRlZ2VyKGJ5dGVPZmZzZXQpO1xuICAgIGlmIChvZmZzZXQgPCAwIHx8IG9mZnNldCA+IGJ1ZmZlckxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcignV3Jvbmcgb2Zmc2V0IScpO1xuICAgIGJ5dGVMZW5ndGggPSBieXRlTGVuZ3RoID09PSB1bmRlZmluZWQgPyBidWZmZXJMZW5ndGggLSBvZmZzZXQgOiB0b0xlbmd0aChieXRlTGVuZ3RoKTtcbiAgICBpZiAob2Zmc2V0ICsgYnl0ZUxlbmd0aCA+IGJ1ZmZlckxlbmd0aCkgdGhyb3cgUmFuZ2VFcnJvcihXUk9OR19MRU5HVEgpO1xuICAgIHRoaXNbJEJVRkZFUl0gPSBidWZmZXI7XG4gICAgdGhpc1skT0ZGU0VUXSA9IG9mZnNldDtcbiAgICB0aGlzWyRMRU5HVEhdID0gYnl0ZUxlbmd0aDtcbiAgfTtcblxuICBpZiAoREVTQ1JJUFRPUlMpIHtcbiAgICBhZGRHZXR0ZXIoJEFycmF5QnVmZmVyLCBCWVRFX0xFTkdUSCwgJ19sJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQlVGRkVSLCAnX2InKTtcbiAgICBhZGRHZXR0ZXIoJERhdGFWaWV3LCBCWVRFX0xFTkdUSCwgJ19sJyk7XG4gICAgYWRkR2V0dGVyKCREYXRhVmlldywgQllURV9PRkZTRVQsICdfbycpO1xuICB9XG5cbiAgcmVkZWZpbmVBbGwoJERhdGFWaWV3W1BST1RPVFlQRV0sIHtcbiAgICBnZXRJbnQ4OiBmdW5jdGlvbiBnZXRJbnQ4KGJ5dGVPZmZzZXQpIHtcbiAgICAgIHJldHVybiBnZXQodGhpcywgMSwgYnl0ZU9mZnNldClbMF0gPDwgMjQgPj4gMjQ7XG4gICAgfSxcbiAgICBnZXRVaW50ODogZnVuY3Rpb24gZ2V0VWludDgoYnl0ZU9mZnNldCkge1xuICAgICAgcmV0dXJuIGdldCh0aGlzLCAxLCBieXRlT2Zmc2V0KVswXTtcbiAgICB9LFxuICAgIGdldEludDE2OiBmdW5jdGlvbiBnZXRJbnQxNihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICB2YXIgYnl0ZXMgPSBnZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKTtcbiAgICAgIHJldHVybiAoYnl0ZXNbMV0gPDwgOCB8IGJ5dGVzWzBdKSA8PCAxNiA+PiAxNjtcbiAgICB9LFxuICAgIGdldFVpbnQxNjogZnVuY3Rpb24gZ2V0VWludDE2KGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHZhciBieXRlcyA9IGdldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pO1xuICAgICAgcmV0dXJuIGJ5dGVzWzFdIDw8IDggfCBieXRlc1swXTtcbiAgICB9LFxuICAgIGdldEludDMyOiBmdW5jdGlvbiBnZXRJbnQzMihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSTMyKGdldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBhcmd1bWVudHNbMV0pKTtcbiAgICB9LFxuICAgIGdldFVpbnQzMjogZnVuY3Rpb24gZ2V0VWludDMyKGJ5dGVPZmZzZXQgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHJldHVybiB1bnBhY2tJMzIoZ2V0KHRoaXMsIDQsIGJ5dGVPZmZzZXQsIGFyZ3VtZW50c1sxXSkpID4+PiAwO1xuICAgIH0sXG4gICAgZ2V0RmxvYXQzMjogZnVuY3Rpb24gZ2V0RmxvYXQzMihieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSUVFRTc1NChnZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSwgMjMsIDQpO1xuICAgIH0sXG4gICAgZ2V0RmxvYXQ2NDogZnVuY3Rpb24gZ2V0RmxvYXQ2NChieXRlT2Zmc2V0IC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICByZXR1cm4gdW5wYWNrSUVFRTc1NChnZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgYXJndW1lbnRzWzFdKSwgNTIsIDgpO1xuICAgIH0sXG4gICAgc2V0SW50ODogZnVuY3Rpb24gc2V0SW50OChieXRlT2Zmc2V0LCB2YWx1ZSkge1xuICAgICAgc2V0KHRoaXMsIDEsIGJ5dGVPZmZzZXQsIHBhY2tJOCwgdmFsdWUpO1xuICAgIH0sXG4gICAgc2V0VWludDg6IGZ1bmN0aW9uIHNldFVpbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICBzZXQodGhpcywgMSwgYnl0ZU9mZnNldCwgcGFja0k4LCB2YWx1ZSk7XG4gICAgfSxcbiAgICBzZXRJbnQxNjogZnVuY3Rpb24gc2V0SW50MTYoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCAyLCBieXRlT2Zmc2V0LCBwYWNrSTE2LCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldFVpbnQxNjogZnVuY3Rpb24gc2V0VWludDE2KGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgMiwgYnl0ZU9mZnNldCwgcGFja0kxNiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRJbnQzMjogZnVuY3Rpb24gc2V0SW50MzIoYnl0ZU9mZnNldCwgdmFsdWUgLyogLCBsaXR0bGVFbmRpYW4gKi8pIHtcbiAgICAgIHNldCh0aGlzLCA0LCBieXRlT2Zmc2V0LCBwYWNrSTMyLCB2YWx1ZSwgYXJndW1lbnRzWzJdKTtcbiAgICB9LFxuICAgIHNldFVpbnQzMjogZnVuY3Rpb24gc2V0VWludDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgcGFja0kzMiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRGbG9hdDMyOiBmdW5jdGlvbiBzZXRGbG9hdDMyKGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgNCwgYnl0ZU9mZnNldCwgcGFja0YzMiwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfSxcbiAgICBzZXRGbG9hdDY0OiBmdW5jdGlvbiBzZXRGbG9hdDY0KGJ5dGVPZmZzZXQsIHZhbHVlIC8qICwgbGl0dGxlRW5kaWFuICovKSB7XG4gICAgICBzZXQodGhpcywgOCwgYnl0ZU9mZnNldCwgcGFja0Y2NCwgdmFsdWUsIGFyZ3VtZW50c1syXSk7XG4gICAgfVxuICB9KTtcbn0gZWxzZSB7XG4gIGlmICghZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgICRBcnJheUJ1ZmZlcigxKTtcbiAgfSkgfHwgIWZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgICBuZXcgJEFycmF5QnVmZmVyKC0xKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgfSkgfHwgZmFpbHMoZnVuY3Rpb24gKCkge1xuICAgIG5ldyAkQXJyYXlCdWZmZXIoKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXdcbiAgICBuZXcgJEFycmF5QnVmZmVyKDEuNSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tbmV3XG4gICAgbmV3ICRBcnJheUJ1ZmZlcihOYU4pOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLW5ld1xuICAgIHJldHVybiAkQXJyYXlCdWZmZXIubmFtZSAhPSBBUlJBWV9CVUZGRVI7XG4gIH0pKSB7XG4gICAgJEFycmF5QnVmZmVyID0gZnVuY3Rpb24gQXJyYXlCdWZmZXIobGVuZ3RoKSB7XG4gICAgICBhbkluc3RhbmNlKHRoaXMsICRBcnJheUJ1ZmZlcik7XG4gICAgICByZXR1cm4gbmV3IEJhc2VCdWZmZXIodG9JbmRleChsZW5ndGgpKTtcbiAgICB9O1xuICAgIHZhciBBcnJheUJ1ZmZlclByb3RvID0gJEFycmF5QnVmZmVyW1BST1RPVFlQRV0gPSBCYXNlQnVmZmVyW1BST1RPVFlQRV07XG4gICAgZm9yICh2YXIga2V5cyA9IGdPUE4oQmFzZUJ1ZmZlciksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajspIHtcbiAgICAgIGlmICghKChrZXkgPSBrZXlzW2orK10pIGluICRBcnJheUJ1ZmZlcikpIGhpZGUoJEFycmF5QnVmZmVyLCBrZXksIEJhc2VCdWZmZXJba2V5XSk7XG4gICAgfVxuICAgIGlmICghTElCUkFSWSkgQXJyYXlCdWZmZXJQcm90by5jb25zdHJ1Y3RvciA9ICRBcnJheUJ1ZmZlcjtcbiAgfVxuICAvLyBpT1MgU2FmYXJpIDcueCBidWdcbiAgdmFyIHZpZXcgPSBuZXcgJERhdGFWaWV3KG5ldyAkQXJyYXlCdWZmZXIoMikpO1xuICB2YXIgJHNldEludDggPSAkRGF0YVZpZXdbUFJPVE9UWVBFXS5zZXRJbnQ4O1xuICB2aWV3LnNldEludDgoMCwgMjE0NzQ4MzY0OCk7XG4gIHZpZXcuc2V0SW50OCgxLCAyMTQ3NDgzNjQ5KTtcbiAgaWYgKHZpZXcuZ2V0SW50OCgwKSB8fCAhdmlldy5nZXRJbnQ4KDEpKSByZWRlZmluZUFsbCgkRGF0YVZpZXdbUFJPVE9UWVBFXSwge1xuICAgIHNldEludDg6IGZ1bmN0aW9uIHNldEludDgoYnl0ZU9mZnNldCwgdmFsdWUpIHtcbiAgICAgICRzZXRJbnQ4LmNhbGwodGhpcywgYnl0ZU9mZnNldCwgdmFsdWUgPDwgMjQgPj4gMjQpO1xuICAgIH0sXG4gICAgc2V0VWludDg6IGZ1bmN0aW9uIHNldFVpbnQ4KGJ5dGVPZmZzZXQsIHZhbHVlKSB7XG4gICAgICAkc2V0SW50OC5jYWxsKHRoaXMsIGJ5dGVPZmZzZXQsIHZhbHVlIDw8IDI0ID4+IDI0KTtcbiAgICB9XG4gIH0sIHRydWUpO1xufVxuc2V0VG9TdHJpbmdUYWcoJEFycmF5QnVmZmVyLCBBUlJBWV9CVUZGRVIpO1xuc2V0VG9TdHJpbmdUYWcoJERhdGFWaWV3LCBEQVRBX1ZJRVcpO1xuaGlkZSgkRGF0YVZpZXdbUFJPVE9UWVBFXSwgJHR5cGVkLlZJRVcsIHRydWUpO1xuZXhwb3J0c1tBUlJBWV9CVUZGRVJdID0gJEFycmF5QnVmZmVyO1xuZXhwb3J0c1tEQVRBX1ZJRVddID0gJERhdGFWaWV3O1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhpZGUgPSByZXF1aXJlKCcuL19oaWRlJyk7XG52YXIgdWlkID0gcmVxdWlyZSgnLi9fdWlkJyk7XG52YXIgVFlQRUQgPSB1aWQoJ3R5cGVkX2FycmF5Jyk7XG52YXIgVklFVyA9IHVpZCgndmlldycpO1xudmFyIEFCViA9ICEhKGdsb2JhbC5BcnJheUJ1ZmZlciAmJiBnbG9iYWwuRGF0YVZpZXcpO1xudmFyIENPTlNUUiA9IEFCVjtcbnZhciBpID0gMDtcbnZhciBsID0gOTtcbnZhciBUeXBlZDtcblxudmFyIFR5cGVkQXJyYXlDb25zdHJ1Y3RvcnMgPSAoXG4gICdJbnQ4QXJyYXksVWludDhBcnJheSxVaW50OENsYW1wZWRBcnJheSxJbnQxNkFycmF5LFVpbnQxNkFycmF5LEludDMyQXJyYXksVWludDMyQXJyYXksRmxvYXQzMkFycmF5LEZsb2F0NjRBcnJheSdcbikuc3BsaXQoJywnKTtcblxud2hpbGUgKGkgPCBsKSB7XG4gIGlmIChUeXBlZCA9IGdsb2JhbFtUeXBlZEFycmF5Q29uc3RydWN0b3JzW2krK11dKSB7XG4gICAgaGlkZShUeXBlZC5wcm90b3R5cGUsIFRZUEVELCB0cnVlKTtcbiAgICBoaWRlKFR5cGVkLnByb3RvdHlwZSwgVklFVywgdHJ1ZSk7XG4gIH0gZWxzZSBDT05TVFIgPSBmYWxzZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIEFCVjogQUJWLFxuICBDT05TVFI6IENPTlNUUixcbiAgVFlQRUQ6IFRZUEVELFxuICBWSUVXOiBWSUVXXG59O1xuIiwidmFyIGlkID0gMDtcbnZhciBweCA9IE1hdGgucmFuZG9tKCk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuICdTeW1ib2woJy5jb25jYXQoa2V5ID09PSB1bmRlZmluZWQgPyAnJyA6IGtleSwgJylfJywgKCsraWQgKyBweCkudG9TdHJpbmcoMzYpKTtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgbmF2aWdhdG9yID0gZ2xvYmFsLm5hdmlnYXRvcjtcblxubW9kdWxlLmV4cG9ydHMgPSBuYXZpZ2F0b3IgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudCB8fCAnJztcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIFRZUEUpIHtcbiAgaWYgKCFpc09iamVjdChpdCkgfHwgaXQuX3QgIT09IFRZUEUpIHRocm93IFR5cGVFcnJvcignSW5jb21wYXRpYmxlIHJlY2VpdmVyLCAnICsgVFlQRSArICcgcmVxdWlyZWQhJyk7XG4gIHJldHVybiBpdDtcbn07XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciBkZWZpbmVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHZhciAkU3ltYm9sID0gY29yZS5TeW1ib2wgfHwgKGNvcmUuU3ltYm9sID0gTElCUkFSWSA/IHt9IDogZ2xvYmFsLlN5bWJvbCB8fCB7fSk7XG4gIGlmIChuYW1lLmNoYXJBdCgwKSAhPSAnXycgJiYgIShuYW1lIGluICRTeW1ib2wpKSBkZWZpbmVQcm9wZXJ0eSgkU3ltYm9sLCBuYW1lLCB7IHZhbHVlOiB3a3NFeHQuZihuYW1lKSB9KTtcbn07XG4iLCJleHBvcnRzLmYgPSByZXF1aXJlKCcuL193a3MnKTtcbiIsInZhciBzdG9yZSA9IHJlcXVpcmUoJy4vX3NoYXJlZCcpKCd3a3MnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbnZhciBTeW1ib2wgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5TeW1ib2w7XG52YXIgVVNFX1NZTUJPTCA9IHR5cGVvZiBTeW1ib2wgPT0gJ2Z1bmN0aW9uJztcblxudmFyICRleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobmFtZSkge1xuICByZXR1cm4gc3RvcmVbbmFtZV0gfHwgKHN0b3JlW25hbWVdID1cbiAgICBVU0VfU1lNQk9MICYmIFN5bWJvbFtuYW1lXSB8fCAoVVNFX1NZTUJPTCA/IFN5bWJvbCA6IHVpZCkoJ1N5bWJvbC4nICsgbmFtZSkpO1xufTtcblxuJGV4cG9ydHMuc3RvcmUgPSBzdG9yZTtcbiIsInZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvcmUnKS5nZXRJdGVyYXRvck1ldGhvZCA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgIT0gdW5kZWZpbmVkKSByZXR1cm4gaXRbSVRFUkFUT1JdXG4gICAgfHwgaXRbJ0BAaXRlcmF0b3InXVxuICAgIHx8IEl0ZXJhdG9yc1tjbGFzc29mKGl0KV07XG59O1xuIiwiLy8gMjIuMS4zLjMgQXJyYXkucHJvdG90eXBlLmNvcHlXaXRoaW4odGFyZ2V0LCBzdGFydCwgZW5kID0gdGhpcy5sZW5ndGgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5JywgeyBjb3B5V2l0aGluOiByZXF1aXJlKCcuL19hcnJheS1jb3B5LXdpdGhpbicpIH0pO1xuXG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKSgnY29weVdpdGhpbicpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZXZlcnkgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoNCk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5ldmVyeSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjUgLyAxNS40LjQuMTYgQXJyYXkucHJvdG90eXBlLmV2ZXJ5KGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGV2ZXJ5OiBmdW5jdGlvbiBldmVyeShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZXZlcnkodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIvLyAyMi4xLjMuNiBBcnJheS5wcm90b3R5cGUuZmlsbCh2YWx1ZSwgc3RhcnQgPSAwLCBlbmQgPSB0aGlzLmxlbmd0aClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnQXJyYXknLCB7IGZpbGw6IHJlcXVpcmUoJy4vX2FycmF5LWZpbGwnKSB9KTtcblxucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoJ2ZpbGwnKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZpbHRlciA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSgyKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZpbHRlciwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjcgLyAxNS40LjQuMjAgQXJyYXkucHJvdG90eXBlLmZpbHRlcihjYWxsYmFja2ZuIFssIHRoaXNBcmddKVxuICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcihjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkZmlsdGVyKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjkgQXJyYXkucHJvdG90eXBlLmZpbmRJbmRleChwcmVkaWNhdGUsIHRoaXNBcmcgPSB1bmRlZmluZWQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRmaW5kID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDYpO1xudmFyIEtFWSA9ICdmaW5kSW5kZXgnO1xudmFyIGZvcmNlZCA9IHRydWU7XG4vLyBTaG91bGRuJ3Qgc2tpcCBob2xlc1xuaWYgKEtFWSBpbiBbXSkgQXJyYXkoMSlbS0VZXShmdW5jdGlvbiAoKSB7IGZvcmNlZCA9IGZhbHNlOyB9KTtcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogZm9yY2VkLCAnQXJyYXknLCB7XG4gIGZpbmRJbmRleDogZnVuY3Rpb24gZmluZEluZGV4KGNhbGxiYWNrZm4gLyogLCB0aGF0ID0gdW5kZWZpbmVkICovKSB7XG4gICAgcmV0dXJuICRmaW5kKHRoaXMsIGNhbGxiYWNrZm4sIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5yZXF1aXJlKCcuL19hZGQtdG8tdW5zY29wYWJsZXMnKShLRVkpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjggQXJyYXkucHJvdG90eXBlLmZpbmQocHJlZGljYXRlLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmluZCA9IHJlcXVpcmUoJy4vX2FycmF5LW1ldGhvZHMnKSg1KTtcbnZhciBLRVkgPSAnZmluZCc7XG52YXIgZm9yY2VkID0gdHJ1ZTtcbi8vIFNob3VsZG4ndCBza2lwIGhvbGVzXG5pZiAoS0VZIGluIFtdKSBBcnJheSgxKVtLRVldKGZ1bmN0aW9uICgpIHsgZm9yY2VkID0gZmFsc2U7IH0pO1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBmb3JjZWQsICdBcnJheScsIHtcbiAgZmluZDogZnVuY3Rpb24gZmluZChjYWxsYmFja2ZuIC8qICwgdGhhdCA9IHVuZGVmaW5lZCAqLykge1xuICAgIHJldHVybiAkZmluZCh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCk7XG4gIH1cbn0pO1xucmVxdWlyZSgnLi9fYWRkLXRvLXVuc2NvcGFibGVzJykoS0VZKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGZvckVhY2ggPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMCk7XG52YXIgU1RSSUNUID0gcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLmZvckVhY2gsIHRydWUpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICFTVFJJQ1QsICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjEwIC8gMTUuNC40LjE4IEFycmF5LnByb3RvdHlwZS5mb3JFYWNoKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIGZvckVhY2g6IGZ1bmN0aW9uIGZvckVhY2goY2FsbGJhY2tmbiAvKiAsIHRoaXNBcmcgKi8pIHtcbiAgICByZXR1cm4gJGZvckVhY2godGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3R4ID0gcmVxdWlyZSgnLi9fY3R4Jyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgY2FsbCA9IHJlcXVpcmUoJy4vX2l0ZXItY2FsbCcpO1xudmFyIGlzQXJyYXlJdGVyID0gcmVxdWlyZSgnLi9faXMtYXJyYXktaXRlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcbnZhciBnZXRJdGVyRm4gPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7IEFycmF5LmZyb20oaXRlcik7IH0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4xIEFycmF5LmZyb20oYXJyYXlMaWtlLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZClcbiAgZnJvbTogZnVuY3Rpb24gZnJvbShhcnJheUxpa2UgLyogLCBtYXBmbiA9IHVuZGVmaW5lZCwgdGhpc0FyZyA9IHVuZGVmaW5lZCAqLykge1xuICAgIHZhciBPID0gdG9PYmplY3QoYXJyYXlMaWtlKTtcbiAgICB2YXIgQyA9IHR5cGVvZiB0aGlzID09ICdmdW5jdGlvbicgPyB0aGlzIDogQXJyYXk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciBtYXBmbiA9IGFMZW4gPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkO1xuICAgIHZhciBtYXBwaW5nID0gbWFwZm4gIT09IHVuZGVmaW5lZDtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBpdGVyRm4gPSBnZXRJdGVyRm4oTyk7XG4gICAgdmFyIGxlbmd0aCwgcmVzdWx0LCBzdGVwLCBpdGVyYXRvcjtcbiAgICBpZiAobWFwcGluZykgbWFwZm4gPSBjdHgobWFwZm4sIGFMZW4gPiAyID8gYXJndW1lbnRzWzJdIDogdW5kZWZpbmVkLCAyKTtcbiAgICAvLyBpZiBvYmplY3QgaXNuJ3QgaXRlcmFibGUgb3IgaXQncyBhcnJheSB3aXRoIGRlZmF1bHQgaXRlcmF0b3IgLSB1c2Ugc2ltcGxlIGNhc2VcbiAgICBpZiAoaXRlckZuICE9IHVuZGVmaW5lZCAmJiAhKEMgPT0gQXJyYXkgJiYgaXNBcnJheUl0ZXIoaXRlckZuKSkpIHtcbiAgICAgIGZvciAoaXRlcmF0b3IgPSBpdGVyRm4uY2FsbChPKSwgcmVzdWx0ID0gbmV3IEMoKTsgIShzdGVwID0gaXRlcmF0b3IubmV4dCgpKS5kb25lOyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBjYWxsKGl0ZXJhdG9yLCBtYXBmbiwgW3N0ZXAudmFsdWUsIGluZGV4XSwgdHJ1ZSkgOiBzdGVwLnZhbHVlKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgICAgZm9yIChyZXN1bHQgPSBuZXcgQyhsZW5ndGgpOyBsZW5ndGggPiBpbmRleDsgaW5kZXgrKykge1xuICAgICAgICBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBtYXBwaW5nID8gbWFwZm4oT1tpbmRleF0sIGluZGV4KSA6IE9baW5kZXhdKTtcbiAgICAgIH1cbiAgICB9XG4gICAgcmVzdWx0Lmxlbmd0aCA9IGluZGV4O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW5kZXhPZiA9IHJlcXVpcmUoJy4vX2FycmF5LWluY2x1ZGVzJykoZmFsc2UpO1xudmFyICRuYXRpdmUgPSBbXS5pbmRleE9mO1xudmFyIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5pbmRleE9mKDEsIC0wKSA8IDA7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKE5FR0FUSVZFX1pFUk8gfHwgIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKSgkbmF0aXZlKSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjExIC8gMTUuNC40LjE0IEFycmF5LnByb3RvdHlwZS5pbmRleE9mKHNlYXJjaEVsZW1lbnQgWywgZnJvbUluZGV4XSlcbiAgaW5kZXhPZjogZnVuY3Rpb24gaW5kZXhPZihzZWFyY2hFbGVtZW50IC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiBORUdBVElWRV9aRVJPXG4gICAgICAvLyBjb252ZXJ0IC0wIHRvICswXG4gICAgICA/ICRuYXRpdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCAwXG4gICAgICA6ICRpbmRleE9mKHRoaXMsIHNlYXJjaEVsZW1lbnQsIGFyZ3VtZW50c1sxXSk7XG4gIH1cbn0pO1xuIiwiLy8gMjIuMS4yLjIgLyAxNS40LjMuMiBBcnJheS5pc0FycmF5KGFyZylcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnQXJyYXknLCB7IGlzQXJyYXk6IHJlcXVpcmUoJy4vX2lzLWFycmF5JykgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG5cbi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKClcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpXG4vLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpXG4vLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBraW5kID0gdGhpcy5faztcbiAgdmFyIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZiAoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpIHtcbiAgICB0aGlzLl90ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBzdGVwKDEpO1xuICB9XG4gIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgaW5kZXgpO1xuICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjIuMS4zLjEzIEFycmF5LnByb3RvdHlwZS5qb2luKHNlcGFyYXRvcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIGFycmF5Sm9pbiA9IFtdLmpvaW47XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBzdHJpbmdzXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChyZXF1aXJlKCcuL19pb2JqZWN0JykgIT0gT2JqZWN0IHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoYXJyYXlKb2luKSksICdBcnJheScsIHtcbiAgam9pbjogZnVuY3Rpb24gam9pbihzZXBhcmF0b3IpIHtcbiAgICByZXR1cm4gYXJyYXlKb2luLmNhbGwodG9JT2JqZWN0KHRoaXMpLCBzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCA/ICcsJyA6IHNlcGFyYXRvcik7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgJG5hdGl2ZSA9IFtdLmxhc3RJbmRleE9mO1xudmFyIE5FR0FUSVZFX1pFUk8gPSAhISRuYXRpdmUgJiYgMSAvIFsxXS5sYXN0SW5kZXhPZigxLCAtMCkgPCAwO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChORUdBVElWRV9aRVJPIHx8ICFyZXF1aXJlKCcuL19zdHJpY3QtbWV0aG9kJykoJG5hdGl2ZSkpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xNCAvIDE1LjQuNC4xNSBBcnJheS5wcm90b3R5cGUubGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCBbLCBmcm9tSW5kZXhdKVxuICBsYXN0SW5kZXhPZjogZnVuY3Rpb24gbGFzdEluZGV4T2Yoc2VhcmNoRWxlbWVudCAvKiAsIGZyb21JbmRleCA9IEBbKi0xXSAqLykge1xuICAgIC8vIGNvbnZlcnQgLTAgdG8gKzBcbiAgICBpZiAoTkVHQVRJVkVfWkVSTykgcmV0dXJuICRuYXRpdmUuYXBwbHkodGhpcywgYXJndW1lbnRzKSB8fCAwO1xuICAgIHZhciBPID0gdG9JT2JqZWN0KHRoaXMpO1xuICAgIHZhciBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgdmFyIGluZGV4ID0gbGVuZ3RoIC0gMTtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIGluZGV4ID0gTWF0aC5taW4oaW5kZXgsIHRvSW50ZWdlcihhcmd1bWVudHNbMV0pKTtcbiAgICBpZiAoaW5kZXggPCAwKSBpbmRleCA9IGxlbmd0aCArIGluZGV4O1xuICAgIGZvciAoO2luZGV4ID49IDA7IGluZGV4LS0pIGlmIChpbmRleCBpbiBPKSBpZiAoT1tpbmRleF0gPT09IHNlYXJjaEVsZW1lbnQpIHJldHVybiBpbmRleCB8fCAwO1xuICAgIHJldHVybiAtMTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRtYXAgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5tYXAsIHRydWUpLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMy4xNSAvIDE1LjQuNC4xOSBBcnJheS5wcm90b3R5cGUubWFwKGNhbGxiYWNrZm4gWywgdGhpc0FyZ10pXG4gIG1hcDogZnVuY3Rpb24gbWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgcmV0dXJuICRtYXAodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZVByb3BlcnR5ID0gcmVxdWlyZSgnLi9fY3JlYXRlLXByb3BlcnR5Jyk7XG5cbi8vIFdlYktpdCBBcnJheS5vZiBpc24ndCBnZW5lcmljXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBGKCkgeyAvKiBlbXB0eSAqLyB9XG4gIHJldHVybiAhKEFycmF5Lm9mLmNhbGwoRikgaW5zdGFuY2VvZiBGKTtcbn0pLCAnQXJyYXknLCB7XG4gIC8vIDIyLjEuMi4zIEFycmF5Lm9mKCAuLi5pdGVtcylcbiAgb2Y6IGZ1bmN0aW9uIG9mKC8qIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgaW5kZXggPSAwO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgcmVzdWx0ID0gbmV3ICh0eXBlb2YgdGhpcyA9PSAnZnVuY3Rpb24nID8gdGhpcyA6IEFycmF5KShhTGVuKTtcbiAgICB3aGlsZSAoYUxlbiA+IGluZGV4KSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGluZGV4LCBhcmd1bWVudHNbaW5kZXgrK10pO1xuICAgIHJlc3VsdC5sZW5ndGggPSBhTGVuO1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcmVkdWNlID0gcmVxdWlyZSgnLi9fYXJyYXktcmVkdWNlJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5yZWR1Y2VSaWdodCwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE5IC8gMTUuNC40LjIyIEFycmF5LnByb3RvdHlwZS5yZWR1Y2VSaWdodChjYWxsYmFja2ZuIFssIGluaXRpYWxWYWx1ZV0pXG4gIHJlZHVjZVJpZ2h0OiBmdW5jdGlvbiByZWR1Y2VSaWdodChjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCB0cnVlKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRyZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheS1yZWR1Y2UnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKFtdLnJlZHVjZSwgdHJ1ZSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjE4IC8gMTUuNC40LjIxIEFycmF5LnByb3RvdHlwZS5yZWR1Y2UoY2FsbGJhY2tmbiBbLCBpbml0aWFsVmFsdWVdKVxuICByZWR1Y2U6IGZ1bmN0aW9uIHJlZHVjZShjYWxsYmFja2ZuIC8qICwgaW5pdGlhbFZhbHVlICovKSB7XG4gICAgcmV0dXJuICRyZWR1Y2UodGhpcywgY2FsbGJhY2tmbiwgYXJndW1lbnRzLmxlbmd0aCwgYXJndW1lbnRzWzFdLCBmYWxzZSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBodG1sID0gcmVxdWlyZSgnLi9faHRtbCcpO1xudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIHRvQWJzb2x1dGVJbmRleCA9IHJlcXVpcmUoJy4vX3RvLWFic29sdXRlLWluZGV4Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBhcnJheVNsaWNlID0gW10uc2xpY2U7XG5cbi8vIGZhbGxiYWNrIGZvciBub3QgYXJyYXktbGlrZSBFUzMgc3RyaW5ncyBhbmQgRE9NIG9iamVjdHNcbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIGlmIChodG1sKSBhcnJheVNsaWNlLmNhbGwoaHRtbCk7XG59KSwgJ0FycmF5Jywge1xuICBzbGljZTogZnVuY3Rpb24gc2xpY2UoYmVnaW4sIGVuZCkge1xuICAgIHZhciBsZW4gPSB0b0xlbmd0aCh0aGlzLmxlbmd0aCk7XG4gICAgdmFyIGtsYXNzID0gY29mKHRoaXMpO1xuICAgIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogZW5kO1xuICAgIGlmIChrbGFzcyA9PSAnQXJyYXknKSByZXR1cm4gYXJyYXlTbGljZS5jYWxsKHRoaXMsIGJlZ2luLCBlbmQpO1xuICAgIHZhciBzdGFydCA9IHRvQWJzb2x1dGVJbmRleChiZWdpbiwgbGVuKTtcbiAgICB2YXIgdXBUbyA9IHRvQWJzb2x1dGVJbmRleChlbmQsIGxlbik7XG4gICAgdmFyIHNpemUgPSB0b0xlbmd0aCh1cFRvIC0gc3RhcnQpO1xuICAgIHZhciBjbG9uZWQgPSBuZXcgQXJyYXkoc2l6ZSk7XG4gICAgdmFyIGkgPSAwO1xuICAgIGZvciAoOyBpIDwgc2l6ZTsgaSsrKSBjbG9uZWRbaV0gPSBrbGFzcyA9PSAnU3RyaW5nJ1xuICAgICAgPyB0aGlzLmNoYXJBdChzdGFydCArIGkpXG4gICAgICA6IHRoaXNbc3RhcnQgKyBpXTtcbiAgICByZXR1cm4gY2xvbmVkO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHNvbWUgPSByZXF1aXJlKCcuL19hcnJheS1tZXRob2RzJykoMyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3N0cmljdC1tZXRob2QnKShbXS5zb21lLCB0cnVlKSwgJ0FycmF5Jywge1xuICAvLyAyMi4xLjMuMjMgLyAxNS40LjQuMTcgQXJyYXkucHJvdG90eXBlLnNvbWUoY2FsbGJhY2tmbiBbLCB0aGlzQXJnXSlcbiAgc29tZTogZnVuY3Rpb24gc29tZShjYWxsYmFja2ZuIC8qICwgdGhpc0FyZyAqLykge1xuICAgIHJldHVybiAkc29tZSh0aGlzLCBjYWxsYmFja2ZuLCBhcmd1bWVudHNbMV0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyICRzb3J0ID0gW10uc29ydDtcbnZhciB0ZXN0ID0gWzEsIDIsIDNdO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIChmYWlscyhmdW5jdGlvbiAoKSB7XG4gIC8vIElFOC1cbiAgdGVzdC5zb3J0KHVuZGVmaW5lZCk7XG59KSB8fCAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBWOCBidWdcbiAgdGVzdC5zb3J0KG51bGwpO1xuICAvLyBPbGQgV2ViS2l0XG59KSB8fCAhcmVxdWlyZSgnLi9fc3RyaWN0LW1ldGhvZCcpKCRzb3J0KSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4zLjI1IEFycmF5LnByb3RvdHlwZS5zb3J0KGNvbXBhcmVmbilcbiAgc29ydDogZnVuY3Rpb24gc29ydChjb21wYXJlZm4pIHtcbiAgICByZXR1cm4gY29tcGFyZWZuID09PSB1bmRlZmluZWRcbiAgICAgID8gJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSlcbiAgICAgIDogJHNvcnQuY2FsbCh0b09iamVjdCh0aGlzKSwgYUZ1bmN0aW9uKGNvbXBhcmVmbikpO1xuICB9XG59KTtcbiIsInJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ0FycmF5Jyk7XG4iLCIvLyAyMC4zLjMuMSAvIDE1LjkuNC40IERhdGUubm93KClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnRGF0ZScsIHsgbm93OiBmdW5jdGlvbiAoKSB7IHJldHVybiBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSB9KTtcbiIsIi8vIDIwLjMuNC4zNiAvIDE1LjkuNS40MyBEYXRlLnByb3RvdHlwZS50b0lTT1N0cmluZygpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSVNPU3RyaW5nID0gcmVxdWlyZSgnLi9fZGF0ZS10by1pc28tc3RyaW5nJyk7XG5cbi8vIFBoYW50b21KUyAvIG9sZCBXZWJLaXQgaGFzIGEgYnJva2VuIGltcGxlbWVudGF0aW9uc1xuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoRGF0ZS5wcm90b3R5cGUudG9JU09TdHJpbmcgIT09IHRvSVNPU3RyaW5nKSwgJ0RhdGUnLCB7XG4gIHRvSVNPU3RyaW5nOiB0b0lTT1N0cmluZ1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIG5ldyBEYXRlKE5hTikudG9KU09OKCkgIT09IG51bGxcbiAgICB8fCBEYXRlLnByb3RvdHlwZS50b0pTT04uY2FsbCh7IHRvSVNPU3RyaW5nOiBmdW5jdGlvbiAoKSB7IHJldHVybiAxOyB9IH0pICE9PSAxO1xufSksICdEYXRlJywge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbiAgdG9KU09OOiBmdW5jdGlvbiB0b0pTT04oa2V5KSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgcHYgPSB0b1ByaW1pdGl2ZShPKTtcbiAgICByZXR1cm4gdHlwZW9mIHB2ID09ICdudW1iZXInICYmICFpc0Zpbml0ZShwdikgPyBudWxsIDogTy50b0lTT1N0cmluZygpO1xuICB9XG59KTtcbiIsInZhciBUT19QUklNSVRJVkUgPSByZXF1aXJlKCcuL193a3MnKSgndG9QcmltaXRpdmUnKTtcbnZhciBwcm90byA9IERhdGUucHJvdG90eXBlO1xuXG5pZiAoIShUT19QUklNSVRJVkUgaW4gcHJvdG8pKSByZXF1aXJlKCcuL19oaWRlJykocHJvdG8sIFRPX1BSSU1JVElWRSwgcmVxdWlyZSgnLi9fZGF0ZS10by1wcmltaXRpdmUnKSk7XG4iLCJ2YXIgRGF0ZVByb3RvID0gRGF0ZS5wcm90b3R5cGU7XG52YXIgSU5WQUxJRF9EQVRFID0gJ0ludmFsaWQgRGF0ZSc7XG52YXIgVE9fU1RSSU5HID0gJ3RvU3RyaW5nJztcbnZhciAkdG9TdHJpbmcgPSBEYXRlUHJvdG9bVE9fU1RSSU5HXTtcbnZhciBnZXRUaW1lID0gRGF0ZVByb3RvLmdldFRpbWU7XG5pZiAobmV3IERhdGUoTmFOKSArICcnICE9IElOVkFMSURfREFURSkge1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKERhdGVQcm90bywgVE9fU1RSSU5HLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICB2YXIgdmFsdWUgPSBnZXRUaW1lLmNhbGwodGhpcyk7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiB2YWx1ZSA9PT0gdmFsdWUgPyAkdG9TdHJpbmcuY2FsbCh0aGlzKSA6IElOVkFMSURfREFURTtcbiAgfSk7XG59XG4iLCIvLyAxOS4yLjMuMiAvIDE1LjMuNC41IEZ1bmN0aW9uLnByb3RvdHlwZS5iaW5kKHRoaXNBcmcsIGFyZ3MuLi4pXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0Z1bmN0aW9uJywgeyBiaW5kOiByZXF1aXJlKCcuL19iaW5kJykgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBIQVNfSU5TVEFOQ0UgPSByZXF1aXJlKCcuL193a3MnKSgnaGFzSW5zdGFuY2UnKTtcbnZhciBGdW5jdGlvblByb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlO1xuLy8gMTkuMi4zLjYgRnVuY3Rpb24ucHJvdG90eXBlW0BAaGFzSW5zdGFuY2VdKFYpXG5pZiAoIShIQVNfSU5TVEFOQ0UgaW4gRnVuY3Rpb25Qcm90bykpIHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmYoRnVuY3Rpb25Qcm90bywgSEFTX0lOU1RBTkNFLCB7IHZhbHVlOiBmdW5jdGlvbiAoTykge1xuICBpZiAodHlwZW9mIHRoaXMgIT0gJ2Z1bmN0aW9uJyB8fCAhaXNPYmplY3QoTykpIHJldHVybiBmYWxzZTtcbiAgaWYgKCFpc09iamVjdCh0aGlzLnByb3RvdHlwZSkpIHJldHVybiBPIGluc3RhbmNlb2YgdGhpcztcbiAgLy8gZm9yIGVudmlyb25tZW50IHcvbyBuYXRpdmUgYEBAaGFzSW5zdGFuY2VgIGxvZ2ljIGVub3VnaCBgaW5zdGFuY2VvZmAsIGJ1dCBhZGQgdGhpczpcbiAgd2hpbGUgKE8gPSBnZXRQcm90b3R5cGVPZihPKSkgaWYgKHRoaXMucHJvdG90eXBlID09PSBPKSByZXR1cm4gdHJ1ZTtcbiAgcmV0dXJuIGZhbHNlO1xufSB9KTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgRlByb3RvID0gRnVuY3Rpb24ucHJvdG90eXBlO1xudmFyIG5hbWVSRSA9IC9eXFxzKmZ1bmN0aW9uIChbXiAoXSopLztcbnZhciBOQU1FID0gJ25hbWUnO1xuXG4vLyAxOS4yLjQuMiBuYW1lXG5OQU1FIGluIEZQcm90byB8fCByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIGRQKEZQcm90bywgTkFNRSwge1xuICBjb25maWd1cmFibGU6IHRydWUsXG4gIGdldDogZnVuY3Rpb24gKCkge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4gKCcnICsgdGhpcykubWF0Y2gobmFtZVJFKVsxXTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBzdHJvbmcgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uLXN0cm9uZycpO1xudmFyIHZhbGlkYXRlID0gcmVxdWlyZSgnLi9fdmFsaWRhdGUtY29sbGVjdGlvbicpO1xudmFyIE1BUCA9ICdNYXAnO1xuXG4vLyAyMy4xIE1hcCBPYmplY3RzXG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vX2NvbGxlY3Rpb24nKShNQVAsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIE1hcCgpIHsgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7IH07XG59LCB7XG4gIC8vIDIzLjEuMy42IE1hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgdmFyIGVudHJ5ID0gc3Ryb25nLmdldEVudHJ5KHZhbGlkYXRlKHRoaXMsIE1BUCksIGtleSk7XG4gICAgcmV0dXJuIGVudHJ5ICYmIGVudHJ5LnY7XG4gIH0sXG4gIC8vIDIzLjEuMy45IE1hcC5wcm90b3R5cGUuc2V0KGtleSwgdmFsdWUpXG4gIHNldDogZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBNQVApLCBrZXkgPT09IDAgPyAwIDoga2V5LCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZywgdHJ1ZSk7XG4iLCIvLyAyMC4yLjIuMyBNYXRoLmFjb3NoKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGxvZzFwID0gcmVxdWlyZSgnLi9fbWF0aC1sb2cxcCcpO1xudmFyIHNxcnQgPSBNYXRoLnNxcnQ7XG52YXIgJGFjb3NoID0gTWF0aC5hY29zaDtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhKCRhY29zaFxuICAvLyBWOCBidWc6IGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvdjgvaXNzdWVzL2RldGFpbD9pZD0zNTA5XG4gICYmIE1hdGguZmxvb3IoJGFjb3NoKE51bWJlci5NQVhfVkFMVUUpKSA9PSA3MTBcbiAgLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmFjb3NoKEluZmluaXR5KSAtPiBOYU5cbiAgJiYgJGFjb3NoKEluZmluaXR5KSA9PSBJbmZpbml0eVxuKSwgJ01hdGgnLCB7XG4gIGFjb3NoOiBmdW5jdGlvbiBhY29zaCh4KSB7XG4gICAgcmV0dXJuICh4ID0gK3gpIDwgMSA/IE5hTiA6IHggPiA5NDkwNjI2NS42MjQyNTE1NlxuICAgICAgPyBNYXRoLmxvZyh4KSArIE1hdGguTE4yXG4gICAgICA6IGxvZzFwKHggLSAxICsgc3FydCh4IC0gMSkgKiBzcXJ0KHggKyAxKSk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjUgTWF0aC5hc2luaCh4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkYXNpbmggPSBNYXRoLmFzaW5oO1xuXG5mdW5jdGlvbiBhc2luaCh4KSB7XG4gIHJldHVybiAhaXNGaW5pdGUoeCA9ICt4KSB8fCB4ID09IDAgPyB4IDogeCA8IDAgPyAtYXNpbmgoLXgpIDogTWF0aC5sb2coeCArIE1hdGguc3FydCh4ICogeCArIDEpKTtcbn1cblxuLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmFzaW5oKDApIC0+IC0wXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGFzaW5oICYmIDEgLyAkYXNpbmgoMCkgPiAwKSwgJ01hdGgnLCB7IGFzaW5oOiBhc2luaCB9KTtcbiIsIi8vIDIwLjIuMi43IE1hdGguYXRhbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0YW5oID0gTWF0aC5hdGFuaDtcblxuLy8gVG9yIEJyb3dzZXIgYnVnOiBNYXRoLmF0YW5oKC0wKSAtPiAwXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoJGF0YW5oICYmIDEgLyAkYXRhbmgoLTApIDwgMCksICdNYXRoJywge1xuICBhdGFuaDogZnVuY3Rpb24gYXRhbmgoeCkge1xuICAgIHJldHVybiAoeCA9ICt4KSA9PSAwID8geCA6IE1hdGgubG9nKCgxICsgeCkgLyAoMSAtIHgpKSAvIDI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjkgTWF0aC5jYnJ0KHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHNpZ24gPSByZXF1aXJlKCcuL19tYXRoLXNpZ24nKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjYnJ0OiBmdW5jdGlvbiBjYnJ0KHgpIHtcbiAgICByZXR1cm4gc2lnbih4ID0gK3gpICogTWF0aC5wb3coTWF0aC5hYnMoeCksIDEgLyAzKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMTEgTWF0aC5jbHozMih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBjbHozMjogZnVuY3Rpb24gY2x6MzIoeCkge1xuICAgIHJldHVybiAoeCA+Pj49IDApID8gMzEgLSBNYXRoLmZsb29yKE1hdGgubG9nKHggKyAwLjUpICogTWF0aC5MT0cyRSkgOiAzMjtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMTIgTWF0aC5jb3NoKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGNvc2g6IGZ1bmN0aW9uIGNvc2goeCkge1xuICAgIHJldHVybiAoZXhwKHggPSAreCkgKyBleHAoLXgpKSAvIDI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjE0IE1hdGguZXhwbTEoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICgkZXhwbTEgIT0gTWF0aC5leHBtMSksICdNYXRoJywgeyBleHBtMTogJGV4cG0xIH0pO1xuIiwiLy8gMjAuMi4yLjE2IE1hdGguZnJvdW5kKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7IGZyb3VuZDogcmVxdWlyZSgnLi9fbWF0aC1mcm91bmQnKSB9KTtcbiIsIi8vIDIwLjIuMi4xNyBNYXRoLmh5cG90KFt2YWx1ZTFbLCB2YWx1ZTJbLCDigKYgXV1dKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhYnMgPSBNYXRoLmFicztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywge1xuICBoeXBvdDogZnVuY3Rpb24gaHlwb3QodmFsdWUxLCB2YWx1ZTIpIHsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby11bnVzZWQtdmFyc1xuICAgIHZhciBzdW0gPSAwO1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIGxhcmcgPSAwO1xuICAgIHZhciBhcmcsIGRpdjtcbiAgICB3aGlsZSAoaSA8IGFMZW4pIHtcbiAgICAgIGFyZyA9IGFicyhhcmd1bWVudHNbaSsrXSk7XG4gICAgICBpZiAobGFyZyA8IGFyZykge1xuICAgICAgICBkaXYgPSBsYXJnIC8gYXJnO1xuICAgICAgICBzdW0gPSBzdW0gKiBkaXYgKiBkaXYgKyAxO1xuICAgICAgICBsYXJnID0gYXJnO1xuICAgICAgfSBlbHNlIGlmIChhcmcgPiAwKSB7XG4gICAgICAgIGRpdiA9IGFyZyAvIGxhcmc7XG4gICAgICAgIHN1bSArPSBkaXYgKiBkaXY7XG4gICAgICB9IGVsc2Ugc3VtICs9IGFyZztcbiAgICB9XG4gICAgcmV0dXJuIGxhcmcgPT09IEluZmluaXR5ID8gSW5maW5pdHkgOiBsYXJnICogTWF0aC5zcXJ0KHN1bSk7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjE4IE1hdGguaW11bCh4LCB5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkaW11bCA9IE1hdGguaW11bDtcblxuLy8gc29tZSBXZWJLaXQgdmVyc2lvbnMgZmFpbHMgd2l0aCBiaWcgbnVtYmVycywgc29tZSBoYXMgd3JvbmcgYXJpdHlcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAkaW11bCgweGZmZmZmZmZmLCA1KSAhPSAtNSB8fCAkaW11bC5sZW5ndGggIT0gMjtcbn0pLCAnTWF0aCcsIHtcbiAgaW11bDogZnVuY3Rpb24gaW11bCh4LCB5KSB7XG4gICAgdmFyIFVJTlQxNiA9IDB4ZmZmZjtcbiAgICB2YXIgeG4gPSAreDtcbiAgICB2YXIgeW4gPSAreTtcbiAgICB2YXIgeGwgPSBVSU5UMTYgJiB4bjtcbiAgICB2YXIgeWwgPSBVSU5UMTYgJiB5bjtcbiAgICByZXR1cm4gMCB8IHhsICogeWwgKyAoKFVJTlQxNiAmIHhuID4+PiAxNikgKiB5bCArIHhsICogKFVJTlQxNiAmIHluID4+PiAxNikgPDwgMTYgPj4+IDApO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4yMSBNYXRoLmxvZzEwKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIGxvZzEwOiBmdW5jdGlvbiBsb2cxMCh4KSB7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpICogTWF0aC5MT0cxMEU7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjIwIE1hdGgubG9nMXAoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHsgbG9nMXA6IHJlcXVpcmUoJy4vX21hdGgtbG9nMXAnKSB9KTtcbiIsIi8vIDIwLjIuMi4yMiBNYXRoLmxvZzIoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTWF0aCcsIHtcbiAgbG9nMjogZnVuY3Rpb24gbG9nMih4KSB7XG4gICAgcmV0dXJuIE1hdGgubG9nKHgpIC8gTWF0aC5MTjI7XG4gIH1cbn0pO1xuIiwiLy8gMjAuMi4yLjI4IE1hdGguc2lnbih4KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdNYXRoJywgeyBzaWduOiByZXF1aXJlKCcuL19tYXRoLXNpZ24nKSB9KTtcbiIsIi8vIDIwLjIuMi4zMCBNYXRoLnNpbmgoeClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZXhwbTEgPSByZXF1aXJlKCcuL19tYXRoLWV4cG0xJyk7XG52YXIgZXhwID0gTWF0aC5leHA7XG5cbi8vIFY4IG5lYXIgQ2hyb21pdW0gMzggaGFzIGEgcHJvYmxlbSB3aXRoIHZlcnkgc21hbGwgbnVtYmVyc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuICFNYXRoLnNpbmgoLTJlLTE3KSAhPSAtMmUtMTc7XG59KSwgJ01hdGgnLCB7XG4gIHNpbmg6IGZ1bmN0aW9uIHNpbmgoeCkge1xuICAgIHJldHVybiBNYXRoLmFicyh4ID0gK3gpIDwgMVxuICAgICAgPyAoZXhwbTEoeCkgLSBleHBtMSgteCkpIC8gMlxuICAgICAgOiAoZXhwKHggLSAxKSAtIGV4cCgteCAtIDEpKSAqIChNYXRoLkUgLyAyKTtcbiAgfVxufSk7XG4iLCIvLyAyMC4yLjIuMzMgTWF0aC50YW5oKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGV4cG0xID0gcmVxdWlyZSgnLi9fbWF0aC1leHBtMScpO1xudmFyIGV4cCA9IE1hdGguZXhwO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRhbmg6IGZ1bmN0aW9uIHRhbmgoeCkge1xuICAgIHZhciBhID0gZXhwbTEoeCA9ICt4KTtcbiAgICB2YXIgYiA9IGV4cG0xKC14KTtcbiAgICByZXR1cm4gYSA9PSBJbmZpbml0eSA/IDEgOiBiID09IEluZmluaXR5ID8gLTEgOiAoYSAtIGIpIC8gKGV4cCh4KSArIGV4cCgteCkpO1xuICB9XG59KTtcbiIsIi8vIDIwLjIuMi4zNCBNYXRoLnRydW5jKHgpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ01hdGgnLCB7XG4gIHRydW5jOiBmdW5jdGlvbiB0cnVuYyhpdCkge1xuICAgIHJldHVybiAoaXQgPiAwID8gTWF0aC5mbG9vciA6IE1hdGguY2VpbCkoaXQpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoYXMgPSByZXF1aXJlKCcuL19oYXMnKTtcbnZhciBjb2YgPSByZXF1aXJlKCcuL19jb2YnKTtcbnZhciBpbmhlcml0SWZSZXF1aXJlZCA9IHJlcXVpcmUoJy4vX2luaGVyaXQtaWYtcmVxdWlyZWQnKTtcbnZhciB0b1ByaW1pdGl2ZSA9IHJlcXVpcmUoJy4vX3RvLXByaW1pdGl2ZScpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpLmY7XG52YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mO1xudmFyICR0cmltID0gcmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKS50cmltO1xudmFyIE5VTUJFUiA9ICdOdW1iZXInO1xudmFyICROdW1iZXIgPSBnbG9iYWxbTlVNQkVSXTtcbnZhciBCYXNlID0gJE51bWJlcjtcbnZhciBwcm90byA9ICROdW1iZXIucHJvdG90eXBlO1xuLy8gT3BlcmEgfjEyIGhhcyBicm9rZW4gT2JqZWN0I3RvU3RyaW5nXG52YXIgQlJPS0VOX0NPRiA9IGNvZihyZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykocHJvdG8pKSA9PSBOVU1CRVI7XG52YXIgVFJJTSA9ICd0cmltJyBpbiBTdHJpbmcucHJvdG90eXBlO1xuXG4vLyA3LjEuMyBUb051bWJlcihhcmd1bWVudClcbnZhciB0b051bWJlciA9IGZ1bmN0aW9uIChhcmd1bWVudCkge1xuICB2YXIgaXQgPSB0b1ByaW1pdGl2ZShhcmd1bWVudCwgZmFsc2UpO1xuICBpZiAodHlwZW9mIGl0ID09ICdzdHJpbmcnICYmIGl0Lmxlbmd0aCA+IDIpIHtcbiAgICBpdCA9IFRSSU0gPyBpdC50cmltKCkgOiAkdHJpbShpdCwgMyk7XG4gICAgdmFyIGZpcnN0ID0gaXQuY2hhckNvZGVBdCgwKTtcbiAgICB2YXIgdGhpcmQsIHJhZGl4LCBtYXhDb2RlO1xuICAgIGlmIChmaXJzdCA9PT0gNDMgfHwgZmlyc3QgPT09IDQ1KSB7XG4gICAgICB0aGlyZCA9IGl0LmNoYXJDb2RlQXQoMik7XG4gICAgICBpZiAodGhpcmQgPT09IDg4IHx8IHRoaXJkID09PSAxMjApIHJldHVybiBOYU47IC8vIE51bWJlcignKzB4MScpIHNob3VsZCBiZSBOYU4sIG9sZCBWOCBmaXhcbiAgICB9IGVsc2UgaWYgKGZpcnN0ID09PSA0OCkge1xuICAgICAgc3dpdGNoIChpdC5jaGFyQ29kZUF0KDEpKSB7XG4gICAgICAgIGNhc2UgNjY6IGNhc2UgOTg6IHJhZGl4ID0gMjsgbWF4Q29kZSA9IDQ5OyBicmVhazsgLy8gZmFzdCBlcXVhbCAvXjBiWzAxXSskL2lcbiAgICAgICAgY2FzZSA3OTogY2FzZSAxMTE6IHJhZGl4ID0gODsgbWF4Q29kZSA9IDU1OyBicmVhazsgLy8gZmFzdCBlcXVhbCAvXjBvWzAtN10rJC9pXG4gICAgICAgIGRlZmF1bHQ6IHJldHVybiAraXQ7XG4gICAgICB9XG4gICAgICBmb3IgKHZhciBkaWdpdHMgPSBpdC5zbGljZSgyKSwgaSA9IDAsIGwgPSBkaWdpdHMubGVuZ3RoLCBjb2RlOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgIGNvZGUgPSBkaWdpdHMuY2hhckNvZGVBdChpKTtcbiAgICAgICAgLy8gcGFyc2VJbnQgcGFyc2VzIGEgc3RyaW5nIHRvIGEgZmlyc3QgdW5hdmFpbGFibGUgc3ltYm9sXG4gICAgICAgIC8vIGJ1dCBUb051bWJlciBzaG91bGQgcmV0dXJuIE5hTiBpZiBhIHN0cmluZyBjb250YWlucyB1bmF2YWlsYWJsZSBzeW1ib2xzXG4gICAgICAgIGlmIChjb2RlIDwgNDggfHwgY29kZSA+IG1heENvZGUpIHJldHVybiBOYU47XG4gICAgICB9IHJldHVybiBwYXJzZUludChkaWdpdHMsIHJhZGl4KTtcbiAgICB9XG4gIH0gcmV0dXJuICtpdDtcbn07XG5cbmlmICghJE51bWJlcignIDBvMScpIHx8ICEkTnVtYmVyKCcwYjEnKSB8fCAkTnVtYmVyKCcrMHgxJykpIHtcbiAgJE51bWJlciA9IGZ1bmN0aW9uIE51bWJlcih2YWx1ZSkge1xuICAgIHZhciBpdCA9IGFyZ3VtZW50cy5sZW5ndGggPCAxID8gMCA6IHZhbHVlO1xuICAgIHZhciB0aGF0ID0gdGhpcztcbiAgICByZXR1cm4gdGhhdCBpbnN0YW5jZW9mICROdW1iZXJcbiAgICAgIC8vIGNoZWNrIG9uIDEuLmNvbnN0cnVjdG9yKGZvbykgY2FzZVxuICAgICAgJiYgKEJST0tFTl9DT0YgPyBmYWlscyhmdW5jdGlvbiAoKSB7IHByb3RvLnZhbHVlT2YuY2FsbCh0aGF0KTsgfSkgOiBjb2YodGhhdCkgIT0gTlVNQkVSKVxuICAgICAgICA/IGluaGVyaXRJZlJlcXVpcmVkKG5ldyBCYXNlKHRvTnVtYmVyKGl0KSksIHRoYXQsICROdW1iZXIpIDogdG9OdW1iZXIoaXQpO1xuICB9O1xuICBmb3IgKHZhciBrZXlzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IGdPUE4oQmFzZSkgOiAoXG4gICAgLy8gRVMzOlxuICAgICdNQVhfVkFMVUUsTUlOX1ZBTFVFLE5hTixORUdBVElWRV9JTkZJTklUWSxQT1NJVElWRV9JTkZJTklUWSwnICtcbiAgICAvLyBFUzYgKGluIGNhc2UsIGlmIG1vZHVsZXMgd2l0aCBFUzYgTnVtYmVyIHN0YXRpY3MgcmVxdWlyZWQgYmVmb3JlKTpcbiAgICAnRVBTSUxPTixpc0Zpbml0ZSxpc0ludGVnZXIsaXNOYU4saXNTYWZlSW50ZWdlcixNQVhfU0FGRV9JTlRFR0VSLCcgK1xuICAgICdNSU5fU0FGRV9JTlRFR0VSLHBhcnNlRmxvYXQscGFyc2VJbnQsaXNJbnRlZ2VyJ1xuICApLnNwbGl0KCcsJyksIGogPSAwLCBrZXk7IGtleXMubGVuZ3RoID4gajsgaisrKSB7XG4gICAgaWYgKGhhcyhCYXNlLCBrZXkgPSBrZXlzW2pdKSAmJiAhaGFzKCROdW1iZXIsIGtleSkpIHtcbiAgICAgIGRQKCROdW1iZXIsIGtleSwgZ09QRChCYXNlLCBrZXkpKTtcbiAgICB9XG4gIH1cbiAgJE51bWJlci5wcm90b3R5cGUgPSBwcm90bztcbiAgcHJvdG8uY29uc3RydWN0b3IgPSAkTnVtYmVyO1xuICByZXF1aXJlKCcuL19yZWRlZmluZScpKGdsb2JhbCwgTlVNQkVSLCAkTnVtYmVyKTtcbn1cbiIsIi8vIDIwLjEuMi4xIE51bWJlci5FUFNJTE9OXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHsgRVBTSUxPTjogTWF0aC5wb3coMiwgLTUyKSB9KTtcbiIsIi8vIDIwLjEuMi4yIE51bWJlci5pc0Zpbml0ZShudW1iZXIpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIF9pc0Zpbml0ZSA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLmlzRmluaXRlO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNGaW5pdGU6IGZ1bmN0aW9uIGlzRmluaXRlKGl0KSB7XG4gICAgcmV0dXJuIHR5cGVvZiBpdCA9PSAnbnVtYmVyJyAmJiBfaXNGaW5pdGUoaXQpO1xuICB9XG59KTtcbiIsIi8vIDIwLjEuMi4zIE51bWJlci5pc0ludGVnZXIobnVtYmVyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IGlzSW50ZWdlcjogcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpIH0pO1xuIiwiLy8gMjAuMS4yLjQgTnVtYmVyLmlzTmFOKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywge1xuICBpc05hTjogZnVuY3Rpb24gaXNOYU4obnVtYmVyKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXNlbGYtY29tcGFyZVxuICAgIHJldHVybiBudW1iZXIgIT0gbnVtYmVyO1xuICB9XG59KTtcbiIsIi8vIDIwLjEuMi41IE51bWJlci5pc1NhZmVJbnRlZ2VyKG51bWJlcilcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgaXNJbnRlZ2VyID0gcmVxdWlyZSgnLi9faXMtaW50ZWdlcicpO1xudmFyIGFicyA9IE1hdGguYWJzO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ051bWJlcicsIHtcbiAgaXNTYWZlSW50ZWdlcjogZnVuY3Rpb24gaXNTYWZlSW50ZWdlcihudW1iZXIpIHtcbiAgICByZXR1cm4gaXNJbnRlZ2VyKG51bWJlcikgJiYgYWJzKG51bWJlcikgPD0gMHgxZmZmZmZmZmZmZmZmZjtcbiAgfVxufSk7XG4iLCIvLyAyMC4xLjIuNiBOdW1iZXIuTUFYX1NBRkVfSU5URUdFUlxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdOdW1iZXInLCB7IE1BWF9TQUZFX0lOVEVHRVI6IDB4MWZmZmZmZmZmZmZmZmYgfSk7XG4iLCIvLyAyMC4xLjIuMTAgTnVtYmVyLk1JTl9TQUZFX0lOVEVHRVJcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnTnVtYmVyJywgeyBNSU5fU0FGRV9JTlRFR0VSOiAtMHgxZmZmZmZmZmZmZmZmZiB9KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpO1xuLy8gMjAuMS4yLjEyIE51bWJlci5wYXJzZUZsb2F0KHN0cmluZylcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKE51bWJlci5wYXJzZUZsb2F0ICE9ICRwYXJzZUZsb2F0KSwgJ051bWJlcicsIHsgcGFyc2VGbG9hdDogJHBhcnNlRmxvYXQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMjAuMS4yLjEzIE51bWJlci5wYXJzZUludChzdHJpbmcsIHJhZGl4KVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTnVtYmVyLnBhcnNlSW50ICE9ICRwYXJzZUludCksICdOdW1iZXInLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBhTnVtYmVyVmFsdWUgPSByZXF1aXJlKCcuL19hLW51bWJlci12YWx1ZScpO1xudmFyIHJlcGVhdCA9IHJlcXVpcmUoJy4vX3N0cmluZy1yZXBlYXQnKTtcbnZhciAkdG9GaXhlZCA9IDEuMC50b0ZpeGVkO1xudmFyIGZsb29yID0gTWF0aC5mbG9vcjtcbnZhciBkYXRhID0gWzAsIDAsIDAsIDAsIDAsIDBdO1xudmFyIEVSUk9SID0gJ051bWJlci50b0ZpeGVkOiBpbmNvcnJlY3QgaW52b2NhdGlvbiEnO1xudmFyIFpFUk8gPSAnMCc7XG5cbnZhciBtdWx0aXBseSA9IGZ1bmN0aW9uIChuLCBjKSB7XG4gIHZhciBpID0gLTE7XG4gIHZhciBjMiA9IGM7XG4gIHdoaWxlICgrK2kgPCA2KSB7XG4gICAgYzIgKz0gbiAqIGRhdGFbaV07XG4gICAgZGF0YVtpXSA9IGMyICUgMWU3O1xuICAgIGMyID0gZmxvb3IoYzIgLyAxZTcpO1xuICB9XG59O1xudmFyIGRpdmlkZSA9IGZ1bmN0aW9uIChuKSB7XG4gIHZhciBpID0gNjtcbiAgdmFyIGMgPSAwO1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICBjICs9IGRhdGFbaV07XG4gICAgZGF0YVtpXSA9IGZsb29yKGMgLyBuKTtcbiAgICBjID0gKGMgJSBuKSAqIDFlNztcbiAgfVxufTtcbnZhciBudW1Ub1N0cmluZyA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIGkgPSA2O1xuICB2YXIgcyA9ICcnO1xuICB3aGlsZSAoLS1pID49IDApIHtcbiAgICBpZiAocyAhPT0gJycgfHwgaSA9PT0gMCB8fCBkYXRhW2ldICE9PSAwKSB7XG4gICAgICB2YXIgdCA9IFN0cmluZyhkYXRhW2ldKTtcbiAgICAgIHMgPSBzID09PSAnJyA/IHQgOiBzICsgcmVwZWF0LmNhbGwoWkVSTywgNyAtIHQubGVuZ3RoKSArIHQ7XG4gICAgfVxuICB9IHJldHVybiBzO1xufTtcbnZhciBwb3cgPSBmdW5jdGlvbiAoeCwgbiwgYWNjKSB7XG4gIHJldHVybiBuID09PSAwID8gYWNjIDogbiAlIDIgPT09IDEgPyBwb3coeCwgbiAtIDEsIGFjYyAqIHgpIDogcG93KHggKiB4LCBuIC8gMiwgYWNjKTtcbn07XG52YXIgbG9nID0gZnVuY3Rpb24gKHgpIHtcbiAgdmFyIG4gPSAwO1xuICB2YXIgeDIgPSB4O1xuICB3aGlsZSAoeDIgPj0gNDA5Nikge1xuICAgIG4gKz0gMTI7XG4gICAgeDIgLz0gNDA5NjtcbiAgfVxuICB3aGlsZSAoeDIgPj0gMikge1xuICAgIG4gKz0gMTtcbiAgICB4MiAvPSAyO1xuICB9IHJldHVybiBuO1xufTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiAoISEkdG9GaXhlZCAmJiAoXG4gIDAuMDAwMDgudG9GaXhlZCgzKSAhPT0gJzAuMDAwJyB8fFxuICAwLjkudG9GaXhlZCgwKSAhPT0gJzEnIHx8XG4gIDEuMjU1LnRvRml4ZWQoMikgIT09ICcxLjI1JyB8fFxuICAxMDAwMDAwMDAwMDAwMDAwMTI4LjAudG9GaXhlZCgwKSAhPT0gJzEwMDAwMDAwMDAwMDAwMDAxMjgnXG4pIHx8ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgLy8gVjggfiBBbmRyb2lkIDQuMy1cbiAgJHRvRml4ZWQuY2FsbCh7fSk7XG59KSksICdOdW1iZXInLCB7XG4gIHRvRml4ZWQ6IGZ1bmN0aW9uIHRvRml4ZWQoZnJhY3Rpb25EaWdpdHMpIHtcbiAgICB2YXIgeCA9IGFOdW1iZXJWYWx1ZSh0aGlzLCBFUlJPUik7XG4gICAgdmFyIGYgPSB0b0ludGVnZXIoZnJhY3Rpb25EaWdpdHMpO1xuICAgIHZhciBzID0gJyc7XG4gICAgdmFyIG0gPSBaRVJPO1xuICAgIHZhciBlLCB6LCBqLCBrO1xuICAgIGlmIChmIDwgMCB8fCBmID4gMjApIHRocm93IFJhbmdlRXJyb3IoRVJST1IpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICBpZiAoeCAhPSB4KSByZXR1cm4gJ05hTic7XG4gICAgaWYgKHggPD0gLTFlMjEgfHwgeCA+PSAxZTIxKSByZXR1cm4gU3RyaW5nKHgpO1xuICAgIGlmICh4IDwgMCkge1xuICAgICAgcyA9ICctJztcbiAgICAgIHggPSAteDtcbiAgICB9XG4gICAgaWYgKHggPiAxZS0yMSkge1xuICAgICAgZSA9IGxvZyh4ICogcG93KDIsIDY5LCAxKSkgLSA2OTtcbiAgICAgIHogPSBlIDwgMCA/IHggKiBwb3coMiwgLWUsIDEpIDogeCAvIHBvdygyLCBlLCAxKTtcbiAgICAgIHogKj0gMHgxMDAwMDAwMDAwMDAwMDtcbiAgICAgIGUgPSA1MiAtIGU7XG4gICAgICBpZiAoZSA+IDApIHtcbiAgICAgICAgbXVsdGlwbHkoMCwgeik7XG4gICAgICAgIGogPSBmO1xuICAgICAgICB3aGlsZSAoaiA+PSA3KSB7XG4gICAgICAgICAgbXVsdGlwbHkoMWU3LCAwKTtcbiAgICAgICAgICBqIC09IDc7XG4gICAgICAgIH1cbiAgICAgICAgbXVsdGlwbHkocG93KDEwLCBqLCAxKSwgMCk7XG4gICAgICAgIGogPSBlIC0gMTtcbiAgICAgICAgd2hpbGUgKGogPj0gMjMpIHtcbiAgICAgICAgICBkaXZpZGUoMSA8PCAyMyk7XG4gICAgICAgICAgaiAtPSAyMztcbiAgICAgICAgfVxuICAgICAgICBkaXZpZGUoMSA8PCBqKTtcbiAgICAgICAgbXVsdGlwbHkoMSwgMSk7XG4gICAgICAgIGRpdmlkZSgyKTtcbiAgICAgICAgbSA9IG51bVRvU3RyaW5nKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtdWx0aXBseSgwLCB6KTtcbiAgICAgICAgbXVsdGlwbHkoMSA8PCAtZSwgMCk7XG4gICAgICAgIG0gPSBudW1Ub1N0cmluZygpICsgcmVwZWF0LmNhbGwoWkVSTywgZik7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChmID4gMCkge1xuICAgICAgayA9IG0ubGVuZ3RoO1xuICAgICAgbSA9IHMgKyAoayA8PSBmID8gJzAuJyArIHJlcGVhdC5jYWxsKFpFUk8sIGYgLSBrKSArIG0gOiBtLnNsaWNlKDAsIGsgLSBmKSArICcuJyArIG0uc2xpY2UoayAtIGYpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgbSA9IHMgKyBtO1xuICAgIH0gcmV0dXJuIG07XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkZmFpbHMgPSByZXF1aXJlKCcuL19mYWlscycpO1xudmFyIGFOdW1iZXJWYWx1ZSA9IHJlcXVpcmUoJy4vX2EtbnVtYmVyLXZhbHVlJyk7XG52YXIgJHRvUHJlY2lzaW9uID0gMS4wLnRvUHJlY2lzaW9uO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqICgkZmFpbHMoZnVuY3Rpb24gKCkge1xuICAvLyBJRTctXG4gIHJldHVybiAkdG9QcmVjaXNpb24uY2FsbCgxLCB1bmRlZmluZWQpICE9PSAnMSc7XG59KSB8fCAhJGZhaWxzKGZ1bmN0aW9uICgpIHtcbiAgLy8gVjggfiBBbmRyb2lkIDQuMy1cbiAgJHRvUHJlY2lzaW9uLmNhbGwoe30pO1xufSkpLCAnTnVtYmVyJywge1xuICB0b1ByZWNpc2lvbjogZnVuY3Rpb24gdG9QcmVjaXNpb24ocHJlY2lzaW9uKSB7XG4gICAgdmFyIHRoYXQgPSBhTnVtYmVyVmFsdWUodGhpcywgJ051bWJlciN0b1ByZWNpc2lvbjogaW5jb3JyZWN0IGludm9jYXRpb24hJyk7XG4gICAgcmV0dXJuIHByZWNpc2lvbiA9PT0gdW5kZWZpbmVkID8gJHRvUHJlY2lzaW9uLmNhbGwodGhhdCkgOiAkdG9QcmVjaXNpb24uY2FsbCh0aGF0LCBwcmVjaXNpb24pO1xuICB9XG59KTtcbiIsIi8vIDE5LjEuMy4xIE9iamVjdC5hc3NpZ24odGFyZ2V0LCBzb3VyY2UpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiwgJ09iamVjdCcsIHsgYXNzaWduOiByZXF1aXJlKCcuL19vYmplY3QtYXNzaWduJykgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG4kZXhwb3J0KCRleHBvcnQuUywgJ09iamVjdCcsIHsgY3JlYXRlOiByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJykgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuLy8gMTkuMS4yLjMgLyAxNS4yLjMuNyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSwgJ09iamVjdCcsIHsgZGVmaW5lUHJvcGVydGllczogcmVxdWlyZSgnLi9fb2JqZWN0LWRwcycpIH0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsIi8vIDE5LjEuMi41IE9iamVjdC5mcmVlemUoTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIG1ldGEgPSByZXF1aXJlKCcuL19tZXRhJykub25GcmVlemU7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnZnJlZXplJywgZnVuY3Rpb24gKCRmcmVlemUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZyZWV6ZShpdCkge1xuICAgIHJldHVybiAkZnJlZXplICYmIGlzT2JqZWN0KGl0KSA/ICRmcmVlemUobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi42IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoTywgUClcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgJGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3InLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoaXQsIGtleSkge1xuICAgIHJldHVybiAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRvSU9iamVjdChpdCksIGtleSk7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2dldE93blByb3BlcnR5TmFtZXMnLCBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiByZXF1aXJlKCcuL19vYmplY3QtZ29wbi1leHQnKS5mO1xufSk7XG4iLCIvLyAxOS4xLjIuOSBPYmplY3QuZ2V0UHJvdG90eXBlT2YoTylcbnZhciB0b09iamVjdCA9IHJlcXVpcmUoJy4vX3RvLW9iamVjdCcpO1xudmFyICRnZXRQcm90b3R5cGVPZiA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdnZXRQcm90b3R5cGVPZicsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGdldFByb3RvdHlwZU9mKGl0KSB7XG4gICAgcmV0dXJuICRnZXRQcm90b3R5cGVPZih0b09iamVjdChpdCkpO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjIuMTEgT2JqZWN0LmlzRXh0ZW5zaWJsZShPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNFeHRlbnNpYmxlJywgZnVuY3Rpb24gKCRpc0V4dGVuc2libGUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZShpdCkge1xuICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZShpdCkgOiB0cnVlIDogZmFsc2U7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xMiBPYmplY3QuaXNGcm96ZW4oTylcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5yZXF1aXJlKCcuL19vYmplY3Qtc2FwJykoJ2lzRnJvemVuJywgZnVuY3Rpb24gKCRpc0Zyb3plbikge1xuICByZXR1cm4gZnVuY3Rpb24gaXNGcm96ZW4oaXQpIHtcbiAgICByZXR1cm4gaXNPYmplY3QoaXQpID8gJGlzRnJvemVuID8gJGlzRnJvemVuKGl0KSA6IGZhbHNlIDogdHJ1ZTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjEzIE9iamVjdC5pc1NlYWxlZChPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgnaXNTZWFsZWQnLCBmdW5jdGlvbiAoJGlzU2VhbGVkKSB7XG4gIHJldHVybiBmdW5jdGlvbiBpc1NlYWxlZChpdCkge1xuICAgIHJldHVybiBpc09iamVjdChpdCkgPyAkaXNTZWFsZWQgPyAkaXNTZWFsZWQoaXQpIDogZmFsc2UgOiB0cnVlO1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTAgT2JqZWN0LmlzKHZhbHVlMSwgdmFsdWUyKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBpczogcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpIH0pO1xuIiwiLy8gMTkuMS4yLjE0IE9iamVjdC5rZXlzKE8pXG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbnJlcXVpcmUoJy4vX29iamVjdC1zYXAnKSgna2V5cycsIGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGtleXMoaXQpIHtcbiAgICByZXR1cm4gJGtleXModG9PYmplY3QoaXQpKTtcbiAgfTtcbn0pO1xuIiwiLy8gMTkuMS4yLjE1IE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucyhPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdwcmV2ZW50RXh0ZW5zaW9ucycsIGZ1bmN0aW9uICgkcHJldmVudEV4dGVuc2lvbnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHByZXZlbnRFeHRlbnNpb25zKGl0KSB7XG4gICAgcmV0dXJuICRwcmV2ZW50RXh0ZW5zaW9ucyAmJiBpc09iamVjdChpdCkgPyAkcHJldmVudEV4dGVuc2lvbnMobWV0YShpdCkpIDogaXQ7XG4gIH07XG59KTtcbiIsIi8vIDE5LjEuMi4xNyBPYmplY3Quc2VhbChPKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgbWV0YSA9IHJlcXVpcmUoJy4vX21ldGEnKS5vbkZyZWV6ZTtcblxucmVxdWlyZSgnLi9fb2JqZWN0LXNhcCcpKCdzZWFsJywgZnVuY3Rpb24gKCRzZWFsKSB7XG4gIHJldHVybiBmdW5jdGlvbiBzZWFsKGl0KSB7XG4gICAgcmV0dXJuICRzZWFsICYmIGlzT2JqZWN0KGl0KSA/ICRzZWFsKG1ldGEoaXQpKSA6IGl0O1xuICB9O1xufSk7XG4iLCIvLyAxOS4xLjMuMTkgT2JqZWN0LnNldFByb3RvdHlwZU9mKE8sIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0JywgeyBzZXRQcm90b3R5cGVPZjogcmVxdWlyZSgnLi9fc2V0LXByb3RvJykuc2V0IH0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMTkuMS4zLjYgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZygpXG52YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciB0ZXN0ID0ge307XG50ZXN0W3JlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpXSA9ICd6JztcbmlmICh0ZXN0ICsgJycgIT0gJ1tvYmplY3Qgel0nKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoT2JqZWN0LnByb3RvdHlwZSwgJ3RvU3RyaW5nJywgZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuICdbb2JqZWN0ICcgKyBjbGFzc29mKHRoaXMpICsgJ10nO1xuICB9LCB0cnVlKTtcbn1cbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJHBhcnNlRmxvYXQgPSByZXF1aXJlKCcuL19wYXJzZS1mbG9hdCcpO1xuLy8gMTguMi40IHBhcnNlRmxvYXQoc3RyaW5nKVxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkYgKiAocGFyc2VGbG9hdCAhPSAkcGFyc2VGbG9hdCksIHsgcGFyc2VGbG9hdDogJHBhcnNlRmxvYXQgfSk7XG4iLCJ2YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYXJzZUludCA9IHJlcXVpcmUoJy4vX3BhcnNlLWludCcpO1xuLy8gMTguMi41IHBhcnNlSW50KHN0cmluZywgcmFkaXgpXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuRiAqIChwYXJzZUludCAhPSAkcGFyc2VJbnQpLCB7IHBhcnNlSW50OiAkcGFyc2VJbnQgfSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgTElCUkFSWSA9IHJlcXVpcmUoJy4vX2xpYnJhcnknKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBjbGFzc29mID0gcmVxdWlyZSgnLi9fY2xhc3NvZicpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhbkluc3RhbmNlID0gcmVxdWlyZSgnLi9fYW4taW5zdGFuY2UnKTtcbnZhciBmb3JPZiA9IHJlcXVpcmUoJy4vX2Zvci1vZicpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciB0YXNrID0gcmVxdWlyZSgnLi9fdGFzaycpLnNldDtcbnZhciBtaWNyb3Rhc2sgPSByZXF1aXJlKCcuL19taWNyb3Rhc2snKSgpO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5TW9kdWxlID0gcmVxdWlyZSgnLi9fbmV3LXByb21pc2UtY2FwYWJpbGl0eScpO1xudmFyIHBlcmZvcm0gPSByZXF1aXJlKCcuL19wZXJmb3JtJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xudmFyIHByb21pc2VSZXNvbHZlID0gcmVxdWlyZSgnLi9fcHJvbWlzZS1yZXNvbHZlJyk7XG52YXIgUFJPTUlTRSA9ICdQcm9taXNlJztcbnZhciBUeXBlRXJyb3IgPSBnbG9iYWwuVHlwZUVycm9yO1xudmFyIHByb2Nlc3MgPSBnbG9iYWwucHJvY2VzcztcbnZhciB2ZXJzaW9ucyA9IHByb2Nlc3MgJiYgcHJvY2Vzcy52ZXJzaW9ucztcbnZhciB2OCA9IHZlcnNpb25zICYmIHZlcnNpb25zLnY4IHx8ICcnO1xudmFyICRQcm9taXNlID0gZ2xvYmFsW1BST01JU0VdO1xudmFyIGlzTm9kZSA9IGNsYXNzb2YocHJvY2VzcykgPT0gJ3Byb2Nlc3MnO1xudmFyIGVtcHR5ID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xudmFyIEludGVybmFsLCBuZXdHZW5lcmljUHJvbWlzZUNhcGFiaWxpdHksIE93blByb21pc2VDYXBhYmlsaXR5LCBXcmFwcGVyO1xudmFyIG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZjtcblxudmFyIFVTRV9OQVRJVkUgPSAhIWZ1bmN0aW9uICgpIHtcbiAgdHJ5IHtcbiAgICAvLyBjb3JyZWN0IHN1YmNsYXNzaW5nIHdpdGggQEBzcGVjaWVzIHN1cHBvcnRcbiAgICB2YXIgcHJvbWlzZSA9ICRQcm9taXNlLnJlc29sdmUoMSk7XG4gICAgdmFyIEZha2VQcm9taXNlID0gKHByb21pc2UuY29uc3RydWN0b3IgPSB7fSlbcmVxdWlyZSgnLi9fd2tzJykoJ3NwZWNpZXMnKV0gPSBmdW5jdGlvbiAoZXhlYykge1xuICAgICAgZXhlYyhlbXB0eSwgZW1wdHkpO1xuICAgIH07XG4gICAgLy8gdW5oYW5kbGVkIHJlamVjdGlvbnMgdHJhY2tpbmcgc3VwcG9ydCwgTm9kZUpTIFByb21pc2Ugd2l0aG91dCBpdCBmYWlscyBAQHNwZWNpZXMgdGVzdFxuICAgIHJldHVybiAoaXNOb2RlIHx8IHR5cGVvZiBQcm9taXNlUmVqZWN0aW9uRXZlbnQgPT0gJ2Z1bmN0aW9uJylcbiAgICAgICYmIHByb21pc2UudGhlbihlbXB0eSkgaW5zdGFuY2VvZiBGYWtlUHJvbWlzZVxuICAgICAgLy8gdjggNi42IChOb2RlIDEwIGFuZCBDaHJvbWUgNjYpIGhhdmUgYSBidWcgd2l0aCByZXNvbHZpbmcgY3VzdG9tIHRoZW5hYmxlc1xuICAgICAgLy8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9ODMwNTY1XG4gICAgICAvLyB3ZSBjYW4ndCBkZXRlY3QgaXQgc3luY2hyb25vdXNseSwgc28ganVzdCBjaGVjayB2ZXJzaW9uc1xuICAgICAgJiYgdjguaW5kZXhPZignNi42JykgIT09IDBcbiAgICAgICYmIHVzZXJBZ2VudC5pbmRleE9mKCdDaHJvbWUvNjYnKSA9PT0gLTE7XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufSgpO1xuXG4vLyBoZWxwZXJzXG52YXIgaXNUaGVuYWJsZSA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgdGhlbjtcbiAgcmV0dXJuIGlzT2JqZWN0KGl0KSAmJiB0eXBlb2YgKHRoZW4gPSBpdC50aGVuKSA9PSAnZnVuY3Rpb24nID8gdGhlbiA6IGZhbHNlO1xufTtcbnZhciBub3RpZnkgPSBmdW5jdGlvbiAocHJvbWlzZSwgaXNSZWplY3QpIHtcbiAgaWYgKHByb21pc2UuX24pIHJldHVybjtcbiAgcHJvbWlzZS5fbiA9IHRydWU7XG4gIHZhciBjaGFpbiA9IHByb21pc2UuX2M7XG4gIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgb2sgPSBwcm9taXNlLl9zID09IDE7XG4gICAgdmFyIGkgPSAwO1xuICAgIHZhciBydW4gPSBmdW5jdGlvbiAocmVhY3Rpb24pIHtcbiAgICAgIHZhciBoYW5kbGVyID0gb2sgPyByZWFjdGlvbi5vayA6IHJlYWN0aW9uLmZhaWw7XG4gICAgICB2YXIgcmVzb2x2ZSA9IHJlYWN0aW9uLnJlc29sdmU7XG4gICAgICB2YXIgcmVqZWN0ID0gcmVhY3Rpb24ucmVqZWN0O1xuICAgICAgdmFyIGRvbWFpbiA9IHJlYWN0aW9uLmRvbWFpbjtcbiAgICAgIHZhciByZXN1bHQsIHRoZW4sIGV4aXRlZDtcbiAgICAgIHRyeSB7XG4gICAgICAgIGlmIChoYW5kbGVyKSB7XG4gICAgICAgICAgaWYgKCFvaykge1xuICAgICAgICAgICAgaWYgKHByb21pc2UuX2ggPT0gMikgb25IYW5kbGVVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgICAgICAgICBwcm9taXNlLl9oID0gMTtcbiAgICAgICAgICB9XG4gICAgICAgICAgaWYgKGhhbmRsZXIgPT09IHRydWUpIHJlc3VsdCA9IHZhbHVlO1xuICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaWYgKGRvbWFpbikgZG9tYWluLmVudGVyKCk7XG4gICAgICAgICAgICByZXN1bHQgPSBoYW5kbGVyKHZhbHVlKTsgLy8gbWF5IHRocm93XG4gICAgICAgICAgICBpZiAoZG9tYWluKSB7XG4gICAgICAgICAgICAgIGRvbWFpbi5leGl0KCk7XG4gICAgICAgICAgICAgIGV4aXRlZCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChyZXN1bHQgPT09IHJlYWN0aW9uLnByb21pc2UpIHtcbiAgICAgICAgICAgIHJlamVjdChUeXBlRXJyb3IoJ1Byb21pc2UtY2hhaW4gY3ljbGUnKSk7XG4gICAgICAgICAgfSBlbHNlIGlmICh0aGVuID0gaXNUaGVuYWJsZShyZXN1bHQpKSB7XG4gICAgICAgICAgICB0aGVuLmNhbGwocmVzdWx0LCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICAgIH0gZWxzZSByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0gZWxzZSByZWplY3QodmFsdWUpO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICBpZiAoZG9tYWluICYmICFleGl0ZWQpIGRvbWFpbi5leGl0KCk7XG4gICAgICAgIHJlamVjdChlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIHdoaWxlIChjaGFpbi5sZW5ndGggPiBpKSBydW4oY2hhaW5baSsrXSk7IC8vIHZhcmlhYmxlIGxlbmd0aCAtIGNhbid0IHVzZSBmb3JFYWNoXG4gICAgcHJvbWlzZS5fYyA9IFtdO1xuICAgIHByb21pc2UuX24gPSBmYWxzZTtcbiAgICBpZiAoaXNSZWplY3QgJiYgIXByb21pc2UuX2gpIG9uVW5oYW5kbGVkKHByb21pc2UpO1xuICB9KTtcbn07XG52YXIgb25VbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICB0YXNrLmNhbGwoZ2xvYmFsLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHZhbHVlID0gcHJvbWlzZS5fdjtcbiAgICB2YXIgdW5oYW5kbGVkID0gaXNVbmhhbmRsZWQocHJvbWlzZSk7XG4gICAgdmFyIHJlc3VsdCwgaGFuZGxlciwgY29uc29sZTtcbiAgICBpZiAodW5oYW5kbGVkKSB7XG4gICAgICByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKGlzTm9kZSkge1xuICAgICAgICAgIHByb2Nlc3MuZW1pdCgndW5oYW5kbGVkUmVqZWN0aW9uJywgdmFsdWUsIHByb21pc2UpO1xuICAgICAgICB9IGVsc2UgaWYgKGhhbmRsZXIgPSBnbG9iYWwub251bmhhbmRsZWRyZWplY3Rpb24pIHtcbiAgICAgICAgICBoYW5kbGVyKHsgcHJvbWlzZTogcHJvbWlzZSwgcmVhc29uOiB2YWx1ZSB9KTtcbiAgICAgICAgfSBlbHNlIGlmICgoY29uc29sZSA9IGdsb2JhbC5jb25zb2xlKSAmJiBjb25zb2xlLmVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignVW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uJywgdmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICAgIC8vIEJyb3dzZXJzIHNob3VsZCBub3QgdHJpZ2dlciBgcmVqZWN0aW9uSGFuZGxlZGAgZXZlbnQgaWYgaXQgd2FzIGhhbmRsZWQgaGVyZSwgTm9kZUpTIC0gc2hvdWxkXG4gICAgICBwcm9taXNlLl9oID0gaXNOb2RlIHx8IGlzVW5oYW5kbGVkKHByb21pc2UpID8gMiA6IDE7XG4gICAgfSBwcm9taXNlLl9hID0gdW5kZWZpbmVkO1xuICAgIGlmICh1bmhhbmRsZWQgJiYgcmVzdWx0LmUpIHRocm93IHJlc3VsdC52O1xuICB9KTtcbn07XG52YXIgaXNVbmhhbmRsZWQgPSBmdW5jdGlvbiAocHJvbWlzZSkge1xuICByZXR1cm4gcHJvbWlzZS5faCAhPT0gMSAmJiAocHJvbWlzZS5fYSB8fCBwcm9taXNlLl9jKS5sZW5ndGggPT09IDA7XG59O1xudmFyIG9uSGFuZGxlVW5oYW5kbGVkID0gZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgdGFzay5jYWxsKGdsb2JhbCwgZnVuY3Rpb24gKCkge1xuICAgIHZhciBoYW5kbGVyO1xuICAgIGlmIChpc05vZGUpIHtcbiAgICAgIHByb2Nlc3MuZW1pdCgncmVqZWN0aW9uSGFuZGxlZCcsIHByb21pc2UpO1xuICAgIH0gZWxzZSBpZiAoaGFuZGxlciA9IGdsb2JhbC5vbnJlamVjdGlvbmhhbmRsZWQpIHtcbiAgICAgIGhhbmRsZXIoeyBwcm9taXNlOiBwcm9taXNlLCByZWFzb246IHByb21pc2UuX3YgfSk7XG4gICAgfVxuICB9KTtcbn07XG52YXIgJHJlamVjdCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICB2YXIgcHJvbWlzZSA9IHRoaXM7XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgcHJvbWlzZS5fdiA9IHZhbHVlO1xuICBwcm9taXNlLl9zID0gMjtcbiAgaWYgKCFwcm9taXNlLl9hKSBwcm9taXNlLl9hID0gcHJvbWlzZS5fYy5zbGljZSgpO1xuICBub3RpZnkocHJvbWlzZSwgdHJ1ZSk7XG59O1xudmFyICRyZXNvbHZlID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gIHZhciBwcm9taXNlID0gdGhpcztcbiAgdmFyIHRoZW47XG4gIGlmIChwcm9taXNlLl9kKSByZXR1cm47XG4gIHByb21pc2UuX2QgPSB0cnVlO1xuICBwcm9taXNlID0gcHJvbWlzZS5fdyB8fCBwcm9taXNlOyAvLyB1bndyYXBcbiAgdHJ5IHtcbiAgICBpZiAocHJvbWlzZSA9PT0gdmFsdWUpIHRocm93IFR5cGVFcnJvcihcIlByb21pc2UgY2FuJ3QgYmUgcmVzb2x2ZWQgaXRzZWxmXCIpO1xuICAgIGlmICh0aGVuID0gaXNUaGVuYWJsZSh2YWx1ZSkpIHtcbiAgICAgIG1pY3JvdGFzayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciB3cmFwcGVyID0geyBfdzogcHJvbWlzZSwgX2Q6IGZhbHNlIH07IC8vIHdyYXBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICB0aGVuLmNhbGwodmFsdWUsIGN0eCgkcmVzb2x2ZSwgd3JhcHBlciwgMSksIGN0eCgkcmVqZWN0LCB3cmFwcGVyLCAxKSk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICAkcmVqZWN0LmNhbGwod3JhcHBlciwgZSk7XG4gICAgICAgIH1cbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICBwcm9taXNlLl92ID0gdmFsdWU7XG4gICAgICBwcm9taXNlLl9zID0gMTtcbiAgICAgIG5vdGlmeShwcm9taXNlLCBmYWxzZSk7XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgJHJlamVjdC5jYWxsKHsgX3c6IHByb21pc2UsIF9kOiBmYWxzZSB9LCBlKTsgLy8gd3JhcFxuICB9XG59O1xuXG4vLyBjb25zdHJ1Y3RvciBwb2x5ZmlsbFxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gIC8vIDI1LjQuMy4xIFByb21pc2UoZXhlY3V0b3IpXG4gICRQcm9taXNlID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIGFuSW5zdGFuY2UodGhpcywgJFByb21pc2UsIFBST01JU0UsICdfaCcpO1xuICAgIGFGdW5jdGlvbihleGVjdXRvcik7XG4gICAgSW50ZXJuYWwuY2FsbCh0aGlzKTtcbiAgICB0cnkge1xuICAgICAgZXhlY3V0b3IoY3R4KCRyZXNvbHZlLCB0aGlzLCAxKSwgY3R4KCRyZWplY3QsIHRoaXMsIDEpKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICRyZWplY3QuY2FsbCh0aGlzLCBlcnIpO1xuICAgIH1cbiAgfTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIEludGVybmFsID0gZnVuY3Rpb24gUHJvbWlzZShleGVjdXRvcikge1xuICAgIHRoaXMuX2MgPSBbXTsgICAgICAgICAgICAgLy8gPC0gYXdhaXRpbmcgcmVhY3Rpb25zXG4gICAgdGhpcy5fYSA9IHVuZGVmaW5lZDsgICAgICAvLyA8LSBjaGVja2VkIGluIGlzVW5oYW5kbGVkIHJlYWN0aW9uc1xuICAgIHRoaXMuX3MgPSAwOyAgICAgICAgICAgICAgLy8gPC0gc3RhdGVcbiAgICB0aGlzLl9kID0gZmFsc2U7ICAgICAgICAgIC8vIDwtIGRvbmVcbiAgICB0aGlzLl92ID0gdW5kZWZpbmVkOyAgICAgIC8vIDwtIHZhbHVlXG4gICAgdGhpcy5faCA9IDA7ICAgICAgICAgICAgICAvLyA8LSByZWplY3Rpb24gc3RhdGUsIDAgLSBkZWZhdWx0LCAxIC0gaGFuZGxlZCwgMiAtIHVuaGFuZGxlZFxuICAgIHRoaXMuX24gPSBmYWxzZTsgICAgICAgICAgLy8gPC0gbm90aWZ5XG4gIH07XG4gIEludGVybmFsLnByb3RvdHlwZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lLWFsbCcpKCRQcm9taXNlLnByb3RvdHlwZSwge1xuICAgIC8vIDI1LjQuNS4zIFByb21pc2UucHJvdG90eXBlLnRoZW4ob25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQpXG4gICAgdGhlbjogZnVuY3Rpb24gdGhlbihvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCkge1xuICAgICAgdmFyIHJlYWN0aW9uID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoc3BlY2llc0NvbnN0cnVjdG9yKHRoaXMsICRQcm9taXNlKSk7XG4gICAgICByZWFjdGlvbi5vayA9IHR5cGVvZiBvbkZ1bGZpbGxlZCA9PSAnZnVuY3Rpb24nID8gb25GdWxmaWxsZWQgOiB0cnVlO1xuICAgICAgcmVhY3Rpb24uZmFpbCA9IHR5cGVvZiBvblJlamVjdGVkID09ICdmdW5jdGlvbicgJiYgb25SZWplY3RlZDtcbiAgICAgIHJlYWN0aW9uLmRvbWFpbiA9IGlzTm9kZSA/IHByb2Nlc3MuZG9tYWluIDogdW5kZWZpbmVkO1xuICAgICAgdGhpcy5fYy5wdXNoKHJlYWN0aW9uKTtcbiAgICAgIGlmICh0aGlzLl9hKSB0aGlzLl9hLnB1c2gocmVhY3Rpb24pO1xuICAgICAgaWYgKHRoaXMuX3MpIG5vdGlmeSh0aGlzLCBmYWxzZSk7XG4gICAgICByZXR1cm4gcmVhY3Rpb24ucHJvbWlzZTtcbiAgICB9LFxuICAgIC8vIDI1LjQuNS4xIFByb21pc2UucHJvdG90eXBlLmNhdGNoKG9uUmVqZWN0ZWQpXG4gICAgJ2NhdGNoJzogZnVuY3Rpb24gKG9uUmVqZWN0ZWQpIHtcbiAgICAgIHJldHVybiB0aGlzLnRoZW4odW5kZWZpbmVkLCBvblJlamVjdGVkKTtcbiAgICB9XG4gIH0pO1xuICBPd25Qcm9taXNlQ2FwYWJpbGl0eSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgcHJvbWlzZSA9IG5ldyBJbnRlcm5hbCgpO1xuICAgIHRoaXMucHJvbWlzZSA9IHByb21pc2U7XG4gICAgdGhpcy5yZXNvbHZlID0gY3R4KCRyZXNvbHZlLCBwcm9taXNlLCAxKTtcbiAgICB0aGlzLnJlamVjdCA9IGN0eCgkcmVqZWN0LCBwcm9taXNlLCAxKTtcbiAgfTtcbiAgbmV3UHJvbWlzZUNhcGFiaWxpdHlNb2R1bGUuZiA9IG5ld1Byb21pc2VDYXBhYmlsaXR5ID0gZnVuY3Rpb24gKEMpIHtcbiAgICByZXR1cm4gQyA9PT0gJFByb21pc2UgfHwgQyA9PT0gV3JhcHBlclxuICAgICAgPyBuZXcgT3duUHJvbWlzZUNhcGFiaWxpdHkoQylcbiAgICAgIDogbmV3R2VuZXJpY1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICB9O1xufVxuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqICFVU0VfTkFUSVZFLCB7IFByb21pc2U6ICRQcm9taXNlIH0pO1xucmVxdWlyZSgnLi9fc2V0LXRvLXN0cmluZy10YWcnKSgkUHJvbWlzZSwgUFJPTUlTRSk7XG5yZXF1aXJlKCcuL19zZXQtc3BlY2llcycpKFBST01JU0UpO1xuV3JhcHBlciA9IHJlcXVpcmUoJy4vX2NvcmUnKVtQUk9NSVNFXTtcblxuLy8gc3RhdGljc1xuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgUFJPTUlTRSwge1xuICAvLyAyNS40LjQuNSBQcm9taXNlLnJlamVjdChyKVxuICByZWplY3Q6IGZ1bmN0aW9uIHJlamVjdChyKSB7XG4gICAgdmFyIGNhcGFiaWxpdHkgPSBuZXdQcm9taXNlQ2FwYWJpbGl0eSh0aGlzKTtcbiAgICB2YXIgJCRyZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICAkJHJlamVjdChyKTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogKExJQlJBUlkgfHwgIVVTRV9OQVRJVkUpLCBQUk9NSVNFLCB7XG4gIC8vIDI1LjQuNC42IFByb21pc2UucmVzb2x2ZSh4KVxuICByZXNvbHZlOiBmdW5jdGlvbiByZXNvbHZlKHgpIHtcbiAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoTElCUkFSWSAmJiB0aGlzID09PSBXcmFwcGVyID8gJFByb21pc2UgOiB0aGlzLCB4KTtcbiAgfVxufSk7XG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEoVVNFX05BVElWRSAmJiByZXF1aXJlKCcuL19pdGVyLWRldGVjdCcpKGZ1bmN0aW9uIChpdGVyKSB7XG4gICRQcm9taXNlLmFsbChpdGVyKVsnY2F0Y2gnXShlbXB0eSk7XG59KSksIFBST01JU0UsIHtcbiAgLy8gMjUuNC40LjEgUHJvbWlzZS5hbGwoaXRlcmFibGUpXG4gIGFsbDogZnVuY3Rpb24gYWxsKGl0ZXJhYmxlKSB7XG4gICAgdmFyIEMgPSB0aGlzO1xuICAgIHZhciBjYXBhYmlsaXR5ID0gbmV3UHJvbWlzZUNhcGFiaWxpdHkoQyk7XG4gICAgdmFyIHJlc29sdmUgPSBjYXBhYmlsaXR5LnJlc29sdmU7XG4gICAgdmFyIHJlamVjdCA9IGNhcGFiaWxpdHkucmVqZWN0O1xuICAgIHZhciByZXN1bHQgPSBwZXJmb3JtKGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciB2YWx1ZXMgPSBbXTtcbiAgICAgIHZhciBpbmRleCA9IDA7XG4gICAgICB2YXIgcmVtYWluaW5nID0gMTtcbiAgICAgIGZvck9mKGl0ZXJhYmxlLCBmYWxzZSwgZnVuY3Rpb24gKHByb21pc2UpIHtcbiAgICAgICAgdmFyICRpbmRleCA9IGluZGV4Kys7XG4gICAgICAgIHZhciBhbHJlYWR5Q2FsbGVkID0gZmFsc2U7XG4gICAgICAgIHZhbHVlcy5wdXNoKHVuZGVmaW5lZCk7XG4gICAgICAgIHJlbWFpbmluZysrO1xuICAgICAgICBDLnJlc29sdmUocHJvbWlzZSkudGhlbihmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgICBpZiAoYWxyZWFkeUNhbGxlZCkgcmV0dXJuO1xuICAgICAgICAgIGFscmVhZHlDYWxsZWQgPSB0cnVlO1xuICAgICAgICAgIHZhbHVlc1skaW5kZXhdID0gdmFsdWU7XG4gICAgICAgICAgLS1yZW1haW5pbmcgfHwgcmVzb2x2ZSh2YWx1ZXMpO1xuICAgICAgICB9LCByZWplY3QpO1xuICAgICAgfSk7XG4gICAgICAtLXJlbWFpbmluZyB8fCByZXNvbHZlKHZhbHVlcyk7XG4gICAgfSk7XG4gICAgaWYgKHJlc3VsdC5lKSByZWplY3QocmVzdWx0LnYpO1xuICAgIHJldHVybiBjYXBhYmlsaXR5LnByb21pc2U7XG4gIH0sXG4gIC8vIDI1LjQuNC40IFByb21pc2UucmFjZShpdGVyYWJsZSlcbiAgcmFjZTogZnVuY3Rpb24gcmFjZShpdGVyYWJsZSkge1xuICAgIHZhciBDID0gdGhpcztcbiAgICB2YXIgY2FwYWJpbGl0eSA9IG5ld1Byb21pc2VDYXBhYmlsaXR5KEMpO1xuICAgIHZhciByZWplY3QgPSBjYXBhYmlsaXR5LnJlamVjdDtcbiAgICB2YXIgcmVzdWx0ID0gcGVyZm9ybShmdW5jdGlvbiAoKSB7XG4gICAgICBmb3JPZihpdGVyYWJsZSwgZmFsc2UsIGZ1bmN0aW9uIChwcm9taXNlKSB7XG4gICAgICAgIEMucmVzb2x2ZShwcm9taXNlKS50aGVuKGNhcGFiaWxpdHkucmVzb2x2ZSwgcmVqZWN0KTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICAgIGlmIChyZXN1bHQuZSkgcmVqZWN0KHJlc3VsdC52KTtcbiAgICByZXR1cm4gY2FwYWJpbGl0eS5wcm9taXNlO1xuICB9XG59KTtcbiIsIi8vIDI2LjEuMSBSZWZsZWN0LmFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhRnVuY3Rpb24gPSByZXF1aXJlKCcuL19hLWZ1bmN0aW9uJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciByQXBwbHkgPSAocmVxdWlyZSgnLi9fZ2xvYmFsJykuUmVmbGVjdCB8fCB7fSkuYXBwbHk7XG52YXIgZkFwcGx5ID0gRnVuY3Rpb24uYXBwbHk7XG4vLyBNUyBFZGdlIGFyZ3VtZW50c0xpc3QgYXJndW1lbnQgaXMgb3B0aW9uYWxcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByQXBwbHkoZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9KTtcbn0pLCAnUmVmbGVjdCcsIHtcbiAgYXBwbHk6IGZ1bmN0aW9uIGFwcGx5KHRhcmdldCwgdGhpc0FyZ3VtZW50LCBhcmd1bWVudHNMaXN0KSB7XG4gICAgdmFyIFQgPSBhRnVuY3Rpb24odGFyZ2V0KTtcbiAgICB2YXIgTCA9IGFuT2JqZWN0KGFyZ3VtZW50c0xpc3QpO1xuICAgIHJldHVybiByQXBwbHkgPyByQXBwbHkoVCwgdGhpc0FyZ3VtZW50LCBMKSA6IGZBcHBseS5jYWxsKFQsIHRoaXNBcmd1bWVudCwgTCk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4yIFJlZmxlY3QuY29uc3RydWN0KHRhcmdldCwgYXJndW1lbnRzTGlzdCBbLCBuZXdUYXJnZXRdKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBjcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgYUZ1bmN0aW9uID0gcmVxdWlyZSgnLi9fYS1mdW5jdGlvbicpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgYmluZCA9IHJlcXVpcmUoJy4vX2JpbmQnKTtcbnZhciByQ29uc3RydWN0ID0gKHJlcXVpcmUoJy4vX2dsb2JhbCcpLlJlZmxlY3QgfHwge30pLmNvbnN0cnVjdDtcblxuLy8gTVMgRWRnZSBzdXBwb3J0cyBvbmx5IDIgYXJndW1lbnRzIGFuZCBhcmd1bWVudHNMaXN0IGFyZ3VtZW50IGlzIG9wdGlvbmFsXG4vLyBGRiBOaWdodGx5IHNldHMgdGhpcmQgYXJndW1lbnQgYXMgYG5ldy50YXJnZXRgLCBidXQgZG9lcyBub3QgY3JlYXRlIGB0aGlzYCBmcm9tIGl0XG52YXIgTkVXX1RBUkdFVF9CVUcgPSBmYWlscyhmdW5jdGlvbiAoKSB7XG4gIGZ1bmN0aW9uIEYoKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuICEockNvbnN0cnVjdChmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH0sIFtdLCBGKSBpbnN0YW5jZW9mIEYpO1xufSk7XG52YXIgQVJHU19CVUcgPSAhZmFpbHMoZnVuY3Rpb24gKCkge1xuICByQ29uc3RydWN0KGZ1bmN0aW9uICgpIHsgLyogZW1wdHkgKi8gfSk7XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoTkVXX1RBUkdFVF9CVUcgfHwgQVJHU19CVUcpLCAnUmVmbGVjdCcsIHtcbiAgY29uc3RydWN0OiBmdW5jdGlvbiBjb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzIC8qICwgbmV3VGFyZ2V0ICovKSB7XG4gICAgYUZ1bmN0aW9uKFRhcmdldCk7XG4gICAgYW5PYmplY3QoYXJncyk7XG4gICAgdmFyIG5ld1RhcmdldCA9IGFyZ3VtZW50cy5sZW5ndGggPCAzID8gVGFyZ2V0IDogYUZ1bmN0aW9uKGFyZ3VtZW50c1syXSk7XG4gICAgaWYgKEFSR1NfQlVHICYmICFORVdfVEFSR0VUX0JVRykgcmV0dXJuIHJDb25zdHJ1Y3QoVGFyZ2V0LCBhcmdzLCBuZXdUYXJnZXQpO1xuICAgIGlmIChUYXJnZXQgPT0gbmV3VGFyZ2V0KSB7XG4gICAgICAvLyB3L28gYWx0ZXJlZCBuZXdUYXJnZXQsIG9wdGltaXphdGlvbiBmb3IgMC00IGFyZ3VtZW50c1xuICAgICAgc3dpdGNoIChhcmdzLmxlbmd0aCkge1xuICAgICAgICBjYXNlIDA6IHJldHVybiBuZXcgVGFyZ2V0KCk7XG4gICAgICAgIGNhc2UgMTogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSk7XG4gICAgICAgIGNhc2UgMjogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSk7XG4gICAgICAgIGNhc2UgMzogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSk7XG4gICAgICAgIGNhc2UgNDogcmV0dXJuIG5ldyBUYXJnZXQoYXJnc1swXSwgYXJnc1sxXSwgYXJnc1syXSwgYXJnc1szXSk7XG4gICAgICB9XG4gICAgICAvLyB3L28gYWx0ZXJlZCBuZXdUYXJnZXQsIGxvdCBvZiBhcmd1bWVudHMgY2FzZVxuICAgICAgdmFyICRhcmdzID0gW251bGxdO1xuICAgICAgJGFyZ3MucHVzaC5hcHBseSgkYXJncywgYXJncyk7XG4gICAgICByZXR1cm4gbmV3IChiaW5kLmFwcGx5KFRhcmdldCwgJGFyZ3MpKSgpO1xuICAgIH1cbiAgICAvLyB3aXRoIGFsdGVyZWQgbmV3VGFyZ2V0LCBub3Qgc3VwcG9ydCBidWlsdC1pbiBjb25zdHJ1Y3RvcnNcbiAgICB2YXIgcHJvdG8gPSBuZXdUYXJnZXQucHJvdG90eXBlO1xuICAgIHZhciBpbnN0YW5jZSA9IGNyZWF0ZShpc09iamVjdChwcm90bykgPyBwcm90byA6IE9iamVjdC5wcm90b3R5cGUpO1xuICAgIHZhciByZXN1bHQgPSBGdW5jdGlvbi5hcHBseS5jYWxsKFRhcmdldCwgaW5zdGFuY2UsIGFyZ3MpO1xuICAgIHJldHVybiBpc09iamVjdChyZXN1bHQpID8gcmVzdWx0IDogaW5zdGFuY2U7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS4zIFJlZmxlY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSwgYXR0cmlidXRlcylcbnZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG5cbi8vIE1TIEVkZ2UgaGFzIGJyb2tlbiBSZWZsZWN0LmRlZmluZVByb3BlcnR5IC0gdGhyb3dpbmcgaW5zdGVhZCBvZiByZXR1cm5pbmcgZmFsc2VcbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICBSZWZsZWN0LmRlZmluZVByb3BlcnR5KGRQLmYoe30sIDEsIHsgdmFsdWU6IDEgfSksIDEsIHsgdmFsdWU6IDIgfSk7XG59KSwgJ1JlZmxlY3QnLCB7XG4gIGRlZmluZVByb3BlcnR5OiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICBwcm9wZXJ0eUtleSA9IHRvUHJpbWl0aXZlKHByb3BlcnR5S2V5LCB0cnVlKTtcbiAgICBhbk9iamVjdChhdHRyaWJ1dGVzKTtcbiAgICB0cnkge1xuICAgICAgZFAuZih0YXJnZXQsIHByb3BlcnR5S2V5LCBhdHRyaWJ1dGVzKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS40IFJlZmxlY3QuZGVsZXRlUHJvcGVydHkodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJykuZjtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGRlbGV0ZVByb3BlcnR5OiBmdW5jdGlvbiBkZWxldGVQcm9wZXJ0eSh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgdmFyIGRlc2MgPSBnT1BEKGFuT2JqZWN0KHRhcmdldCksIHByb3BlcnR5S2V5KTtcbiAgICByZXR1cm4gZGVzYyAmJiAhZGVzYy5jb25maWd1cmFibGUgPyBmYWxzZSA6IGRlbGV0ZSB0YXJnZXRbcHJvcGVydHlLZXldO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIDI2LjEuNSBSZWZsZWN0LmVudW1lcmF0ZSh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgRW51bWVyYXRlID0gZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBhbk9iamVjdChpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgICAvLyBuZXh0IGluZGV4XG4gIHZhciBrZXlzID0gdGhpcy5fayA9IFtdOyAgICAgIC8vIGtleXNcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gaXRlcmF0ZWQpIGtleXMucHVzaChrZXkpO1xufTtcbnJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJykoRW51bWVyYXRlLCAnT2JqZWN0JywgZnVuY3Rpb24gKCkge1xuICB2YXIgdGhhdCA9IHRoaXM7XG4gIHZhciBrZXlzID0gdGhhdC5faztcbiAgdmFyIGtleTtcbiAgZG8ge1xuICAgIGlmICh0aGF0Ll9pID49IGtleXMubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIH0gd2hpbGUgKCEoKGtleSA9IGtleXNbdGhhdC5faSsrXSkgaW4gdGhhdC5fdCkpO1xuICByZXR1cm4geyB2YWx1ZToga2V5LCBkb25lOiBmYWxzZSB9O1xufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgZW51bWVyYXRlOiBmdW5jdGlvbiBlbnVtZXJhdGUodGFyZ2V0KSB7XG4gICAgcmV0dXJuIG5ldyBFbnVtZXJhdGUodGFyZ2V0KTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjcgUmVmbGVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBwcm9wZXJ0eUtleSlcbnZhciBnT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgcmV0dXJuIGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS44IFJlZmxlY3QuZ2V0UHJvdG90eXBlT2YodGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBnZXRQcm90byA9IHJlcXVpcmUoJy4vX29iamVjdC1ncG8nKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7XG4gIGdldFByb3RvdHlwZU9mOiBmdW5jdGlvbiBnZXRQcm90b3R5cGVPZih0YXJnZXQpIHtcbiAgICByZXR1cm4gZ2V0UHJvdG8oYW5PYmplY3QodGFyZ2V0KSk7XG4gIH1cbn0pO1xuIiwiLy8gMjYuMS42IFJlZmxlY3QuZ2V0KHRhcmdldCwgcHJvcGVydHlLZXkgWywgcmVjZWl2ZXJdKVxudmFyIGdPUEQgPSByZXF1aXJlKCcuL19vYmplY3QtZ29wZCcpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5cbmZ1bmN0aW9uIGdldCh0YXJnZXQsIHByb3BlcnR5S2V5IC8qICwgcmVjZWl2ZXIgKi8pIHtcbiAgdmFyIHJlY2VpdmVyID0gYXJndW1lbnRzLmxlbmd0aCA8IDMgPyB0YXJnZXQgOiBhcmd1bWVudHNbMl07XG4gIHZhciBkZXNjLCBwcm90bztcbiAgaWYgKGFuT2JqZWN0KHRhcmdldCkgPT09IHJlY2VpdmVyKSByZXR1cm4gdGFyZ2V0W3Byb3BlcnR5S2V5XTtcbiAgaWYgKGRlc2MgPSBnT1BELmYodGFyZ2V0LCBwcm9wZXJ0eUtleSkpIHJldHVybiBoYXMoZGVzYywgJ3ZhbHVlJylcbiAgICA/IGRlc2MudmFsdWVcbiAgICA6IGRlc2MuZ2V0ICE9PSB1bmRlZmluZWRcbiAgICAgID8gZGVzYy5nZXQuY2FsbChyZWNlaXZlcilcbiAgICAgIDogdW5kZWZpbmVkO1xuICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkgcmV0dXJuIGdldChwcm90bywgcHJvcGVydHlLZXksIHJlY2VpdmVyKTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0JywgeyBnZXQ6IGdldCB9KTtcbiIsIi8vIDI2LjEuOSBSZWZsZWN0Lmhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBoYXM6IGZ1bmN0aW9uIGhhcyh0YXJnZXQsIHByb3BlcnR5S2V5KSB7XG4gICAgcmV0dXJuIHByb3BlcnR5S2V5IGluIHRhcmdldDtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEwIFJlZmxlY3QuaXNFeHRlbnNpYmxlKHRhcmdldClcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBpc0V4dGVuc2libGU6IGZ1bmN0aW9uIGlzRXh0ZW5zaWJsZSh0YXJnZXQpIHtcbiAgICBhbk9iamVjdCh0YXJnZXQpO1xuICAgIHJldHVybiAkaXNFeHRlbnNpYmxlID8gJGlzRXh0ZW5zaWJsZSh0YXJnZXQpIDogdHJ1ZTtcbiAgfVxufSk7XG4iLCIvLyAyNi4xLjExIFJlZmxlY3Qub3duS2V5cyh0YXJnZXQpXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IG93bktleXM6IHJlcXVpcmUoJy4vX293bi1rZXlzJykgfSk7XG4iLCIvLyAyNi4xLjEyIFJlZmxlY3QucHJldmVudEV4dGVuc2lvbnModGFyZ2V0KVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyICRwcmV2ZW50RXh0ZW5zaW9ucyA9IE9iamVjdC5wcmV2ZW50RXh0ZW5zaW9ucztcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdSZWZsZWN0Jywge1xuICBwcmV2ZW50RXh0ZW5zaW9uczogZnVuY3Rpb24gcHJldmVudEV4dGVuc2lvbnModGFyZ2V0KSB7XG4gICAgYW5PYmplY3QodGFyZ2V0KTtcbiAgICB0cnkge1xuICAgICAgaWYgKCRwcmV2ZW50RXh0ZW5zaW9ucykgJHByZXZlbnRFeHRlbnNpb25zKHRhcmdldCk7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59KTtcbiIsIi8vIDI2LjEuMTQgUmVmbGVjdC5zZXRQcm90b3R5cGVPZih0YXJnZXQsIHByb3RvKVxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBzZXRQcm90byA9IHJlcXVpcmUoJy4vX3NldC1wcm90bycpO1xuXG5pZiAoc2V0UHJvdG8pICRleHBvcnQoJGV4cG9ydC5TLCAnUmVmbGVjdCcsIHtcbiAgc2V0UHJvdG90eXBlT2Y6IGZ1bmN0aW9uIHNldFByb3RvdHlwZU9mKHRhcmdldCwgcHJvdG8pIHtcbiAgICBzZXRQcm90by5jaGVjayh0YXJnZXQsIHByb3RvKTtcbiAgICB0cnkge1xuICAgICAgc2V0UHJvdG8uc2V0KHRhcmdldCwgcHJvdG8pO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxufSk7XG4iLCIvLyAyNi4xLjEzIFJlZmxlY3Quc2V0KHRhcmdldCwgcHJvcGVydHlLZXksIFYgWywgcmVjZWl2ZXJdKVxudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgZ2V0UHJvdG90eXBlT2YgPSByZXF1aXJlKCcuL19vYmplY3QtZ3BvJyk7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyIGNyZWF0ZURlc2MgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xuXG5mdW5jdGlvbiBzZXQodGFyZ2V0LCBwcm9wZXJ0eUtleSwgViAvKiAsIHJlY2VpdmVyICovKSB7XG4gIHZhciByZWNlaXZlciA9IGFyZ3VtZW50cy5sZW5ndGggPCA0ID8gdGFyZ2V0IDogYXJndW1lbnRzWzNdO1xuICB2YXIgb3duRGVzYyA9IGdPUEQuZihhbk9iamVjdCh0YXJnZXQpLCBwcm9wZXJ0eUtleSk7XG4gIHZhciBleGlzdGluZ0Rlc2NyaXB0b3IsIHByb3RvO1xuICBpZiAoIW93bkRlc2MpIHtcbiAgICBpZiAoaXNPYmplY3QocHJvdG8gPSBnZXRQcm90b3R5cGVPZih0YXJnZXQpKSkge1xuICAgICAgcmV0dXJuIHNldChwcm90bywgcHJvcGVydHlLZXksIFYsIHJlY2VpdmVyKTtcbiAgICB9XG4gICAgb3duRGVzYyA9IGNyZWF0ZURlc2MoMCk7XG4gIH1cbiAgaWYgKGhhcyhvd25EZXNjLCAndmFsdWUnKSkge1xuICAgIGlmIChvd25EZXNjLndyaXRhYmxlID09PSBmYWxzZSB8fCAhaXNPYmplY3QocmVjZWl2ZXIpKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKGV4aXN0aW5nRGVzY3JpcHRvciA9IGdPUEQuZihyZWNlaXZlciwgcHJvcGVydHlLZXkpKSB7XG4gICAgICBpZiAoZXhpc3RpbmdEZXNjcmlwdG9yLmdldCB8fCBleGlzdGluZ0Rlc2NyaXB0b3Iuc2V0IHx8IGV4aXN0aW5nRGVzY3JpcHRvci53cml0YWJsZSA9PT0gZmFsc2UpIHJldHVybiBmYWxzZTtcbiAgICAgIGV4aXN0aW5nRGVzY3JpcHRvci52YWx1ZSA9IFY7XG4gICAgICBkUC5mKHJlY2VpdmVyLCBwcm9wZXJ0eUtleSwgZXhpc3RpbmdEZXNjcmlwdG9yKTtcbiAgICB9IGVsc2UgZFAuZihyZWNlaXZlciwgcHJvcGVydHlLZXksIGNyZWF0ZURlc2MoMCwgVikpO1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHJldHVybiBvd25EZXNjLnNldCA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiAob3duRGVzYy5zZXQuY2FsbChyZWNlaXZlciwgViksIHRydWUpO1xufVxuXG4kZXhwb3J0KCRleHBvcnQuUywgJ1JlZmxlY3QnLCB7IHNldDogc2V0IH0pO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGluaGVyaXRJZlJlcXVpcmVkID0gcmVxdWlyZSgnLi9faW5oZXJpdC1pZi1yZXF1aXJlZCcpO1xudmFyIGRQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZjtcbnZhciBnT1BOID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcG4nKS5mO1xudmFyIGlzUmVnRXhwID0gcmVxdWlyZSgnLi9faXMtcmVnZXhwJyk7XG52YXIgJGZsYWdzID0gcmVxdWlyZSgnLi9fZmxhZ3MnKTtcbnZhciAkUmVnRXhwID0gZ2xvYmFsLlJlZ0V4cDtcbnZhciBCYXNlID0gJFJlZ0V4cDtcbnZhciBwcm90byA9ICRSZWdFeHAucHJvdG90eXBlO1xudmFyIHJlMSA9IC9hL2c7XG52YXIgcmUyID0gL2EvZztcbi8vIFwibmV3XCIgY3JlYXRlcyBhIG5ldyBvYmplY3QsIG9sZCB3ZWJraXQgYnVnZ3kgaGVyZVxudmFyIENPUlJFQ1RfTkVXID0gbmV3ICRSZWdFeHAocmUxKSAhPT0gcmUxO1xuXG5pZiAocmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAoIUNPUlJFQ1RfTkVXIHx8IHJlcXVpcmUoJy4vX2ZhaWxzJykoZnVuY3Rpb24gKCkge1xuICByZTJbcmVxdWlyZSgnLi9fd2tzJykoJ21hdGNoJyldID0gZmFsc2U7XG4gIC8vIFJlZ0V4cCBjb25zdHJ1Y3RvciBjYW4gYWx0ZXIgZmxhZ3MgYW5kIElzUmVnRXhwIHdvcmtzIGNvcnJlY3Qgd2l0aCBAQG1hdGNoXG4gIHJldHVybiAkUmVnRXhwKHJlMSkgIT0gcmUxIHx8ICRSZWdFeHAocmUyKSA9PSByZTIgfHwgJFJlZ0V4cChyZTEsICdpJykgIT0gJy9hL2knO1xufSkpKSB7XG4gICRSZWdFeHAgPSBmdW5jdGlvbiBSZWdFeHAocCwgZikge1xuICAgIHZhciB0aVJFID0gdGhpcyBpbnN0YW5jZW9mICRSZWdFeHA7XG4gICAgdmFyIHBpUkUgPSBpc1JlZ0V4cChwKTtcbiAgICB2YXIgZmlVID0gZiA9PT0gdW5kZWZpbmVkO1xuICAgIHJldHVybiAhdGlSRSAmJiBwaVJFICYmIHAuY29uc3RydWN0b3IgPT09ICRSZWdFeHAgJiYgZmlVID8gcFxuICAgICAgOiBpbmhlcml0SWZSZXF1aXJlZChDT1JSRUNUX05FV1xuICAgICAgICA/IG5ldyBCYXNlKHBpUkUgJiYgIWZpVSA/IHAuc291cmNlIDogcCwgZilcbiAgICAgICAgOiBCYXNlKChwaVJFID0gcCBpbnN0YW5jZW9mICRSZWdFeHApID8gcC5zb3VyY2UgOiBwLCBwaVJFICYmIGZpVSA/ICRmbGFncy5jYWxsKHApIDogZilcbiAgICAgICwgdGlSRSA/IHRoaXMgOiBwcm90bywgJFJlZ0V4cCk7XG4gIH07XG4gIHZhciBwcm94eSA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgICBrZXkgaW4gJFJlZ0V4cCB8fCBkUCgkUmVnRXhwLCBrZXksIHtcbiAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmFzZVtrZXldOyB9LFxuICAgICAgc2V0OiBmdW5jdGlvbiAoaXQpIHsgQmFzZVtrZXldID0gaXQ7IH1cbiAgICB9KTtcbiAgfTtcbiAgZm9yICh2YXIga2V5cyA9IGdPUE4oQmFzZSksIGkgPSAwOyBrZXlzLmxlbmd0aCA+IGk7KSBwcm94eShrZXlzW2krK10pO1xuICBwcm90by5jb25zdHJ1Y3RvciA9ICRSZWdFeHA7XG4gICRSZWdFeHAucHJvdG90eXBlID0gcHJvdG87XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoZ2xvYmFsLCAnUmVnRXhwJywgJFJlZ0V4cCk7XG59XG5cbnJlcXVpcmUoJy4vX3NldC1zcGVjaWVzJykoJ1JlZ0V4cCcpO1xuIiwiJ3VzZSBzdHJpY3QnO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xucmVxdWlyZSgnLi9fZXhwb3J0Jykoe1xuICB0YXJnZXQ6ICdSZWdFeHAnLFxuICBwcm90bzogdHJ1ZSxcbiAgZm9yY2VkOiByZWdleHBFeGVjICE9PSAvLi8uZXhlY1xufSwge1xuICBleGVjOiByZWdleHBFeGVjXG59KTtcbiIsIi8vIDIxLjIuNS4zIGdldCBSZWdFeHAucHJvdG90eXBlLmZsYWdzKClcbmlmIChyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpICYmIC8uL2cuZmxhZ3MgIT0gJ2cnKSByZXF1aXJlKCcuL19vYmplY3QtZHAnKS5mKFJlZ0V4cC5wcm90b3R5cGUsICdmbGFncycsIHtcbiAgY29uZmlndXJhYmxlOiB0cnVlLFxuICBnZXQ6IHJlcXVpcmUoJy4vX2ZsYWdzJylcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFkdmFuY2VTdHJpbmdJbmRleCA9IHJlcXVpcmUoJy4vX2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7XG52YXIgcmVnRXhwRXhlYyA9IHJlcXVpcmUoJy4vX3JlZ2V4cC1leGVjLWFic3RyYWN0Jyk7XG5cbi8vIEBAbWF0Y2ggbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnbWF0Y2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgTUFUQ0gsICRtYXRjaCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUubWF0Y2hcbiAgICBmdW5jdGlvbiBtYXRjaChyZWdleHApIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHJlZ2V4cCA9PSB1bmRlZmluZWQgPyB1bmRlZmluZWQgOiByZWdleHBbTUFUQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbTUFUQ0hdKFN0cmluZyhPKSk7XG4gICAgfSxcbiAgICAvLyBgUmVnRXhwLnByb3RvdHlwZVtAQG1hdGNoXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQG1hdGNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkbWF0Y2gsIHJlZ2V4cCwgdGhpcyk7XG4gICAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7XG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICBpZiAoIXJ4Lmdsb2JhbCkgcmV0dXJuIHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgIHJ4Lmxhc3RJbmRleCA9IDA7XG4gICAgICB2YXIgQSA9IFtdO1xuICAgICAgdmFyIG4gPSAwO1xuICAgICAgdmFyIHJlc3VsdDtcbiAgICAgIHdoaWxlICgocmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUykpICE9PSBudWxsKSB7XG4gICAgICAgIHZhciBtYXRjaFN0ciA9IFN0cmluZyhyZXN1bHRbMF0pO1xuICAgICAgICBBW25dID0gbWF0Y2hTdHI7XG4gICAgICAgIGlmIChtYXRjaFN0ciA9PT0gJycpIHJ4Lmxhc3RJbmRleCA9IGFkdmFuY2VTdHJpbmdJbmRleChTLCB0b0xlbmd0aChyeC5sYXN0SW5kZXgpLCBmdWxsVW5pY29kZSk7XG4gICAgICAgIG4rKztcbiAgICAgIH1cbiAgICAgIHJldHVybiBuID09PSAwID8gbnVsbCA6IEE7XG4gICAgfVxuICBdO1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG5cbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHRvT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8tb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi9fYWR2YW5jZS1zdHJpbmctaW5kZXgnKTtcbnZhciByZWdFeHBFeGVjID0gcmVxdWlyZSgnLi9fcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTtcbnZhciBtYXggPSBNYXRoLm1heDtcbnZhciBtaW4gPSBNYXRoLm1pbjtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFMgPSAvXFwkKFskJmAnXXxcXGRcXGQ/fDxbXj5dKj4pL2c7XG52YXIgU1VCU1RJVFVUSU9OX1NZTUJPTFNfTk9fTkFNRUQgPSAvXFwkKFskJmAnXXxcXGRcXGQ/KS9nO1xuXG52YXIgbWF5YmVUb1N0cmluZyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgPT09IHVuZGVmaW5lZCA/IGl0IDogU3RyaW5nKGl0KTtcbn07XG5cbi8vIEBAcmVwbGFjZSBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdyZXBsYWNlJywgMiwgZnVuY3Rpb24gKGRlZmluZWQsIFJFUExBQ0UsICRyZXBsYWNlLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1zdHJpbmcucHJvdG90eXBlLnJlcGxhY2VcbiAgICBmdW5jdGlvbiByZXBsYWNlKHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciBPID0gZGVmaW5lZCh0aGlzKTtcbiAgICAgIHZhciBmbiA9IHNlYXJjaFZhbHVlID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHNlYXJjaFZhbHVlW1JFUExBQ0VdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWRcbiAgICAgICAgPyBmbi5jYWxsKHNlYXJjaFZhbHVlLCBPLCByZXBsYWNlVmFsdWUpXG4gICAgICAgIDogJHJlcGxhY2UuY2FsbChTdHJpbmcoTyksIHNlYXJjaFZhbHVlLCByZXBsYWNlVmFsdWUpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEByZXBsYWNlXWAgbWV0aG9kXG4gICAgLy8gaHR0cHM6Ly90YzM5LmdpdGh1Yi5pby9lY21hMjYyLyNzZWMtcmVnZXhwLnByb3RvdHlwZS1AQHJlcGxhY2VcbiAgICBmdW5jdGlvbiAocmVnZXhwLCByZXBsYWNlVmFsdWUpIHtcbiAgICAgIHZhciByZXMgPSBtYXliZUNhbGxOYXRpdmUoJHJlcGxhY2UsIHJlZ2V4cCwgdGhpcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgIGlmIChyZXMuZG9uZSkgcmV0dXJuIHJlcy52YWx1ZTtcblxuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIGZ1bmN0aW9uYWxSZXBsYWNlID0gdHlwZW9mIHJlcGxhY2VWYWx1ZSA9PT0gJ2Z1bmN0aW9uJztcbiAgICAgIGlmICghZnVuY3Rpb25hbFJlcGxhY2UpIHJlcGxhY2VWYWx1ZSA9IFN0cmluZyhyZXBsYWNlVmFsdWUpO1xuICAgICAgdmFyIGdsb2JhbCA9IHJ4Lmdsb2JhbDtcbiAgICAgIGlmIChnbG9iYWwpIHtcbiAgICAgICAgdmFyIGZ1bGxVbmljb2RlID0gcngudW5pY29kZTtcbiAgICAgICAgcngubGFzdEluZGV4ID0gMDtcbiAgICAgIH1cbiAgICAgIHZhciByZXN1bHRzID0gW107XG4gICAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVnRXhwRXhlYyhyeCwgUyk7XG4gICAgICAgIGlmIChyZXN1bHQgPT09IG51bGwpIGJyZWFrO1xuICAgICAgICByZXN1bHRzLnB1c2gocmVzdWx0KTtcbiAgICAgICAgaWYgKCFnbG9iYWwpIGJyZWFrO1xuICAgICAgICB2YXIgbWF0Y2hTdHIgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgaWYgKG1hdGNoU3RyID09PSAnJykgcngubGFzdEluZGV4ID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHRvTGVuZ3RoKHJ4Lmxhc3RJbmRleCksIGZ1bGxVbmljb2RlKTtcbiAgICAgIH1cbiAgICAgIHZhciBhY2N1bXVsYXRlZFJlc3VsdCA9ICcnO1xuICAgICAgdmFyIG5leHRTb3VyY2VQb3NpdGlvbiA9IDA7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgcmVzdWx0ID0gcmVzdWx0c1tpXTtcbiAgICAgICAgdmFyIG1hdGNoZWQgPSBTdHJpbmcocmVzdWx0WzBdKTtcbiAgICAgICAgdmFyIHBvc2l0aW9uID0gbWF4KG1pbih0b0ludGVnZXIocmVzdWx0LmluZGV4KSwgUy5sZW5ndGgpLCAwKTtcbiAgICAgICAgdmFyIGNhcHR1cmVzID0gW107XG4gICAgICAgIC8vIE5PVEU6IFRoaXMgaXMgZXF1aXZhbGVudCB0b1xuICAgICAgICAvLyAgIGNhcHR1cmVzID0gcmVzdWx0LnNsaWNlKDEpLm1hcChtYXliZVRvU3RyaW5nKVxuICAgICAgICAvLyBidXQgZm9yIHNvbWUgcmVhc29uIGBuYXRpdmVTbGljZS5jYWxsKHJlc3VsdCwgMSwgcmVzdWx0Lmxlbmd0aClgIChjYWxsZWQgaW5cbiAgICAgICAgLy8gdGhlIHNsaWNlIHBvbHlmaWxsIHdoZW4gc2xpY2luZyBuYXRpdmUgYXJyYXlzKSBcImRvZXNuJ3Qgd29ya1wiIGluIHNhZmFyaSA5IGFuZFxuICAgICAgICAvLyBjYXVzZXMgYSBjcmFzaCAoaHR0cHM6Ly9wYXN0ZWJpbi5jb20vTjIxUXplUUEpIHdoZW4gdHJ5aW5nIHRvIGRlYnVnIGl0LlxuICAgICAgICBmb3IgKHZhciBqID0gMTsgaiA8IHJlc3VsdC5sZW5ndGg7IGorKykgY2FwdHVyZXMucHVzaChtYXliZVRvU3RyaW5nKHJlc3VsdFtqXSkpO1xuICAgICAgICB2YXIgbmFtZWRDYXB0dXJlcyA9IHJlc3VsdC5ncm91cHM7XG4gICAgICAgIGlmIChmdW5jdGlvbmFsUmVwbGFjZSkge1xuICAgICAgICAgIHZhciByZXBsYWNlckFyZ3MgPSBbbWF0Y2hlZF0uY29uY2F0KGNhcHR1cmVzLCBwb3NpdGlvbiwgUyk7XG4gICAgICAgICAgaWYgKG5hbWVkQ2FwdHVyZXMgIT09IHVuZGVmaW5lZCkgcmVwbGFjZXJBcmdzLnB1c2gobmFtZWRDYXB0dXJlcyk7XG4gICAgICAgICAgdmFyIHJlcGxhY2VtZW50ID0gU3RyaW5nKHJlcGxhY2VWYWx1ZS5hcHBseSh1bmRlZmluZWQsIHJlcGxhY2VyQXJncykpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJlcGxhY2VtZW50ID0gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIFMsIHBvc2l0aW9uLCBjYXB0dXJlcywgbmFtZWRDYXB0dXJlcywgcmVwbGFjZVZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocG9zaXRpb24gPj0gbmV4dFNvdXJjZVBvc2l0aW9uKSB7XG4gICAgICAgICAgYWNjdW11bGF0ZWRSZXN1bHQgKz0gUy5zbGljZShuZXh0U291cmNlUG9zaXRpb24sIHBvc2l0aW9uKSArIHJlcGxhY2VtZW50O1xuICAgICAgICAgIG5leHRTb3VyY2VQb3NpdGlvbiA9IHBvc2l0aW9uICsgbWF0Y2hlZC5sZW5ndGg7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIHJldHVybiBhY2N1bXVsYXRlZFJlc3VsdCArIFMuc2xpY2UobmV4dFNvdXJjZVBvc2l0aW9uKTtcbiAgICB9XG4gIF07XG5cbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1nZXRzdWJzdGl0dXRpb25cbiAgZnVuY3Rpb24gZ2V0U3Vic3RpdHV0aW9uKG1hdGNoZWQsIHN0ciwgcG9zaXRpb24sIGNhcHR1cmVzLCBuYW1lZENhcHR1cmVzLCByZXBsYWNlbWVudCkge1xuICAgIHZhciB0YWlsUG9zID0gcG9zaXRpb24gKyBtYXRjaGVkLmxlbmd0aDtcbiAgICB2YXIgbSA9IGNhcHR1cmVzLmxlbmd0aDtcbiAgICB2YXIgc3ltYm9scyA9IFNVQlNUSVRVVElPTl9TWU1CT0xTX05PX05BTUVEO1xuICAgIGlmIChuYW1lZENhcHR1cmVzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIG5hbWVkQ2FwdHVyZXMgPSB0b09iamVjdChuYW1lZENhcHR1cmVzKTtcbiAgICAgIHN5bWJvbHMgPSBTVUJTVElUVVRJT05fU1lNQk9MUztcbiAgICB9XG4gICAgcmV0dXJuICRyZXBsYWNlLmNhbGwocmVwbGFjZW1lbnQsIHN5bWJvbHMsIGZ1bmN0aW9uIChtYXRjaCwgY2gpIHtcbiAgICAgIHZhciBjYXB0dXJlO1xuICAgICAgc3dpdGNoIChjaC5jaGFyQXQoMCkpIHtcbiAgICAgICAgY2FzZSAnJCc6IHJldHVybiAnJCc7XG4gICAgICAgIGNhc2UgJyYnOiByZXR1cm4gbWF0Y2hlZDtcbiAgICAgICAgY2FzZSAnYCc6IHJldHVybiBzdHIuc2xpY2UoMCwgcG9zaXRpb24pO1xuICAgICAgICBjYXNlIFwiJ1wiOiByZXR1cm4gc3RyLnNsaWNlKHRhaWxQb3MpO1xuICAgICAgICBjYXNlICc8JzpcbiAgICAgICAgICBjYXB0dXJlID0gbmFtZWRDYXB0dXJlc1tjaC5zbGljZSgxLCAtMSldO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBkZWZhdWx0OiAvLyBcXGRcXGQ/XG4gICAgICAgICAgdmFyIG4gPSArY2g7XG4gICAgICAgICAgaWYgKG4gPT09IDApIHJldHVybiBtYXRjaDtcbiAgICAgICAgICBpZiAobiA+IG0pIHtcbiAgICAgICAgICAgIHZhciBmID0gZmxvb3IobiAvIDEwKTtcbiAgICAgICAgICAgIGlmIChmID09PSAwKSByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgICBpZiAoZiA8PSBtKSByZXR1cm4gY2FwdHVyZXNbZiAtIDFdID09PSB1bmRlZmluZWQgPyBjaC5jaGFyQXQoMSkgOiBjYXB0dXJlc1tmIC0gMV0gKyBjaC5jaGFyQXQoMSk7XG4gICAgICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgfVxuICAgICAgICAgIGNhcHR1cmUgPSBjYXB0dXJlc1tuIC0gMV07XG4gICAgICB9XG4gICAgICByZXR1cm4gY2FwdHVyZSA9PT0gdW5kZWZpbmVkID8gJycgOiBjYXB0dXJlO1xuICAgIH0pO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgc2FtZVZhbHVlID0gcmVxdWlyZSgnLi9fc2FtZS12YWx1ZScpO1xudmFyIHJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xuXG4vLyBAQHNlYXJjaCBsb2dpY1xucmVxdWlyZSgnLi9fZml4LXJlLXdrcycpKCdzZWFyY2gnLCAxLCBmdW5jdGlvbiAoZGVmaW5lZCwgU0VBUkNILCAkc2VhcmNoLCBtYXliZUNhbGxOYXRpdmUpIHtcbiAgcmV0dXJuIFtcbiAgICAvLyBgU3RyaW5nLnByb3RvdHlwZS5zZWFyY2hgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc2VhcmNoXG4gICAgZnVuY3Rpb24gc2VhcmNoKHJlZ2V4cCkge1xuICAgICAgdmFyIE8gPSBkZWZpbmVkKHRoaXMpO1xuICAgICAgdmFyIGZuID0gcmVnZXhwID09IHVuZGVmaW5lZCA/IHVuZGVmaW5lZCA6IHJlZ2V4cFtTRUFSQ0hdO1xuICAgICAgcmV0dXJuIGZuICE9PSB1bmRlZmluZWQgPyBmbi5jYWxsKHJlZ2V4cCwgTykgOiBuZXcgUmVnRXhwKHJlZ2V4cClbU0VBUkNIXShTdHJpbmcoTykpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdYCBtZXRob2RcbiAgICAvLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL2VjbWEyNjIvI3NlYy1yZWdleHAucHJvdG90eXBlLUBAc2VhcmNoXG4gICAgZnVuY3Rpb24gKHJlZ2V4cCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZSgkc2VhcmNoLCByZWdleHAsIHRoaXMpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuICAgICAgdmFyIHJ4ID0gYW5PYmplY3QocmVnZXhwKTtcbiAgICAgIHZhciBTID0gU3RyaW5nKHRoaXMpO1xuICAgICAgdmFyIHByZXZpb3VzTGFzdEluZGV4ID0gcngubGFzdEluZGV4O1xuICAgICAgaWYgKCFzYW1lVmFsdWUocHJldmlvdXNMYXN0SW5kZXgsIDApKSByeC5sYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHJlc3VsdCA9IHJlZ0V4cEV4ZWMocngsIFMpO1xuICAgICAgaWYgKCFzYW1lVmFsdWUocngubGFzdEluZGV4LCBwcmV2aW91c0xhc3RJbmRleCkpIHJ4Lmxhc3RJbmRleCA9IHByZXZpb3VzTGFzdEluZGV4O1xuICAgICAgcmV0dXJuIHJlc3VsdCA9PT0gbnVsbCA/IC0xIDogcmVzdWx0LmluZGV4O1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgaXNSZWdFeHAgPSByZXF1aXJlKCcuL19pcy1yZWdleHAnKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciBhZHZhbmNlU3RyaW5nSW5kZXggPSByZXF1aXJlKCcuL19hZHZhbmNlLXN0cmluZy1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYy1hYnN0cmFjdCcpO1xudmFyIHJlZ2V4cEV4ZWMgPSByZXF1aXJlKCcuL19yZWdleHAtZXhlYycpO1xudmFyIGZhaWxzID0gcmVxdWlyZSgnLi9fZmFpbHMnKTtcbnZhciAkbWluID0gTWF0aC5taW47XG52YXIgJHB1c2ggPSBbXS5wdXNoO1xudmFyICRTUExJVCA9ICdzcGxpdCc7XG52YXIgTEVOR1RIID0gJ2xlbmd0aCc7XG52YXIgTEFTVF9JTkRFWCA9ICdsYXN0SW5kZXgnO1xudmFyIE1BWF9VSU5UMzIgPSAweGZmZmZmZmZmO1xuXG4vLyBiYWJlbC1taW5pZnkgdHJhbnNwaWxlcyBSZWdFeHAoJ3gnLCAneScpIC0+IC94L3kgYW5kIGl0IGNhdXNlcyBTeW50YXhFcnJvclxudmFyIFNVUFBPUlRTX1kgPSAhZmFpbHMoZnVuY3Rpb24gKCkgeyBSZWdFeHAoTUFYX1VJTlQzMiwgJ3knKTsgfSk7XG5cbi8vIEBAc3BsaXQgbG9naWNcbnJlcXVpcmUoJy4vX2ZpeC1yZS13a3MnKSgnc3BsaXQnLCAyLCBmdW5jdGlvbiAoZGVmaW5lZCwgU1BMSVQsICRzcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7XG4gIHZhciBpbnRlcm5hbFNwbGl0O1xuICBpZiAoXG4gICAgJ2FiYmMnWyRTUExJVF0oLyhiKSovKVsxXSA9PSAnYycgfHxcbiAgICAndGVzdCdbJFNQTElUXSgvKD86KS8sIC0xKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnYWInWyRTUExJVF0oLyg/OmFiKSovKVtMRU5HVEhdICE9IDIgfHxcbiAgICAnLidbJFNQTElUXSgvKC4/KSguPykvKVtMRU5HVEhdICE9IDQgfHxcbiAgICAnLidbJFNQTElUXSgvKCkoKS8pW0xFTkdUSF0gPiAxIHx8XG4gICAgJydbJFNQTElUXSgvLj8vKVtMRU5HVEhdXG4gICkge1xuICAgIC8vIGJhc2VkIG9uIGVzNS1zaGltIGltcGxlbWVudGF0aW9uLCBuZWVkIHRvIHJld29yayBpdFxuICAgIGludGVybmFsU3BsaXQgPSBmdW5jdGlvbiAoc2VwYXJhdG9yLCBsaW1pdCkge1xuICAgICAgdmFyIHN0cmluZyA9IFN0cmluZyh0aGlzKTtcbiAgICAgIGlmIChzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCAmJiBsaW1pdCA9PT0gMCkgcmV0dXJuIFtdO1xuICAgICAgLy8gSWYgYHNlcGFyYXRvcmAgaXMgbm90IGEgcmVnZXgsIHVzZSBuYXRpdmUgc3BsaXRcbiAgICAgIGlmICghaXNSZWdFeHAoc2VwYXJhdG9yKSkgcmV0dXJuICRzcGxpdC5jYWxsKHN0cmluZywgc2VwYXJhdG9yLCBsaW1pdCk7XG4gICAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgICB2YXIgZmxhZ3MgPSAoc2VwYXJhdG9yLmlnbm9yZUNhc2UgPyAnaScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgK1xuICAgICAgICAgICAgICAgICAgKHNlcGFyYXRvci51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChzZXBhcmF0b3Iuc3RpY2t5ID8gJ3knIDogJycpO1xuICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwO1xuICAgICAgdmFyIHNwbGl0TGltaXQgPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwO1xuICAgICAgLy8gTWFrZSBgZ2xvYmFsYCBhbmQgYXZvaWQgYGxhc3RJbmRleGAgaXNzdWVzIGJ5IHdvcmtpbmcgd2l0aCBhIGNvcHlcbiAgICAgIHZhciBzZXBhcmF0b3JDb3B5ID0gbmV3IFJlZ0V4cChzZXBhcmF0b3Iuc291cmNlLCBmbGFncyArICdnJyk7XG4gICAgICB2YXIgbWF0Y2gsIGxhc3RJbmRleCwgbGFzdExlbmd0aDtcbiAgICAgIHdoaWxlIChtYXRjaCA9IHJlZ2V4cEV4ZWMuY2FsbChzZXBhcmF0b3JDb3B5LCBzdHJpbmcpKSB7XG4gICAgICAgIGxhc3RJbmRleCA9IHNlcGFyYXRvckNvcHlbTEFTVF9JTkRFWF07XG4gICAgICAgIGlmIChsYXN0SW5kZXggPiBsYXN0TGFzdEluZGV4KSB7XG4gICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgaWYgKG1hdGNoW0xFTkdUSF0gPiAxICYmIG1hdGNoLmluZGV4IDwgc3RyaW5nW0xFTkdUSF0pICRwdXNoLmFwcGx5KG91dHB1dCwgbWF0Y2guc2xpY2UoMSkpO1xuICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXVtMRU5HVEhdO1xuICAgICAgICAgIGxhc3RMYXN0SW5kZXggPSBsYXN0SW5kZXg7XG4gICAgICAgICAgaWYgKG91dHB1dFtMRU5HVEhdID49IHNwbGl0TGltaXQpIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGlmIChzZXBhcmF0b3JDb3B5W0xBU1RfSU5ERVhdID09PSBtYXRjaC5pbmRleCkgc2VwYXJhdG9yQ29weVtMQVNUX0lOREVYXSsrOyAvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wXG4gICAgICB9XG4gICAgICBpZiAobGFzdExhc3RJbmRleCA9PT0gc3RyaW5nW0xFTkdUSF0pIHtcbiAgICAgICAgaWYgKGxhc3RMZW5ndGggfHwgIXNlcGFyYXRvckNvcHkudGVzdCgnJykpIG91dHB1dC5wdXNoKCcnKTtcbiAgICAgIH0gZWxzZSBvdXRwdXQucHVzaChzdHJpbmcuc2xpY2UobGFzdExhc3RJbmRleCkpO1xuICAgICAgcmV0dXJuIG91dHB1dFtMRU5HVEhdID4gc3BsaXRMaW1pdCA/IG91dHB1dC5zbGljZSgwLCBzcGxpdExpbWl0KSA6IG91dHB1dDtcbiAgICB9O1xuICAvLyBDaGFrcmEsIFY4XG4gIH0gZWxzZSBpZiAoJzAnWyRTUExJVF0odW5kZWZpbmVkLCAwKVtMRU5HVEhdKSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICByZXR1cm4gc2VwYXJhdG9yID09PSB1bmRlZmluZWQgJiYgbGltaXQgPT09IDAgPyBbXSA6ICRzcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgaW50ZXJuYWxTcGxpdCA9ICRzcGxpdDtcbiAgfVxuXG4gIHJldHVybiBbXG4gICAgLy8gYFN0cmluZy5wcm90b3R5cGUuc3BsaXRgIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc3BsaXRcbiAgICBmdW5jdGlvbiBzcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgICB2YXIgTyA9IGRlZmluZWQodGhpcyk7XG4gICAgICB2YXIgc3BsaXR0ZXIgPSBzZXBhcmF0b3IgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VwYXJhdG9yW1NQTElUXTtcbiAgICAgIHJldHVybiBzcGxpdHRlciAhPT0gdW5kZWZpbmVkXG4gICAgICAgID8gc3BsaXR0ZXIuY2FsbChzZXBhcmF0b3IsIE8sIGxpbWl0KVxuICAgICAgICA6IGludGVybmFsU3BsaXQuY2FsbChTdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpO1xuICAgIH0sXG4gICAgLy8gYFJlZ0V4cC5wcm90b3R5cGVbQEBzcGxpdF1gIG1ldGhvZFxuICAgIC8vIGh0dHBzOi8vdGMzOS5naXRodWIuaW8vZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzcGxpdFxuICAgIC8vXG4gICAgLy8gTk9URTogVGhpcyBjYW5ub3QgYmUgcHJvcGVybHkgcG9seWZpbGxlZCBpbiBlbmdpbmVzIHRoYXQgZG9uJ3Qgc3VwcG9ydFxuICAgIC8vIHRoZSAneScgZmxhZy5cbiAgICBmdW5jdGlvbiAocmVnZXhwLCBsaW1pdCkge1xuICAgICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZShpbnRlcm5hbFNwbGl0LCByZWdleHAsIHRoaXMsIGxpbWl0LCBpbnRlcm5hbFNwbGl0ICE9PSAkc3BsaXQpO1xuICAgICAgaWYgKHJlcy5kb25lKSByZXR1cm4gcmVzLnZhbHVlO1xuXG4gICAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApO1xuICAgICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7XG4gICAgICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3RvcihyeCwgUmVnRXhwKTtcblxuICAgICAgdmFyIHVuaWNvZGVNYXRjaGluZyA9IHJ4LnVuaWNvZGU7XG4gICAgICB2YXIgZmxhZ3MgPSAocnguaWdub3JlQ2FzZSA/ICdpJyA6ICcnKSArXG4gICAgICAgICAgICAgICAgICAocngubXVsdGlsaW5lID8gJ20nIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChyeC51bmljb2RlID8gJ3UnIDogJycpICtcbiAgICAgICAgICAgICAgICAgIChTVVBQT1JUU19ZID8gJ3knIDogJ2cnKTtcblxuICAgICAgLy8gXig/ICsgcnggKyApIGlzIG5lZWRlZCwgaW4gY29tYmluYXRpb24gd2l0aCBzb21lIFMgc2xpY2luZywgdG9cbiAgICAgIC8vIHNpbXVsYXRlIHRoZSAneScgZmxhZy5cbiAgICAgIHZhciBzcGxpdHRlciA9IG5ldyBDKFNVUFBPUlRTX1kgPyByeCA6ICdeKD86JyArIHJ4LnNvdXJjZSArICcpJywgZmxhZ3MpO1xuICAgICAgdmFyIGxpbSA9IGxpbWl0ID09PSB1bmRlZmluZWQgPyBNQVhfVUlOVDMyIDogbGltaXQgPj4+IDA7XG4gICAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107XG4gICAgICBpZiAoUy5sZW5ndGggPT09IDApIHJldHVybiBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgUykgPT09IG51bGwgPyBbU10gOiBbXTtcbiAgICAgIHZhciBwID0gMDtcbiAgICAgIHZhciBxID0gMDtcbiAgICAgIHZhciBBID0gW107XG4gICAgICB3aGlsZSAocSA8IFMubGVuZ3RoKSB7XG4gICAgICAgIHNwbGl0dGVyLmxhc3RJbmRleCA9IFNVUFBPUlRTX1kgPyBxIDogMDtcbiAgICAgICAgdmFyIHogPSBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgU1VQUE9SVFNfWSA/IFMgOiBTLnNsaWNlKHEpKTtcbiAgICAgICAgdmFyIGU7XG4gICAgICAgIGlmIChcbiAgICAgICAgICB6ID09PSBudWxsIHx8XG4gICAgICAgICAgKGUgPSAkbWluKHRvTGVuZ3RoKHNwbGl0dGVyLmxhc3RJbmRleCArIChTVVBQT1JUU19ZID8gMCA6IHEpKSwgUy5sZW5ndGgpKSA9PT0gcFxuICAgICAgICApIHtcbiAgICAgICAgICBxID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHEsIHVuaWNvZGVNYXRjaGluZyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgQS5wdXNoKFMuc2xpY2UocCwgcSkpO1xuICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTtcbiAgICAgICAgICBmb3IgKHZhciBpID0gMTsgaSA8PSB6Lmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICAgICAgQS5wdXNoKHpbaV0pO1xuICAgICAgICAgICAgaWYgKEEubGVuZ3RoID09PSBsaW0pIHJldHVybiBBO1xuICAgICAgICAgIH1cbiAgICAgICAgICBxID0gcCA9IGU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEEucHVzaChTLnNsaWNlKHApKTtcbiAgICAgIHJldHVybiBBO1xuICAgIH1cbiAgXTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xucmVxdWlyZSgnLi9lczYucmVnZXhwLmZsYWdzJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciAkZmxhZ3MgPSByZXF1aXJlKCcuL19mbGFncycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciBUT19TVFJJTkcgPSAndG9TdHJpbmcnO1xudmFyICR0b1N0cmluZyA9IC8uL1tUT19TVFJJTkddO1xuXG52YXIgZGVmaW5lID0gZnVuY3Rpb24gKGZuKSB7XG4gIHJlcXVpcmUoJy4vX3JlZGVmaW5lJykoUmVnRXhwLnByb3RvdHlwZSwgVE9fU1RSSU5HLCBmbiwgdHJ1ZSk7XG59O1xuXG4vLyAyMS4yLjUuMTQgUmVnRXhwLnByb3RvdHlwZS50b1N0cmluZygpXG5pZiAocmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7IHJldHVybiAkdG9TdHJpbmcuY2FsbCh7IHNvdXJjZTogJ2EnLCBmbGFnczogJ2InIH0pICE9ICcvYS9iJzsgfSkpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHZhciBSID0gYW5PYmplY3QodGhpcyk7XG4gICAgcmV0dXJuICcvJy5jb25jYXQoUi5zb3VyY2UsICcvJyxcbiAgICAgICdmbGFncycgaW4gUiA/IFIuZmxhZ3MgOiAhREVTQ1JJUFRPUlMgJiYgUiBpbnN0YW5jZW9mIFJlZ0V4cCA/ICRmbGFncy5jYWxsKFIpIDogdW5kZWZpbmVkKTtcbiAgfSk7XG4vLyBGRjQ0LSBSZWdFeHAjdG9TdHJpbmcgaGFzIGEgd3JvbmcgbmFtZVxufSBlbHNlIGlmICgkdG9TdHJpbmcubmFtZSAhPSBUT19TVFJJTkcpIHtcbiAgZGVmaW5lKGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiAkdG9TdHJpbmcuY2FsbCh0aGlzKTtcbiAgfSk7XG59XG4iLCIndXNlIHN0cmljdCc7XG52YXIgc3Ryb25nID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi1zdHJvbmcnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBTRVQgPSAnU2V0JztcblxuLy8gMjMuMiBTZXQgT2JqZWN0c1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoU0VULCBmdW5jdGlvbiAoZ2V0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBTZXQoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy4yLjMuMSBTZXQucHJvdG90eXBlLmFkZCh2YWx1ZSlcbiAgYWRkOiBmdW5jdGlvbiBhZGQodmFsdWUpIHtcbiAgICByZXR1cm4gc3Ryb25nLmRlZih2YWxpZGF0ZSh0aGlzLCBTRVQpLCB2YWx1ZSA9IHZhbHVlID09PSAwID8gMCA6IHZhbHVlLCB2YWx1ZSk7XG4gIH1cbn0sIHN0cm9uZyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy4yIFN0cmluZy5wcm90b3R5cGUuYW5jaG9yKG5hbWUpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdhbmNob3InLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYW5jaG9yKG5hbWUpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYScsICduYW1lJywgbmFtZSk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjMgU3RyaW5nLnByb3RvdHlwZS5iaWcoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnYmlnJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJpZygpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYmlnJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNCBTdHJpbmcucHJvdG90eXBlLmJsaW5rKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGJsaW5rKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdibGluaycsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjUgU3RyaW5nLnByb3RvdHlwZS5ib2xkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2JvbGQnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gYm9sZCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnYicsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykoZmFsc2UpO1xuJGV4cG9ydCgkZXhwb3J0LlAsICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMy4zIFN0cmluZy5wcm90b3R5cGUuY29kZVBvaW50QXQocG9zKVxuICBjb2RlUG9pbnRBdDogZnVuY3Rpb24gY29kZVBvaW50QXQocG9zKSB7XG4gICAgcmV0dXJuICRhdCh0aGlzLCBwb3MpO1xuICB9XG59KTtcbiIsIi8vIDIxLjEuMy42IFN0cmluZy5wcm90b3R5cGUuZW5kc1dpdGgoc2VhcmNoU3RyaW5nIFssIGVuZFBvc2l0aW9uXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBFTkRTX1dJVEggPSAnZW5kc1dpdGgnO1xudmFyICRlbmRzV2l0aCA9ICcnW0VORFNfV0lUSF07XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMtaXMtcmVnZXhwJykoRU5EU19XSVRIKSwgJ1N0cmluZycsIHtcbiAgZW5kc1dpdGg6IGZ1bmN0aW9uIGVuZHNXaXRoKHNlYXJjaFN0cmluZyAvKiAsIGVuZFBvc2l0aW9uID0gQGxlbmd0aCAqLykge1xuICAgIHZhciB0aGF0ID0gY29udGV4dCh0aGlzLCBzZWFyY2hTdHJpbmcsIEVORFNfV0lUSCk7XG4gICAgdmFyIGVuZFBvc2l0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIGxlbiA9IHRvTGVuZ3RoKHRoYXQubGVuZ3RoKTtcbiAgICB2YXIgZW5kID0gZW5kUG9zaXRpb24gPT09IHVuZGVmaW5lZCA/IGxlbiA6IE1hdGgubWluKHRvTGVuZ3RoKGVuZFBvc2l0aW9uKSwgbGVuKTtcbiAgICB2YXIgc2VhcmNoID0gU3RyaW5nKHNlYXJjaFN0cmluZyk7XG4gICAgcmV0dXJuICRlbmRzV2l0aFxuICAgICAgPyAkZW5kc1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGVuZClcbiAgICAgIDogdGhhdC5zbGljZShlbmQgLSBzZWFyY2gubGVuZ3RoLCBlbmQpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuNiBTdHJpbmcucHJvdG90eXBlLmZpeGVkKClcbnJlcXVpcmUoJy4vX3N0cmluZy1odG1sJykoJ2ZpeGVkJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGZpeGVkKCkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICd0dCcsICcnLCAnJyk7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjcgU3RyaW5nLnByb3RvdHlwZS5mb250Y29sb3IoY29sb3IpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdmb250Y29sb3InLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gZm9udGNvbG9yKGNvbG9yKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2ZvbnQnLCAnY29sb3InLCBjb2xvcik7XG4gIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjggU3RyaW5nLnByb3RvdHlwZS5mb250c2l6ZShzaXplKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnZm9udHNpemUnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gZm9udHNpemUoc2l6ZSkge1xuICAgIHJldHVybiBjcmVhdGVIVE1MKHRoaXMsICdmb250JywgJ3NpemUnLCBzaXplKTtcbiAgfTtcbn0pO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIGZyb21DaGFyQ29kZSA9IFN0cmluZy5mcm9tQ2hhckNvZGU7XG52YXIgJGZyb21Db2RlUG9pbnQgPSBTdHJpbmcuZnJvbUNvZGVQb2ludDtcblxuLy8gbGVuZ3RoIHNob3VsZCBiZSAxLCBvbGQgRkYgcHJvYmxlbVxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAoISEkZnJvbUNvZGVQb2ludCAmJiAkZnJvbUNvZGVQb2ludC5sZW5ndGggIT0gMSksICdTdHJpbmcnLCB7XG4gIC8vIDIxLjEuMi4yIFN0cmluZy5mcm9tQ29kZVBvaW50KC4uLmNvZGVQb2ludHMpXG4gIGZyb21Db2RlUG9pbnQ6IGZ1bmN0aW9uIGZyb21Db2RlUG9pbnQoeCkgeyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLXVudXNlZC12YXJzXG4gICAgdmFyIHJlcyA9IFtdO1xuICAgIHZhciBhTGVuID0gYXJndW1lbnRzLmxlbmd0aDtcbiAgICB2YXIgaSA9IDA7XG4gICAgdmFyIGNvZGU7XG4gICAgd2hpbGUgKGFMZW4gPiBpKSB7XG4gICAgICBjb2RlID0gK2FyZ3VtZW50c1tpKytdO1xuICAgICAgaWYgKHRvQWJzb2x1dGVJbmRleChjb2RlLCAweDEwZmZmZikgIT09IGNvZGUpIHRocm93IFJhbmdlRXJyb3IoY29kZSArICcgaXMgbm90IGEgdmFsaWQgY29kZSBwb2ludCcpO1xuICAgICAgcmVzLnB1c2goY29kZSA8IDB4MTAwMDBcbiAgICAgICAgPyBmcm9tQ2hhckNvZGUoY29kZSlcbiAgICAgICAgOiBmcm9tQ2hhckNvZGUoKChjb2RlIC09IDB4MTAwMDApID4+IDEwKSArIDB4ZDgwMCwgY29kZSAlIDB4NDAwICsgMHhkYzAwKVxuICAgICAgKTtcbiAgICB9IHJldHVybiByZXMuam9pbignJyk7XG4gIH1cbn0pO1xuIiwiLy8gMjEuMS4zLjcgU3RyaW5nLnByb3RvdHlwZS5pbmNsdWRlcyhzZWFyY2hTdHJpbmcsIHBvc2l0aW9uID0gMClcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29udGV4dCA9IHJlcXVpcmUoJy4vX3N0cmluZy1jb250ZXh0Jyk7XG52YXIgSU5DTFVERVMgPSAnaW5jbHVkZXMnO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIHJlcXVpcmUoJy4vX2ZhaWxzLWlzLXJlZ2V4cCcpKElOQ0xVREVTKSwgJ1N0cmluZycsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKHNlYXJjaFN0cmluZyAvKiAsIHBvc2l0aW9uID0gMCAqLykge1xuICAgIHJldHVybiAhIX5jb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgSU5DTFVERVMpXG4gICAgICAuaW5kZXhPZihzZWFyY2hTdHJpbmcsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBCLjIuMy45IFN0cmluZy5wcm90b3R5cGUuaXRhbGljcygpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdpdGFsaWNzJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGl0YWxpY3MoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2knLCAnJywgJycpO1xuICB9O1xufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGF0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWF0JykodHJ1ZSk7XG5cbi8vIDIxLjEuMy4yNyBTdHJpbmcucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbnJlcXVpcmUoJy4vX2l0ZXItZGVmaW5lJykoU3RyaW5nLCAnU3RyaW5nJywgZnVuY3Rpb24gKGl0ZXJhdGVkKSB7XG4gIHRoaXMuX3QgPSBTdHJpbmcoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbi8vIDIxLjEuNS4yLjEgJVN0cmluZ0l0ZXJhdG9yUHJvdG90eXBlJS5uZXh0KClcbn0sIGZ1bmN0aW9uICgpIHtcbiAgdmFyIE8gPSB0aGlzLl90O1xuICB2YXIgaW5kZXggPSB0aGlzLl9pO1xuICB2YXIgcG9pbnQ7XG4gIGlmIChpbmRleCA+PSBPLmxlbmd0aCkgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICBwb2ludCA9ICRhdChPLCBpbmRleCk7XG4gIHRoaXMuX2kgKz0gcG9pbnQubGVuZ3RoO1xuICByZXR1cm4geyB2YWx1ZTogcG9pbnQsIGRvbmU6IGZhbHNlIH07XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjEwIFN0cmluZy5wcm90b3R5cGUubGluayh1cmwpXG5yZXF1aXJlKCcuL19zdHJpbmctaHRtbCcpKCdsaW5rJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGxpbmsodXJsKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ2EnLCAnaHJlZicsIHVybCk7XG4gIH07XG59KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9JT2JqZWN0ID0gcmVxdWlyZSgnLi9fdG8taW9iamVjdCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjIuNCBTdHJpbmcucmF3KGNhbGxTaXRlLCAuLi5zdWJzdGl0dXRpb25zKVxuICByYXc6IGZ1bmN0aW9uIHJhdyhjYWxsU2l0ZSkge1xuICAgIHZhciB0cGwgPSB0b0lPYmplY3QoY2FsbFNpdGUucmF3KTtcbiAgICB2YXIgbGVuID0gdG9MZW5ndGgodHBsLmxlbmd0aCk7XG4gICAgdmFyIGFMZW4gPSBhcmd1bWVudHMubGVuZ3RoO1xuICAgIHZhciByZXMgPSBbXTtcbiAgICB2YXIgaSA9IDA7XG4gICAgd2hpbGUgKGxlbiA+IGkpIHtcbiAgICAgIHJlcy5wdXNoKFN0cmluZyh0cGxbaSsrXSkpO1xuICAgICAgaWYgKGkgPCBhTGVuKSByZXMucHVzaChTdHJpbmcoYXJndW1lbnRzW2ldKSk7XG4gICAgfSByZXR1cm4gcmVzLmpvaW4oJycpO1xuICB9XG59KTtcbiIsInZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG5cbiRleHBvcnQoJGV4cG9ydC5QLCAnU3RyaW5nJywge1xuICAvLyAyMS4xLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5yZXBlYXQoY291bnQpXG4gIHJlcGVhdDogcmVxdWlyZSgnLi9fc3RyaW5nLXJlcGVhdCcpXG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIEIuMi4zLjExIFN0cmluZy5wcm90b3R5cGUuc21hbGwoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc21hbGwnLCBmdW5jdGlvbiAoY3JlYXRlSFRNTCkge1xuICByZXR1cm4gZnVuY3Rpb24gc21hbGwoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUhUTUwodGhpcywgJ3NtYWxsJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiLy8gMjEuMS4zLjE4IFN0cmluZy5wcm90b3R5cGUuc3RhcnRzV2l0aChzZWFyY2hTdHJpbmcgWywgcG9zaXRpb24gXSlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjb250ZXh0ID0gcmVxdWlyZSgnLi9fc3RyaW5nLWNvbnRleHQnKTtcbnZhciBTVEFSVFNfV0lUSCA9ICdzdGFydHNXaXRoJztcbnZhciAkc3RhcnRzV2l0aCA9ICcnW1NUQVJUU19XSVRIXTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiByZXF1aXJlKCcuL19mYWlscy1pcy1yZWdleHAnKShTVEFSVFNfV0lUSCksICdTdHJpbmcnLCB7XG4gIHN0YXJ0c1dpdGg6IGZ1bmN0aW9uIHN0YXJ0c1dpdGgoc2VhcmNoU3RyaW5nIC8qICwgcG9zaXRpb24gPSAwICovKSB7XG4gICAgdmFyIHRoYXQgPSBjb250ZXh0KHRoaXMsIHNlYXJjaFN0cmluZywgU1RBUlRTX1dJVEgpO1xuICAgIHZhciBpbmRleCA9IHRvTGVuZ3RoKE1hdGgubWluKGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkLCB0aGF0Lmxlbmd0aCkpO1xuICAgIHZhciBzZWFyY2ggPSBTdHJpbmcoc2VhcmNoU3RyaW5nKTtcbiAgICByZXR1cm4gJHN0YXJ0c1dpdGhcbiAgICAgID8gJHN0YXJ0c1dpdGguY2FsbCh0aGF0LCBzZWFyY2gsIGluZGV4KVxuICAgICAgOiB0aGF0LnNsaWNlKGluZGV4LCBpbmRleCArIHNlYXJjaC5sZW5ndGgpID09PSBzZWFyY2g7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTIgU3RyaW5nLnByb3RvdHlwZS5zdHJpa2UoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3RyaWtlJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN0cmlrZSgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3RyaWtlJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTMgU3RyaW5nLnByb3RvdHlwZS5zdWIoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3ViJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1YigpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3ViJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gQi4yLjMuMTQgU3RyaW5nLnByb3RvdHlwZS5zdXAoKVxucmVxdWlyZSgnLi9fc3RyaW5nLWh0bWwnKSgnc3VwJywgZnVuY3Rpb24gKGNyZWF0ZUhUTUwpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHN1cCgpIHtcbiAgICByZXR1cm4gY3JlYXRlSFRNTCh0aGlzLCAnc3VwJywgJycsICcnKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gMjEuMS4zLjI1IFN0cmluZy5wcm90b3R5cGUudHJpbSgpXG5yZXF1aXJlKCcuL19zdHJpbmctdHJpbScpKCd0cmltJywgZnVuY3Rpb24gKCR0cmltKSB7XG4gIHJldHVybiBmdW5jdGlvbiB0cmltKCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAzKTtcbiAgfTtcbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gRUNNQVNjcmlwdCA2IHN5bWJvbHMgc2hpbVxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIERFU0NSSVBUT1JTID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgcmVkZWZpbmUgPSByZXF1aXJlKCcuL19yZWRlZmluZScpO1xudmFyIE1FVEEgPSByZXF1aXJlKCcuL19tZXRhJykuS0VZO1xudmFyICRmYWlscyA9IHJlcXVpcmUoJy4vX2ZhaWxzJyk7XG52YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIHdrcyA9IHJlcXVpcmUoJy4vX3drcycpO1xudmFyIHdrc0V4dCA9IHJlcXVpcmUoJy4vX3drcy1leHQnKTtcbnZhciB3a3NEZWZpbmUgPSByZXF1aXJlKCcuL193a3MtZGVmaW5lJyk7XG52YXIgZW51bUtleXMgPSByZXF1aXJlKCcuL19lbnVtLWtleXMnKTtcbnZhciBpc0FycmF5ID0gcmVxdWlyZSgnLi9faXMtYXJyYXknKTtcbnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4vX2FuLW9iamVjdCcpO1xudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9QcmltaXRpdmUgPSByZXF1aXJlKCcuL190by1wcmltaXRpdmUnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xudmFyIF9jcmVhdGUgPSByZXF1aXJlKCcuL19vYmplY3QtY3JlYXRlJyk7XG52YXIgZ09QTkV4dCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BuLWV4dCcpO1xudmFyICRHT1BEID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdvcGQnKTtcbnZhciAkR09QUyA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BzJyk7XG52YXIgJERQID0gcmVxdWlyZSgnLi9fb2JqZWN0LWRwJyk7XG52YXIgJGtleXMgPSByZXF1aXJlKCcuL19vYmplY3Qta2V5cycpO1xudmFyIGdPUEQgPSAkR09QRC5mO1xudmFyIGRQID0gJERQLmY7XG52YXIgZ09QTiA9IGdPUE5FeHQuZjtcbnZhciAkU3ltYm9sID0gZ2xvYmFsLlN5bWJvbDtcbnZhciAkSlNPTiA9IGdsb2JhbC5KU09OO1xudmFyIF9zdHJpbmdpZnkgPSAkSlNPTiAmJiAkSlNPTi5zdHJpbmdpZnk7XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG52YXIgSElEREVOID0gd2tzKCdfaGlkZGVuJyk7XG52YXIgVE9fUFJJTUlUSVZFID0gd2tzKCd0b1ByaW1pdGl2ZScpO1xudmFyIGlzRW51bSA9IHt9LnByb3BlcnR5SXNFbnVtZXJhYmxlO1xudmFyIFN5bWJvbFJlZ2lzdHJ5ID0gc2hhcmVkKCdzeW1ib2wtcmVnaXN0cnknKTtcbnZhciBBbGxTeW1ib2xzID0gc2hhcmVkKCdzeW1ib2xzJyk7XG52YXIgT1BTeW1ib2xzID0gc2hhcmVkKCdvcC1zeW1ib2xzJyk7XG52YXIgT2JqZWN0UHJvdG8gPSBPYmplY3RbUFJPVE9UWVBFXTtcbnZhciBVU0VfTkFUSVZFID0gdHlwZW9mICRTeW1ib2wgPT0gJ2Z1bmN0aW9uJyAmJiAhISRHT1BTLmY7XG52YXIgUU9iamVjdCA9IGdsb2JhbC5RT2JqZWN0O1xuLy8gRG9uJ3QgdXNlIHNldHRlcnMgaW4gUXQgU2NyaXB0LCBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMTczXG52YXIgc2V0dGVyID0gIVFPYmplY3QgfHwgIVFPYmplY3RbUFJPVE9UWVBFXSB8fCAhUU9iamVjdFtQUk9UT1RZUEVdLmZpbmRDaGlsZDtcblxuLy8gZmFsbGJhY2sgZm9yIG9sZCBBbmRyb2lkLCBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9Njg3XG52YXIgc2V0U3ltYm9sRGVzYyA9IERFU0NSSVBUT1JTICYmICRmYWlscyhmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBfY3JlYXRlKGRQKHt9LCAnYScsIHtcbiAgICBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGRQKHRoaXMsICdhJywgeyB2YWx1ZTogNyB9KS5hOyB9XG4gIH0pKS5hICE9IDc7XG59KSA/IGZ1bmN0aW9uIChpdCwga2V5LCBEKSB7XG4gIHZhciBwcm90b0Rlc2MgPSBnT1BEKE9iamVjdFByb3RvLCBrZXkpO1xuICBpZiAocHJvdG9EZXNjKSBkZWxldGUgT2JqZWN0UHJvdG9ba2V5XTtcbiAgZFAoaXQsIGtleSwgRCk7XG4gIGlmIChwcm90b0Rlc2MgJiYgaXQgIT09IE9iamVjdFByb3RvKSBkUChPYmplY3RQcm90bywga2V5LCBwcm90b0Rlc2MpO1xufSA6IGRQO1xuXG52YXIgd3JhcCA9IGZ1bmN0aW9uICh0YWcpIHtcbiAgdmFyIHN5bSA9IEFsbFN5bWJvbHNbdGFnXSA9IF9jcmVhdGUoJFN5bWJvbFtQUk9UT1RZUEVdKTtcbiAgc3ltLl9rID0gdGFnO1xuICByZXR1cm4gc3ltO1xufTtcblxudmFyIGlzU3ltYm9sID0gVVNFX05BVElWRSAmJiB0eXBlb2YgJFN5bWJvbC5pdGVyYXRvciA9PSAnc3ltYm9sJyA/IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gdHlwZW9mIGl0ID09ICdzeW1ib2wnO1xufSA6IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgaW5zdGFuY2VvZiAkU3ltYm9sO1xufTtcblxudmFyICRkZWZpbmVQcm9wZXJ0eSA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnR5KGl0LCBrZXksIEQpIHtcbiAgaWYgKGl0ID09PSBPYmplY3RQcm90bykgJGRlZmluZVByb3BlcnR5KE9QU3ltYm9scywga2V5LCBEKTtcbiAgYW5PYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBhbk9iamVjdChEKTtcbiAgaWYgKGhhcyhBbGxTeW1ib2xzLCBrZXkpKSB7XG4gICAgaWYgKCFELmVudW1lcmFibGUpIHtcbiAgICAgIGlmICghaGFzKGl0LCBISURERU4pKSBkUChpdCwgSElEREVOLCBjcmVhdGVEZXNjKDEsIHt9KSk7XG4gICAgICBpdFtISURERU5dW2tleV0gPSB0cnVlO1xuICAgIH0gZWxzZSB7XG4gICAgICBpZiAoaGFzKGl0LCBISURERU4pICYmIGl0W0hJRERFTl1ba2V5XSkgaXRbSElEREVOXVtrZXldID0gZmFsc2U7XG4gICAgICBEID0gX2NyZWF0ZShELCB7IGVudW1lcmFibGU6IGNyZWF0ZURlc2MoMCwgZmFsc2UpIH0pO1xuICAgIH0gcmV0dXJuIHNldFN5bWJvbERlc2MoaXQsIGtleSwgRCk7XG4gIH0gcmV0dXJuIGRQKGl0LCBrZXksIEQpO1xufTtcbnZhciAkZGVmaW5lUHJvcGVydGllcyA9IGZ1bmN0aW9uIGRlZmluZVByb3BlcnRpZXMoaXQsIFApIHtcbiAgYW5PYmplY3QoaXQpO1xuICB2YXIga2V5cyA9IGVudW1LZXlzKFAgPSB0b0lPYmplY3QoUCkpO1xuICB2YXIgaSA9IDA7XG4gIHZhciBsID0ga2V5cy5sZW5ndGg7XG4gIHZhciBrZXk7XG4gIHdoaWxlIChsID4gaSkgJGRlZmluZVByb3BlcnR5KGl0LCBrZXkgPSBrZXlzW2krK10sIFBba2V5XSk7XG4gIHJldHVybiBpdDtcbn07XG52YXIgJGNyZWF0ZSA9IGZ1bmN0aW9uIGNyZWF0ZShpdCwgUCkge1xuICByZXR1cm4gUCA9PT0gdW5kZWZpbmVkID8gX2NyZWF0ZShpdCkgOiAkZGVmaW5lUHJvcGVydGllcyhfY3JlYXRlKGl0KSwgUCk7XG59O1xudmFyICRwcm9wZXJ0eUlzRW51bWVyYWJsZSA9IGZ1bmN0aW9uIHByb3BlcnR5SXNFbnVtZXJhYmxlKGtleSkge1xuICB2YXIgRSA9IGlzRW51bS5jYWxsKHRoaXMsIGtleSA9IHRvUHJpbWl0aXZlKGtleSwgdHJ1ZSkpO1xuICBpZiAodGhpcyA9PT0gT2JqZWN0UHJvdG8gJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIWhhcyhPUFN5bWJvbHMsIGtleSkpIHJldHVybiBmYWxzZTtcbiAgcmV0dXJuIEUgfHwgIWhhcyh0aGlzLCBrZXkpIHx8ICFoYXMoQWxsU3ltYm9scywga2V5KSB8fCBoYXModGhpcywgSElEREVOKSAmJiB0aGlzW0hJRERFTl1ba2V5XSA/IEUgOiB0cnVlO1xufTtcbnZhciAkZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGl0LCBrZXkpIHtcbiAgaXQgPSB0b0lPYmplY3QoaXQpO1xuICBrZXkgPSB0b1ByaW1pdGl2ZShrZXksIHRydWUpO1xuICBpZiAoaXQgPT09IE9iamVjdFByb3RvICYmIGhhcyhBbGxTeW1ib2xzLCBrZXkpICYmICFoYXMoT1BTeW1ib2xzLCBrZXkpKSByZXR1cm47XG4gIHZhciBEID0gZ09QRChpdCwga2V5KTtcbiAgaWYgKEQgJiYgaGFzKEFsbFN5bWJvbHMsIGtleSkgJiYgIShoYXMoaXQsIEhJRERFTikgJiYgaXRbSElEREVOXVtrZXldKSkgRC5lbnVtZXJhYmxlID0gdHJ1ZTtcbiAgcmV0dXJuIEQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eU5hbWVzID0gZnVuY3Rpb24gZ2V0T3duUHJvcGVydHlOYW1lcyhpdCkge1xuICB2YXIgbmFtZXMgPSBnT1BOKHRvSU9iamVjdChpdCkpO1xuICB2YXIgcmVzdWx0ID0gW107XG4gIHZhciBpID0gMDtcbiAgdmFyIGtleTtcbiAgd2hpbGUgKG5hbWVzLmxlbmd0aCA+IGkpIHtcbiAgICBpZiAoIWhhcyhBbGxTeW1ib2xzLCBrZXkgPSBuYW1lc1tpKytdKSAmJiBrZXkgIT0gSElEREVOICYmIGtleSAhPSBNRVRBKSByZXN1bHQucHVzaChrZXkpO1xuICB9IHJldHVybiByZXN1bHQ7XG59O1xudmFyICRnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgdmFyIElTX09QID0gaXQgPT09IE9iamVjdFByb3RvO1xuICB2YXIgbmFtZXMgPSBnT1BOKElTX09QID8gT1BTeW1ib2xzIDogdG9JT2JqZWN0KGl0KSk7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGkgPSAwO1xuICB2YXIga2V5O1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkge1xuICAgIGlmIChoYXMoQWxsU3ltYm9scywga2V5ID0gbmFtZXNbaSsrXSkgJiYgKElTX09QID8gaGFzKE9iamVjdFByb3RvLCBrZXkpIDogdHJ1ZSkpIHJlc3VsdC5wdXNoKEFsbFN5bWJvbHNba2V5XSk7XG4gIH0gcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8vIDE5LjQuMS4xIFN5bWJvbChbZGVzY3JpcHRpb25dKVxuaWYgKCFVU0VfTkFUSVZFKSB7XG4gICRTeW1ib2wgPSBmdW5jdGlvbiBTeW1ib2woKSB7XG4gICAgaWYgKHRoaXMgaW5zdGFuY2VvZiAkU3ltYm9sKSB0aHJvdyBUeXBlRXJyb3IoJ1N5bWJvbCBpcyBub3QgYSBjb25zdHJ1Y3RvciEnKTtcbiAgICB2YXIgdGFnID0gdWlkKGFyZ3VtZW50cy5sZW5ndGggPiAwID8gYXJndW1lbnRzWzBdIDogdW5kZWZpbmVkKTtcbiAgICB2YXIgJHNldCA9IGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgaWYgKHRoaXMgPT09IE9iamVjdFByb3RvKSAkc2V0LmNhbGwoT1BTeW1ib2xzLCB2YWx1ZSk7XG4gICAgICBpZiAoaGFzKHRoaXMsIEhJRERFTikgJiYgaGFzKHRoaXNbSElEREVOXSwgdGFnKSkgdGhpc1tISURERU5dW3RhZ10gPSBmYWxzZTtcbiAgICAgIHNldFN5bWJvbERlc2ModGhpcywgdGFnLCBjcmVhdGVEZXNjKDEsIHZhbHVlKSk7XG4gICAgfTtcbiAgICBpZiAoREVTQ1JJUFRPUlMgJiYgc2V0dGVyKSBzZXRTeW1ib2xEZXNjKE9iamVjdFByb3RvLCB0YWcsIHsgY29uZmlndXJhYmxlOiB0cnVlLCBzZXQ6ICRzZXQgfSk7XG4gICAgcmV0dXJuIHdyYXAodGFnKTtcbiAgfTtcbiAgcmVkZWZpbmUoJFN5bWJvbFtQUk9UT1RZUEVdLCAndG9TdHJpbmcnLCBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5faztcbiAgfSk7XG5cbiAgJEdPUEQuZiA9ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICREUC5mID0gJGRlZmluZVByb3BlcnR5O1xuICByZXF1aXJlKCcuL19vYmplY3QtZ29wbicpLmYgPSBnT1BORXh0LmYgPSAkZ2V0T3duUHJvcGVydHlOYW1lcztcbiAgcmVxdWlyZSgnLi9fb2JqZWN0LXBpZScpLmYgPSAkcHJvcGVydHlJc0VudW1lcmFibGU7XG4gICRHT1BTLmYgPSAkZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xuXG4gIGlmIChERVNDUklQVE9SUyAmJiAhcmVxdWlyZSgnLi9fbGlicmFyeScpKSB7XG4gICAgcmVkZWZpbmUoT2JqZWN0UHJvdG8sICdwcm9wZXJ0eUlzRW51bWVyYWJsZScsICRwcm9wZXJ0eUlzRW51bWVyYWJsZSwgdHJ1ZSk7XG4gIH1cblxuICB3a3NFeHQuZiA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gICAgcmV0dXJuIHdyYXAod2tzKG5hbWUpKTtcbiAgfTtcbn1cblxuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LlcgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgeyBTeW1ib2w6ICRTeW1ib2wgfSk7XG5cbmZvciAodmFyIGVzNlN5bWJvbHMgPSAoXG4gIC8vIDE5LjQuMi4yLCAxOS40LjIuMywgMTkuNC4yLjQsIDE5LjQuMi42LCAxOS40LjIuOCwgMTkuNC4yLjksIDE5LjQuMi4xMCwgMTkuNC4yLjExLCAxOS40LjIuMTIsIDE5LjQuMi4xMywgMTkuNC4yLjE0XG4gICdoYXNJbnN0YW5jZSxpc0NvbmNhdFNwcmVhZGFibGUsaXRlcmF0b3IsbWF0Y2gscmVwbGFjZSxzZWFyY2gsc3BlY2llcyxzcGxpdCx0b1ByaW1pdGl2ZSx0b1N0cmluZ1RhZyx1bnNjb3BhYmxlcydcbikuc3BsaXQoJywnKSwgaiA9IDA7IGVzNlN5bWJvbHMubGVuZ3RoID4gajspd2tzKGVzNlN5bWJvbHNbaisrXSk7XG5cbmZvciAodmFyIHdlbGxLbm93blN5bWJvbHMgPSAka2V5cyh3a3Muc3RvcmUpLCBrID0gMDsgd2VsbEtub3duU3ltYm9scy5sZW5ndGggPiBrOykgd2tzRGVmaW5lKHdlbGxLbm93blN5bWJvbHNbaysrXSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIVVTRV9OQVRJVkUsICdTeW1ib2wnLCB7XG4gIC8vIDE5LjQuMi4xIFN5bWJvbC5mb3Ioa2V5KVxuICAnZm9yJzogZnVuY3Rpb24gKGtleSkge1xuICAgIHJldHVybiBoYXMoU3ltYm9sUmVnaXN0cnksIGtleSArPSAnJylcbiAgICAgID8gU3ltYm9sUmVnaXN0cnlba2V5XVxuICAgICAgOiBTeW1ib2xSZWdpc3RyeVtrZXldID0gJFN5bWJvbChrZXkpO1xuICB9LFxuICAvLyAxOS40LjIuNSBTeW1ib2wua2V5Rm9yKHN5bSlcbiAga2V5Rm9yOiBmdW5jdGlvbiBrZXlGb3Ioc3ltKSB7XG4gICAgaWYgKCFpc1N5bWJvbChzeW0pKSB0aHJvdyBUeXBlRXJyb3Ioc3ltICsgJyBpcyBub3QgYSBzeW1ib2whJyk7XG4gICAgZm9yICh2YXIga2V5IGluIFN5bWJvbFJlZ2lzdHJ5KSBpZiAoU3ltYm9sUmVnaXN0cnlba2V5XSA9PT0gc3ltKSByZXR1cm4ga2V5O1xuICB9LFxuICB1c2VTZXR0ZXI6IGZ1bmN0aW9uICgpIHsgc2V0dGVyID0gdHJ1ZTsgfSxcbiAgdXNlU2ltcGxlOiBmdW5jdGlvbiAoKSB7IHNldHRlciA9IGZhbHNlOyB9XG59KTtcblxuJGV4cG9ydCgkZXhwb3J0LlMgKyAkZXhwb3J0LkYgKiAhVVNFX05BVElWRSwgJ09iamVjdCcsIHtcbiAgLy8gMTkuMS4yLjIgT2JqZWN0LmNyZWF0ZShPIFssIFByb3BlcnRpZXNdKVxuICBjcmVhdGU6ICRjcmVhdGUsXG4gIC8vIDE5LjEuMi40IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKVxuICBkZWZpbmVQcm9wZXJ0eTogJGRlZmluZVByb3BlcnR5LFxuICAvLyAxOS4xLjIuMyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKVxuICBkZWZpbmVQcm9wZXJ0aWVzOiAkZGVmaW5lUHJvcGVydGllcyxcbiAgLy8gMTkuMS4yLjYgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihPLCBQKVxuICBnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I6ICRnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IsXG4gIC8vIDE5LjEuMi43IE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKE8pXG4gIGdldE93blByb3BlcnR5TmFtZXM6ICRnZXRPd25Qcm9wZXJ0eU5hbWVzLFxuICAvLyAxOS4xLjIuOCBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKE8pXG4gIGdldE93blByb3BlcnR5U3ltYm9sczogJGdldE93blByb3BlcnR5U3ltYm9sc1xufSk7XG5cbi8vIENocm9tZSAzOCBhbmQgMzkgYE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHNgIGZhaWxzIG9uIHByaW1pdGl2ZXNcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTM0NDNcbnZhciBGQUlMU19PTl9QUklNSVRJVkVTID0gJGZhaWxzKGZ1bmN0aW9uICgpIHsgJEdPUFMuZigxKTsgfSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogRkFJTFNfT05fUFJJTUlUSVZFUywgJ09iamVjdCcsIHtcbiAgZ2V0T3duUHJvcGVydHlTeW1ib2xzOiBmdW5jdGlvbiBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMoaXQpIHtcbiAgICByZXR1cm4gJEdPUFMuZih0b09iamVjdChpdCkpO1xuICB9XG59KTtcblxuLy8gMjQuMy4yIEpTT04uc3RyaW5naWZ5KHZhbHVlIFssIHJlcGxhY2VyIFssIHNwYWNlXV0pXG4kSlNPTiAmJiAkZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICghVVNFX05BVElWRSB8fCAkZmFpbHMoZnVuY3Rpb24gKCkge1xuICB2YXIgUyA9ICRTeW1ib2woKTtcbiAgLy8gTVMgRWRnZSBjb252ZXJ0cyBzeW1ib2wgdmFsdWVzIHRvIEpTT04gYXMge31cbiAgLy8gV2ViS2l0IGNvbnZlcnRzIHN5bWJvbCB2YWx1ZXMgdG8gSlNPTiBhcyBudWxsXG4gIC8vIFY4IHRocm93cyBvbiBib3hlZCBzeW1ib2xzXG4gIHJldHVybiBfc3RyaW5naWZ5KFtTXSkgIT0gJ1tudWxsXScgfHwgX3N0cmluZ2lmeSh7IGE6IFMgfSkgIT0gJ3t9JyB8fCBfc3RyaW5naWZ5KE9iamVjdChTKSkgIT0gJ3t9Jztcbn0pKSwgJ0pTT04nLCB7XG4gIHN0cmluZ2lmeTogZnVuY3Rpb24gc3RyaW5naWZ5KGl0KSB7XG4gICAgdmFyIGFyZ3MgPSBbaXRdO1xuICAgIHZhciBpID0gMTtcbiAgICB2YXIgcmVwbGFjZXIsICRyZXBsYWNlcjtcbiAgICB3aGlsZSAoYXJndW1lbnRzLmxlbmd0aCA+IGkpIGFyZ3MucHVzaChhcmd1bWVudHNbaSsrXSk7XG4gICAgJHJlcGxhY2VyID0gcmVwbGFjZXIgPSBhcmdzWzFdO1xuICAgIGlmICghaXNPYmplY3QocmVwbGFjZXIpICYmIGl0ID09PSB1bmRlZmluZWQgfHwgaXNTeW1ib2woaXQpKSByZXR1cm47IC8vIElFOCByZXR1cm5zIHN0cmluZyBvbiB1bmRlZmluZWRcbiAgICBpZiAoIWlzQXJyYXkocmVwbGFjZXIpKSByZXBsYWNlciA9IGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XG4gICAgICBpZiAodHlwZW9mICRyZXBsYWNlciA9PSAnZnVuY3Rpb24nKSB2YWx1ZSA9ICRyZXBsYWNlci5jYWxsKHRoaXMsIGtleSwgdmFsdWUpO1xuICAgICAgaWYgKCFpc1N5bWJvbCh2YWx1ZSkpIHJldHVybiB2YWx1ZTtcbiAgICB9O1xuICAgIGFyZ3NbMV0gPSByZXBsYWNlcjtcbiAgICByZXR1cm4gX3N0cmluZ2lmeS5hcHBseSgkSlNPTiwgYXJncyk7XG4gIH1cbn0pO1xuXG4vLyAxOS40LjMuNCBTeW1ib2wucHJvdG90eXBlW0BAdG9QcmltaXRpdmVdKGhpbnQpXG4kU3ltYm9sW1BST1RPVFlQRV1bVE9fUFJJTUlUSVZFXSB8fCByZXF1aXJlKCcuL19oaWRlJykoJFN5bWJvbFtQUk9UT1RZUEVdLCBUT19QUklNSVRJVkUsICRTeW1ib2xbUFJPVE9UWVBFXS52YWx1ZU9mKTtcbi8vIDE5LjQuMy41IFN5bWJvbC5wcm90b3R5cGVbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKCRTeW1ib2wsICdTeW1ib2wnKTtcbi8vIDIwLjIuMS45IE1hdGhbQEB0b1N0cmluZ1RhZ11cbnNldFRvU3RyaW5nVGFnKE1hdGgsICdNYXRoJywgdHJ1ZSk7XG4vLyAyNC4zLjMgSlNPTltAQHRvU3RyaW5nVGFnXVxuc2V0VG9TdHJpbmdUYWcoZ2xvYmFsLkpTT04sICdKU09OJywgdHJ1ZSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICR0eXBlZCA9IHJlcXVpcmUoJy4vX3R5cGVkJyk7XG52YXIgYnVmZmVyID0gcmVxdWlyZSgnLi9fdHlwZWQtYnVmZmVyJyk7XG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xudmFyIHRvTGVuZ3RoID0gcmVxdWlyZSgnLi9fdG8tbGVuZ3RoJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciBBcnJheUJ1ZmZlciA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLkFycmF5QnVmZmVyO1xudmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4vX3NwZWNpZXMtY29uc3RydWN0b3InKTtcbnZhciAkQXJyYXlCdWZmZXIgPSBidWZmZXIuQXJyYXlCdWZmZXI7XG52YXIgJERhdGFWaWV3ID0gYnVmZmVyLkRhdGFWaWV3O1xudmFyICRpc1ZpZXcgPSAkdHlwZWQuQUJWICYmIEFycmF5QnVmZmVyLmlzVmlldztcbnZhciAkc2xpY2UgPSAkQXJyYXlCdWZmZXIucHJvdG90eXBlLnNsaWNlO1xudmFyIFZJRVcgPSAkdHlwZWQuVklFVztcbnZhciBBUlJBWV9CVUZGRVIgPSAnQXJyYXlCdWZmZXInO1xuXG4kZXhwb3J0KCRleHBvcnQuRyArICRleHBvcnQuVyArICRleHBvcnQuRiAqIChBcnJheUJ1ZmZlciAhPT0gJEFycmF5QnVmZmVyKSwgeyBBcnJheUJ1ZmZlcjogJEFycmF5QnVmZmVyIH0pO1xuXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICEkdHlwZWQuQ09OU1RSLCBBUlJBWV9CVUZGRVIsIHtcbiAgLy8gMjQuMS4zLjEgQXJyYXlCdWZmZXIuaXNWaWV3KGFyZylcbiAgaXNWaWV3OiBmdW5jdGlvbiBpc1ZpZXcoaXQpIHtcbiAgICByZXR1cm4gJGlzVmlldyAmJiAkaXNWaWV3KGl0KSB8fCBpc09iamVjdChpdCkgJiYgVklFVyBpbiBpdDtcbiAgfVxufSk7XG5cbiRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5VICsgJGV4cG9ydC5GICogcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiAhbmV3ICRBcnJheUJ1ZmZlcigyKS5zbGljZSgxLCB1bmRlZmluZWQpLmJ5dGVMZW5ndGg7XG59KSwgQVJSQVlfQlVGRkVSLCB7XG4gIC8vIDI0LjEuNC4zIEFycmF5QnVmZmVyLnByb3RvdHlwZS5zbGljZShzdGFydCwgZW5kKVxuICBzbGljZTogZnVuY3Rpb24gc2xpY2Uoc3RhcnQsIGVuZCkge1xuICAgIGlmICgkc2xpY2UgIT09IHVuZGVmaW5lZCAmJiBlbmQgPT09IHVuZGVmaW5lZCkgcmV0dXJuICRzbGljZS5jYWxsKGFuT2JqZWN0KHRoaXMpLCBzdGFydCk7IC8vIEZGIGZpeFxuICAgIHZhciBsZW4gPSBhbk9iamVjdCh0aGlzKS5ieXRlTGVuZ3RoO1xuICAgIHZhciBmaXJzdCA9IHRvQWJzb2x1dGVJbmRleChzdGFydCwgbGVuKTtcbiAgICB2YXIgZmluID0gdG9BYnNvbHV0ZUluZGV4KGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuIDogZW5kLCBsZW4pO1xuICAgIHZhciByZXN1bHQgPSBuZXcgKHNwZWNpZXNDb25zdHJ1Y3Rvcih0aGlzLCAkQXJyYXlCdWZmZXIpKSh0b0xlbmd0aChmaW4gLSBmaXJzdCkpO1xuICAgIHZhciB2aWV3UyA9IG5ldyAkRGF0YVZpZXcodGhpcyk7XG4gICAgdmFyIHZpZXdUID0gbmV3ICREYXRhVmlldyhyZXN1bHQpO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgd2hpbGUgKGZpcnN0IDwgZmluKSB7XG4gICAgICB2aWV3VC5zZXRVaW50OChpbmRleCsrLCB2aWV3Uy5nZXRVaW50OChmaXJzdCsrKSk7XG4gICAgfSByZXR1cm4gcmVzdWx0O1xuICB9XG59KTtcblxucmVxdWlyZSgnLi9fc2V0LXNwZWNpZXMnKShBUlJBWV9CVUZGRVIpO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5XICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX3R5cGVkJykuQUJWLCB7XG4gIERhdGFWaWV3OiByZXF1aXJlKCcuL190eXBlZC1idWZmZXInKS5EYXRhVmlld1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdGbG9hdDY0JywgOCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEZsb2F0NjRBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdJbnQxNicsIDIsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ0ludDMyJywgNCwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIEludDMyQXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnSW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBJbnQ4QXJyYXkoZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKSB7XG4gICAgcmV0dXJuIGluaXQodGhpcywgZGF0YSwgYnl0ZU9mZnNldCwgbGVuZ3RoKTtcbiAgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9fdHlwZWQtYXJyYXknKSgnVWludDE2JywgMiwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQxNkFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQzMicsIDQsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50MzJBcnJheShkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpIHtcbiAgICByZXR1cm4gaW5pdCh0aGlzLCBkYXRhLCBieXRlT2Zmc2V0LCBsZW5ndGgpO1xuICB9O1xufSk7XG4iLCJyZXF1aXJlKCcuL190eXBlZC1hcnJheScpKCdVaW50OCcsIDEsIGZ1bmN0aW9uIChpbml0KSB7XG4gIHJldHVybiBmdW5jdGlvbiBVaW50OEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59KTtcbiIsInJlcXVpcmUoJy4vX3R5cGVkLWFycmF5JykoJ1VpbnQ4JywgMSwgZnVuY3Rpb24gKGluaXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFVpbnQ4Q2xhbXBlZEFycmF5KGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCkge1xuICAgIHJldHVybiBpbml0KHRoaXMsIGRhdGEsIGJ5dGVPZmZzZXQsIGxlbmd0aCk7XG4gIH07XG59LCB0cnVlKTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBlYWNoID0gcmVxdWlyZSgnLi9fYXJyYXktbWV0aG9kcycpKDApO1xudmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi9fcmVkZWZpbmUnKTtcbnZhciBtZXRhID0gcmVxdWlyZSgnLi9fbWV0YScpO1xudmFyIGFzc2lnbiA9IHJlcXVpcmUoJy4vX29iamVjdC1hc3NpZ24nKTtcbnZhciB3ZWFrID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi13ZWFrJyk7XG52YXIgaXNPYmplY3QgPSByZXF1aXJlKCcuL19pcy1vYmplY3QnKTtcbnZhciB2YWxpZGF0ZSA9IHJlcXVpcmUoJy4vX3ZhbGlkYXRlLWNvbGxlY3Rpb24nKTtcbnZhciBOQVRJVkVfV0VBS19NQVAgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgSVNfSUUxMSA9ICFnbG9iYWwuQWN0aXZlWE9iamVjdCAmJiAnQWN0aXZlWE9iamVjdCcgaW4gZ2xvYmFsO1xudmFyIFdFQUtfTUFQID0gJ1dlYWtNYXAnO1xudmFyIGdldFdlYWsgPSBtZXRhLmdldFdlYWs7XG52YXIgaXNFeHRlbnNpYmxlID0gT2JqZWN0LmlzRXh0ZW5zaWJsZTtcbnZhciB1bmNhdWdodEZyb3plblN0b3JlID0gd2Vhay51ZnN0b3JlO1xudmFyIEludGVybmFsTWFwO1xuXG52YXIgd3JhcHBlciA9IGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtNYXAoKSB7XG4gICAgcmV0dXJuIGdldCh0aGlzLCBhcmd1bWVudHMubGVuZ3RoID4gMCA/IGFyZ3VtZW50c1swXSA6IHVuZGVmaW5lZCk7XG4gIH07XG59O1xuXG52YXIgbWV0aG9kcyA9IHtcbiAgLy8gMjMuMy4zLjMgV2Vha01hcC5wcm90b3R5cGUuZ2V0KGtleSlcbiAgZ2V0OiBmdW5jdGlvbiBnZXQoa2V5KSB7XG4gICAgaWYgKGlzT2JqZWN0KGtleSkpIHtcbiAgICAgIHZhciBkYXRhID0gZ2V0V2VhayhrZXkpO1xuICAgICAgaWYgKGRhdGEgPT09IHRydWUpIHJldHVybiB1bmNhdWdodEZyb3plblN0b3JlKHZhbGlkYXRlKHRoaXMsIFdFQUtfTUFQKSkuZ2V0KGtleSk7XG4gICAgICByZXR1cm4gZGF0YSA/IGRhdGFbdGhpcy5faV0gOiB1bmRlZmluZWQ7XG4gICAgfVxuICB9LFxuICAvLyAyMy4zLjMuNSBXZWFrTWFwLnByb3RvdHlwZS5zZXQoa2V5LCB2YWx1ZSlcbiAgc2V0OiBmdW5jdGlvbiBzZXQoa2V5LCB2YWx1ZSkge1xuICAgIHJldHVybiB3ZWFrLmRlZih2YWxpZGF0ZSh0aGlzLCBXRUFLX01BUCksIGtleSwgdmFsdWUpO1xuICB9XG59O1xuXG4vLyAyMy4zIFdlYWtNYXAgT2JqZWN0c1xudmFyICRXZWFrTWFwID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoV0VBS19NQVAsIHdyYXBwZXIsIG1ldGhvZHMsIHdlYWssIHRydWUsIHRydWUpO1xuXG4vLyBJRTExIFdlYWtNYXAgZnJvemVuIGtleXMgZml4XG5pZiAoTkFUSVZFX1dFQUtfTUFQICYmIElTX0lFMTEpIHtcbiAgSW50ZXJuYWxNYXAgPSB3ZWFrLmdldENvbnN0cnVjdG9yKHdyYXBwZXIsIFdFQUtfTUFQKTtcbiAgYXNzaWduKEludGVybmFsTWFwLnByb3RvdHlwZSwgbWV0aG9kcyk7XG4gIG1ldGEuTkVFRCA9IHRydWU7XG4gIGVhY2goWydkZWxldGUnLCAnaGFzJywgJ2dldCcsICdzZXQnXSwgZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciBwcm90byA9ICRXZWFrTWFwLnByb3RvdHlwZTtcbiAgICB2YXIgbWV0aG9kID0gcHJvdG9ba2V5XTtcbiAgICByZWRlZmluZShwcm90bywga2V5LCBmdW5jdGlvbiAoYSwgYikge1xuICAgICAgLy8gc3RvcmUgZnJvemVuIG9iamVjdHMgb24gaW50ZXJuYWwgd2Vha21hcCBzaGltXG4gICAgICBpZiAoaXNPYmplY3QoYSkgJiYgIWlzRXh0ZW5zaWJsZShhKSkge1xuICAgICAgICBpZiAoIXRoaXMuX2YpIHRoaXMuX2YgPSBuZXcgSW50ZXJuYWxNYXAoKTtcbiAgICAgICAgdmFyIHJlc3VsdCA9IHRoaXMuX2Zba2V5XShhLCBiKTtcbiAgICAgICAgcmV0dXJuIGtleSA9PSAnc2V0JyA/IHRoaXMgOiByZXN1bHQ7XG4gICAgICAvLyBzdG9yZSBhbGwgdGhlIHJlc3Qgb24gbmF0aXZlIHdlYWttYXBcbiAgICAgIH0gcmV0dXJuIG1ldGhvZC5jYWxsKHRoaXMsIGEsIGIpO1xuICAgIH0pO1xuICB9KTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcbnZhciB3ZWFrID0gcmVxdWlyZSgnLi9fY29sbGVjdGlvbi13ZWFrJyk7XG52YXIgdmFsaWRhdGUgPSByZXF1aXJlKCcuL192YWxpZGF0ZS1jb2xsZWN0aW9uJyk7XG52YXIgV0VBS19TRVQgPSAnV2Vha1NldCc7XG5cbi8vIDIzLjQgV2Vha1NldCBPYmplY3RzXG5yZXF1aXJlKCcuL19jb2xsZWN0aW9uJykoV0VBS19TRVQsIGZ1bmN0aW9uIChnZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIFdlYWtTZXQoKSB7IHJldHVybiBnZXQodGhpcywgYXJndW1lbnRzLmxlbmd0aCA+IDAgPyBhcmd1bWVudHNbMF0gOiB1bmRlZmluZWQpOyB9O1xufSwge1xuICAvLyAyMy40LjMuMSBXZWFrU2V0LnByb3RvdHlwZS5hZGQodmFsdWUpXG4gIGFkZDogZnVuY3Rpb24gYWRkKHZhbHVlKSB7XG4gICAgcmV0dXJuIHdlYWsuZGVmKHZhbGlkYXRlKHRoaXMsIFdFQUtfU0VUKSwgdmFsdWUsIHRydWUpO1xuICB9XG59LCB3ZWFrLCBmYWxzZSwgdHJ1ZSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL3RjMzkuZ2l0aHViLmlvL3Byb3Bvc2FsLWZsYXRNYXAvI3NlYy1BcnJheS5wcm90b3R5cGUuZmxhdE1hcFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBmbGF0dGVuSW50b0FycmF5ID0gcmVxdWlyZSgnLi9fZmxhdHRlbi1pbnRvLWFycmF5Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciB0b0xlbmd0aCA9IHJlcXVpcmUoJy4vX3RvLWxlbmd0aCcpO1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbnZhciBhcnJheVNwZWNpZXNDcmVhdGUgPSByZXF1aXJlKCcuL19hcnJheS1zcGVjaWVzLWNyZWF0ZScpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCwgJ0FycmF5Jywge1xuICBmbGF0TWFwOiBmdW5jdGlvbiBmbGF0TWFwKGNhbGxiYWNrZm4gLyogLCB0aGlzQXJnICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdCh0aGlzKTtcbiAgICB2YXIgc291cmNlTGVuLCBBO1xuICAgIGFGdW5jdGlvbihjYWxsYmFja2ZuKTtcbiAgICBzb3VyY2VMZW4gPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgQSA9IGFycmF5U3BlY2llc0NyZWF0ZShPLCAwKTtcbiAgICBmbGF0dGVuSW50b0FycmF5KEEsIE8sIE8sIHNvdXJjZUxlbiwgMCwgMSwgY2FsbGJhY2tmbiwgYXJndW1lbnRzWzFdKTtcbiAgICByZXR1cm4gQTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdmbGF0TWFwJyk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9BcnJheS5wcm90b3R5cGUuaW5jbHVkZXNcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgJGluY2x1ZGVzID0gcmVxdWlyZSgnLi9fYXJyYXktaW5jbHVkZXMnKSh0cnVlKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAsICdBcnJheScsIHtcbiAgaW5jbHVkZXM6IGZ1bmN0aW9uIGluY2x1ZGVzKGVsIC8qICwgZnJvbUluZGV4ID0gMCAqLykge1xuICAgIHJldHVybiAkaW5jbHVkZXModGhpcywgZWwsIGFyZ3VtZW50cy5sZW5ndGggPiAxID8gYXJndW1lbnRzWzFdIDogdW5kZWZpbmVkKTtcbiAgfVxufSk7XG5cbnJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpKCdpbmNsdWRlcycpO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRlbnRyaWVzID0gcmVxdWlyZSgnLi9fb2JqZWN0LXRvLWFycmF5JykodHJ1ZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICBlbnRyaWVzOiBmdW5jdGlvbiBlbnRyaWVzKGl0KSB7XG4gICAgcmV0dXJuICRlbnRyaWVzKGl0KTtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYmplY3QtZ2V0b3ducHJvcGVydHlkZXNjcmlwdG9yc1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciBvd25LZXlzID0gcmVxdWlyZSgnLi9fb3duLWtleXMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgZ09QRCA9IHJlcXVpcmUoJy4vX29iamVjdC1nb3BkJyk7XG52YXIgY3JlYXRlUHJvcGVydHkgPSByZXF1aXJlKCcuL19jcmVhdGUtcHJvcGVydHknKTtcblxuJGV4cG9ydCgkZXhwb3J0LlMsICdPYmplY3QnLCB7XG4gIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnM6IGZ1bmN0aW9uIGdldE93blByb3BlcnR5RGVzY3JpcHRvcnMob2JqZWN0KSB7XG4gICAgdmFyIE8gPSB0b0lPYmplY3Qob2JqZWN0KTtcbiAgICB2YXIgZ2V0RGVzYyA9IGdPUEQuZjtcbiAgICB2YXIga2V5cyA9IG93bktleXMoTyk7XG4gICAgdmFyIHJlc3VsdCA9IHt9O1xuICAgIHZhciBpID0gMDtcbiAgICB2YXIga2V5LCBkZXNjO1xuICAgIHdoaWxlIChrZXlzLmxlbmd0aCA+IGkpIHtcbiAgICAgIGRlc2MgPSBnZXREZXNjKE8sIGtleSA9IGtleXNbaSsrXSk7XG4gICAgICBpZiAoZGVzYyAhPT0gdW5kZWZpbmVkKSBjcmVhdGVQcm9wZXJ0eShyZXN1bHQsIGtleSwgZGVzYyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cbn0pO1xuIiwiLy8gaHR0cHM6Ly9naXRodWIuY29tL3RjMzkvcHJvcG9zYWwtb2JqZWN0LXZhbHVlcy1lbnRyaWVzXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICR2YWx1ZXMgPSByZXF1aXJlKCcuL19vYmplY3QtdG8tYXJyYXknKShmYWxzZSk7XG5cbiRleHBvcnQoJGV4cG9ydC5TLCAnT2JqZWN0Jywge1xuICB2YWx1ZXM6IGZ1bmN0aW9uIHZhbHVlcyhpdCkge1xuICAgIHJldHVybiAkdmFsdWVzKGl0KTtcbiAgfVxufSk7XG4iLCIvLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1wcm9taXNlLWZpbmFsbHlcbid1c2Ugc3RyaWN0JztcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBzcGVjaWVzQ29uc3RydWN0b3IgPSByZXF1aXJlKCcuL19zcGVjaWVzLWNvbnN0cnVjdG9yJyk7XG52YXIgcHJvbWlzZVJlc29sdmUgPSByZXF1aXJlKCcuL19wcm9taXNlLXJlc29sdmUnKTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LlIsICdQcm9taXNlJywgeyAnZmluYWxseSc6IGZ1bmN0aW9uIChvbkZpbmFsbHkpIHtcbiAgdmFyIEMgPSBzcGVjaWVzQ29uc3RydWN0b3IodGhpcywgY29yZS5Qcm9taXNlIHx8IGdsb2JhbC5Qcm9taXNlKTtcbiAgdmFyIGlzRnVuY3Rpb24gPSB0eXBlb2Ygb25GaW5hbGx5ID09ICdmdW5jdGlvbic7XG4gIHJldHVybiB0aGlzLnRoZW4oXG4gICAgaXNGdW5jdGlvbiA/IGZ1bmN0aW9uICh4KSB7XG4gICAgICByZXR1cm4gcHJvbWlzZVJlc29sdmUoQywgb25GaW5hbGx5KCkpLnRoZW4oZnVuY3Rpb24gKCkgeyByZXR1cm4geDsgfSk7XG4gICAgfSA6IG9uRmluYWxseSxcbiAgICBpc0Z1bmN0aW9uID8gZnVuY3Rpb24gKGUpIHtcbiAgICAgIHJldHVybiBwcm9taXNlUmVzb2x2ZShDLCBvbkZpbmFsbHkoKSkudGhlbihmdW5jdGlvbiAoKSB7IHRocm93IGU7IH0pO1xuICAgIH0gOiBvbkZpbmFsbHlcbiAgKTtcbn0gfSk7XG4iLCIndXNlIHN0cmljdCc7XG4vLyBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1zdHJpbmctcGFkLXN0YXJ0LWVuZFxudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkcGFkID0gcmVxdWlyZSgnLi9fc3RyaW5nLXBhZCcpO1xudmFyIHVzZXJBZ2VudCA9IHJlcXVpcmUoJy4vX3VzZXItYWdlbnQnKTtcblxuLy8gaHR0cHM6Ly9naXRodWIuY29tL3psb2lyb2NrL2NvcmUtanMvaXNzdWVzLzI4MFxudmFyIFdFQktJVF9CVUcgPSAvVmVyc2lvblxcLzEwXFwuXFxkKyhcXC5cXGQrKT8oIE1vYmlsZVxcL1xcdyspPyBTYWZhcmlcXC8vLnRlc3QodXNlckFnZW50KTtcblxuJGV4cG9ydCgkZXhwb3J0LlAgKyAkZXhwb3J0LkYgKiBXRUJLSVRfQlVHLCAnU3RyaW5nJywge1xuICBwYWRFbmQ6IGZ1bmN0aW9uIHBhZEVuZChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgZmFsc2UpO1xuICB9XG59KTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS90YzM5L3Byb3Bvc2FsLXN0cmluZy1wYWQtc3RhcnQtZW5kXG52YXIgJGV4cG9ydCA9IHJlcXVpcmUoJy4vX2V4cG9ydCcpO1xudmFyICRwYWQgPSByZXF1aXJlKCcuL19zdHJpbmctcGFkJyk7XG52YXIgdXNlckFnZW50ID0gcmVxdWlyZSgnLi9fdXNlci1hZ2VudCcpO1xuXG4vLyBodHRwczovL2dpdGh1Yi5jb20vemxvaXJvY2svY29yZS1qcy9pc3N1ZXMvMjgwXG52YXIgV0VCS0lUX0JVRyA9IC9WZXJzaW9uXFwvMTBcXC5cXGQrKFxcLlxcZCspPyggTW9iaWxlXFwvXFx3Kyk/IFNhZmFyaVxcLy8udGVzdCh1c2VyQWdlbnQpO1xuXG4kZXhwb3J0KCRleHBvcnQuUCArICRleHBvcnQuRiAqIFdFQktJVF9CVUcsICdTdHJpbmcnLCB7XG4gIHBhZFN0YXJ0OiBmdW5jdGlvbiBwYWRTdGFydChtYXhMZW5ndGggLyogLCBmaWxsU3RyaW5nID0gJyAnICovKSB7XG4gICAgcmV0dXJuICRwYWQodGhpcywgbWF4TGVuZ3RoLCBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZCwgdHJ1ZSk7XG4gIH1cbn0pO1xuIiwiJ3VzZSBzdHJpY3QnO1xuLy8gaHR0cHM6Ly9naXRodWIuY29tL3NlYm1hcmtiYWdlL2VjbWFzY3JpcHQtc3RyaW5nLWxlZnQtcmlnaHQtdHJpbVxucmVxdWlyZSgnLi9fc3RyaW5nLXRyaW0nKSgndHJpbUxlZnQnLCBmdW5jdGlvbiAoJHRyaW0pIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIHRyaW1MZWZ0KCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAxKTtcbiAgfTtcbn0sICd0cmltU3RhcnQnKTtcbiIsIid1c2Ugc3RyaWN0Jztcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9zZWJtYXJrYmFnZS9lY21hc2NyaXB0LXN0cmluZy1sZWZ0LXJpZ2h0LXRyaW1cbnJlcXVpcmUoJy4vX3N0cmluZy10cmltJykoJ3RyaW1SaWdodCcsIGZ1bmN0aW9uICgkdHJpbSkge1xuICByZXR1cm4gZnVuY3Rpb24gdHJpbVJpZ2h0KCkge1xuICAgIHJldHVybiAkdHJpbSh0aGlzLCAyKTtcbiAgfTtcbn0sICd0cmltRW5kJyk7XG4iLCJyZXF1aXJlKCcuL193a3MtZGVmaW5lJykoJ2FzeW5jSXRlcmF0b3InKTtcbiIsInZhciAkaXRlcmF0b3JzID0gcmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBnZXRLZXlzID0gcmVxdWlyZSgnLi9fb2JqZWN0LWtleXMnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB3a3MgPSByZXF1aXJlKCcuL193a3MnKTtcbnZhciBJVEVSQVRPUiA9IHdrcygnaXRlcmF0b3InKTtcbnZhciBUT19TVFJJTkdfVEFHID0gd2tzKCd0b1N0cmluZ1RhZycpO1xudmFyIEFycmF5VmFsdWVzID0gSXRlcmF0b3JzLkFycmF5O1xuXG52YXIgRE9NSXRlcmFibGVzID0ge1xuICBDU1NSdWxlTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIENTU1N0eWxlRGVjbGFyYXRpb246IGZhbHNlLFxuICBDU1NWYWx1ZUxpc3Q6IGZhbHNlLFxuICBDbGllbnRSZWN0TGlzdDogZmFsc2UsXG4gIERPTVJlY3RMaXN0OiBmYWxzZSxcbiAgRE9NU3RyaW5nTGlzdDogZmFsc2UsXG4gIERPTVRva2VuTGlzdDogdHJ1ZSxcbiAgRGF0YVRyYW5zZmVySXRlbUxpc3Q6IGZhbHNlLFxuICBGaWxlTGlzdDogZmFsc2UsXG4gIEhUTUxBbGxDb2xsZWN0aW9uOiBmYWxzZSxcbiAgSFRNTENvbGxlY3Rpb246IGZhbHNlLFxuICBIVE1MRm9ybUVsZW1lbnQ6IGZhbHNlLFxuICBIVE1MU2VsZWN0RWxlbWVudDogZmFsc2UsXG4gIE1lZGlhTGlzdDogdHJ1ZSwgLy8gVE9ETzogTm90IHNwZWMgY29tcGxpYW50LCBzaG91bGQgYmUgZmFsc2UuXG4gIE1pbWVUeXBlQXJyYXk6IGZhbHNlLFxuICBOYW1lZE5vZGVNYXA6IGZhbHNlLFxuICBOb2RlTGlzdDogdHJ1ZSxcbiAgUGFpbnRSZXF1ZXN0TGlzdDogZmFsc2UsXG4gIFBsdWdpbjogZmFsc2UsXG4gIFBsdWdpbkFycmF5OiBmYWxzZSxcbiAgU1ZHTGVuZ3RoTGlzdDogZmFsc2UsXG4gIFNWR051bWJlckxpc3Q6IGZhbHNlLFxuICBTVkdQYXRoU2VnTGlzdDogZmFsc2UsXG4gIFNWR1BvaW50TGlzdDogZmFsc2UsXG4gIFNWR1N0cmluZ0xpc3Q6IGZhbHNlLFxuICBTVkdUcmFuc2Zvcm1MaXN0OiBmYWxzZSxcbiAgU291cmNlQnVmZmVyTGlzdDogZmFsc2UsXG4gIFN0eWxlU2hlZXRMaXN0OiB0cnVlLCAvLyBUT0RPOiBOb3Qgc3BlYyBjb21wbGlhbnQsIHNob3VsZCBiZSBmYWxzZS5cbiAgVGV4dFRyYWNrQ3VlTGlzdDogZmFsc2UsXG4gIFRleHRUcmFja0xpc3Q6IGZhbHNlLFxuICBUb3VjaExpc3Q6IGZhbHNlXG59O1xuXG5mb3IgKHZhciBjb2xsZWN0aW9ucyA9IGdldEtleXMoRE9NSXRlcmFibGVzKSwgaSA9IDA7IGkgPCBjb2xsZWN0aW9ucy5sZW5ndGg7IGkrKykge1xuICB2YXIgTkFNRSA9IGNvbGxlY3Rpb25zW2ldO1xuICB2YXIgZXhwbGljaXQgPSBET01JdGVyYWJsZXNbTkFNRV07XG4gIHZhciBDb2xsZWN0aW9uID0gZ2xvYmFsW05BTUVdO1xuICB2YXIgcHJvdG8gPSBDb2xsZWN0aW9uICYmIENvbGxlY3Rpb24ucHJvdG90eXBlO1xuICB2YXIga2V5O1xuICBpZiAocHJvdG8pIHtcbiAgICBpZiAoIXByb3RvW0lURVJBVE9SXSkgaGlkZShwcm90bywgSVRFUkFUT1IsIEFycmF5VmFsdWVzKTtcbiAgICBpZiAoIXByb3RvW1RPX1NUUklOR19UQUddKSBoaWRlKHByb3RvLCBUT19TVFJJTkdfVEFHLCBOQU1FKTtcbiAgICBJdGVyYXRvcnNbTkFNRV0gPSBBcnJheVZhbHVlcztcbiAgICBpZiAoZXhwbGljaXQpIGZvciAoa2V5IGluICRpdGVyYXRvcnMpIGlmICghcHJvdG9ba2V5XSkgcmVkZWZpbmUocHJvdG8sIGtleSwgJGl0ZXJhdG9yc1trZXldLCB0cnVlKTtcbiAgfVxufVxuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciAkdGFzayA9IHJlcXVpcmUoJy4vX3Rhc2snKTtcbiRleHBvcnQoJGV4cG9ydC5HICsgJGV4cG9ydC5CLCB7XG4gIHNldEltbWVkaWF0ZTogJHRhc2suc2V0LFxuICBjbGVhckltbWVkaWF0ZTogJHRhc2suY2xlYXJcbn0pO1xuIiwiLy8gaWU5LSBzZXRUaW1lb3V0ICYgc2V0SW50ZXJ2YWwgYWRkaXRpb25hbCBwYXJhbWV0ZXJzIGZpeFxudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciB1c2VyQWdlbnQgPSByZXF1aXJlKCcuL191c2VyLWFnZW50Jyk7XG52YXIgc2xpY2UgPSBbXS5zbGljZTtcbnZhciBNU0lFID0gL01TSUUgLlxcLi8udGVzdCh1c2VyQWdlbnQpOyAvLyA8LSBkaXJ0eSBpZTktIGNoZWNrXG52YXIgd3JhcCA9IGZ1bmN0aW9uIChzZXQpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIChmbiwgdGltZSAvKiAsIC4uLmFyZ3MgKi8pIHtcbiAgICB2YXIgYm91bmRBcmdzID0gYXJndW1lbnRzLmxlbmd0aCA+IDI7XG4gICAgdmFyIGFyZ3MgPSBib3VuZEFyZ3MgPyBzbGljZS5jYWxsKGFyZ3VtZW50cywgMikgOiBmYWxzZTtcbiAgICByZXR1cm4gc2V0KGJvdW5kQXJncyA/IGZ1bmN0aW9uICgpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgKHR5cGVvZiBmbiA9PSAnZnVuY3Rpb24nID8gZm4gOiBGdW5jdGlvbihmbikpLmFwcGx5KHRoaXMsIGFyZ3MpO1xuICAgIH0gOiBmbiwgdGltZSk7XG4gIH07XG59O1xuJGV4cG9ydCgkZXhwb3J0LkcgKyAkZXhwb3J0LkIgKyAkZXhwb3J0LkYgKiBNU0lFLCB7XG4gIHNldFRpbWVvdXQ6IHdyYXAoZ2xvYmFsLnNldFRpbWVvdXQpLFxuICBzZXRJbnRlcnZhbDogd3JhcChnbG9iYWwuc2V0SW50ZXJ2YWwpXG59KTtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLnRpbWVycycpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy93ZWIuaW1tZWRpYXRlJyk7XG5yZXF1aXJlKCcuLi9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi4vbW9kdWxlcy9fY29yZScpO1xuIiwiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQge307IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTQtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqL1xuXG52YXIgcnVudGltZSA9IChmdW5jdGlvbiAoZXhwb3J0cykge1xuICBcInVzZSBzdHJpY3RcIjtcblxuICB2YXIgT3AgPSBPYmplY3QucHJvdG90eXBlO1xuICB2YXIgaGFzT3duID0gT3AuaGFzT3duUHJvcGVydHk7XG4gIHZhciB1bmRlZmluZWQ7IC8vIE1vcmUgY29tcHJlc3NpYmxlIHRoYW4gdm9pZCAwLlxuICB2YXIgJFN5bWJvbCA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiA/IFN5bWJvbCA6IHt9O1xuICB2YXIgaXRlcmF0b3JTeW1ib2wgPSAkU3ltYm9sLml0ZXJhdG9yIHx8IFwiQEBpdGVyYXRvclwiO1xuICB2YXIgYXN5bmNJdGVyYXRvclN5bWJvbCA9ICRTeW1ib2wuYXN5bmNJdGVyYXRvciB8fCBcIkBAYXN5bmNJdGVyYXRvclwiO1xuICB2YXIgdG9TdHJpbmdUYWdTeW1ib2wgPSAkU3ltYm9sLnRvU3RyaW5nVGFnIHx8IFwiQEB0b1N0cmluZ1RhZ1wiO1xuXG4gIGZ1bmN0aW9uIGRlZmluZShvYmosIGtleSwgdmFsdWUpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHtcbiAgICAgIHZhbHVlOiB2YWx1ZSxcbiAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICB3cml0YWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIHJldHVybiBvYmpba2V5XTtcbiAgfVxuICB0cnkge1xuICAgIC8vIElFIDggaGFzIGEgYnJva2VuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSB0aGF0IG9ubHkgd29ya3Mgb24gRE9NIG9iamVjdHMuXG4gICAgZGVmaW5lKHt9LCBcIlwiKTtcbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgZGVmaW5lID0gZnVuY3Rpb24ob2JqLCBrZXksIHZhbHVlKSB7XG4gICAgICByZXR1cm4gb2JqW2tleV0gPSB2YWx1ZTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCkge1xuICAgIC8vIElmIG91dGVyRm4gcHJvdmlkZWQgYW5kIG91dGVyRm4ucHJvdG90eXBlIGlzIGEgR2VuZXJhdG9yLCB0aGVuIG91dGVyRm4ucHJvdG90eXBlIGluc3RhbmNlb2YgR2VuZXJhdG9yLlxuICAgIHZhciBwcm90b0dlbmVyYXRvciA9IG91dGVyRm4gJiYgb3V0ZXJGbi5wcm90b3R5cGUgaW5zdGFuY2VvZiBHZW5lcmF0b3IgPyBvdXRlckZuIDogR2VuZXJhdG9yO1xuICAgIHZhciBnZW5lcmF0b3IgPSBPYmplY3QuY3JlYXRlKHByb3RvR2VuZXJhdG9yLnByb3RvdHlwZSk7XG4gICAgdmFyIGNvbnRleHQgPSBuZXcgQ29udGV4dCh0cnlMb2NzTGlzdCB8fCBbXSk7XG5cbiAgICAvLyBUaGUgLl9pbnZva2UgbWV0aG9kIHVuaWZpZXMgdGhlIGltcGxlbWVudGF0aW9ucyBvZiB0aGUgLm5leHQsXG4gICAgLy8gLnRocm93LCBhbmQgLnJldHVybiBtZXRob2RzLlxuICAgIGdlbmVyYXRvci5faW52b2tlID0gbWFrZUludm9rZU1ldGhvZChpbm5lckZuLCBzZWxmLCBjb250ZXh0KTtcblxuICAgIHJldHVybiBnZW5lcmF0b3I7XG4gIH1cbiAgZXhwb3J0cy53cmFwID0gd3JhcDtcblxuICAvLyBUcnkvY2F0Y2ggaGVscGVyIHRvIG1pbmltaXplIGRlb3B0aW1pemF0aW9ucy4gUmV0dXJucyBhIGNvbXBsZXRpb25cbiAgLy8gcmVjb3JkIGxpa2UgY29udGV4dC50cnlFbnRyaWVzW2ldLmNvbXBsZXRpb24uIFRoaXMgaW50ZXJmYWNlIGNvdWxkXG4gIC8vIGhhdmUgYmVlbiAoYW5kIHdhcyBwcmV2aW91c2x5KSBkZXNpZ25lZCB0byB0YWtlIGEgY2xvc3VyZSB0byBiZVxuICAvLyBpbnZva2VkIHdpdGhvdXQgYXJndW1lbnRzLCBidXQgaW4gYWxsIHRoZSBjYXNlcyB3ZSBjYXJlIGFib3V0IHdlXG4gIC8vIGFscmVhZHkgaGF2ZSBhbiBleGlzdGluZyBtZXRob2Qgd2Ugd2FudCB0byBjYWxsLCBzbyB0aGVyZSdzIG5vIG5lZWRcbiAgLy8gdG8gY3JlYXRlIGEgbmV3IGZ1bmN0aW9uIG9iamVjdC4gV2UgY2FuIGV2ZW4gZ2V0IGF3YXkgd2l0aCBhc3N1bWluZ1xuICAvLyB0aGUgbWV0aG9kIHRha2VzIGV4YWN0bHkgb25lIGFyZ3VtZW50LCBzaW5jZSB0aGF0IGhhcHBlbnMgdG8gYmUgdHJ1ZVxuICAvLyBpbiBldmVyeSBjYXNlLCBzbyB3ZSBkb24ndCBoYXZlIHRvIHRvdWNoIHRoZSBhcmd1bWVudHMgb2JqZWN0LiBUaGVcbiAgLy8gb25seSBhZGRpdGlvbmFsIGFsbG9jYXRpb24gcmVxdWlyZWQgaXMgdGhlIGNvbXBsZXRpb24gcmVjb3JkLCB3aGljaFxuICAvLyBoYXMgYSBzdGFibGUgc2hhcGUgYW5kIHNvIGhvcGVmdWxseSBzaG91bGQgYmUgY2hlYXAgdG8gYWxsb2NhdGUuXG4gIGZ1bmN0aW9uIHRyeUNhdGNoKGZuLCBvYmosIGFyZykge1xuICAgIHRyeSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcIm5vcm1hbFwiLCBhcmc6IGZuLmNhbGwob2JqLCBhcmcpIH07XG4gICAgfSBjYXRjaCAoZXJyKSB7XG4gICAgICByZXR1cm4geyB0eXBlOiBcInRocm93XCIsIGFyZzogZXJyIH07XG4gICAgfVxuICB9XG5cbiAgdmFyIEdlblN0YXRlU3VzcGVuZGVkU3RhcnQgPSBcInN1c3BlbmRlZFN0YXJ0XCI7XG4gIHZhciBHZW5TdGF0ZVN1c3BlbmRlZFlpZWxkID0gXCJzdXNwZW5kZWRZaWVsZFwiO1xuICB2YXIgR2VuU3RhdGVFeGVjdXRpbmcgPSBcImV4ZWN1dGluZ1wiO1xuICB2YXIgR2VuU3RhdGVDb21wbGV0ZWQgPSBcImNvbXBsZXRlZFwiO1xuXG4gIC8vIFJldHVybmluZyB0aGlzIG9iamVjdCBmcm9tIHRoZSBpbm5lckZuIGhhcyB0aGUgc2FtZSBlZmZlY3QgYXNcbiAgLy8gYnJlYWtpbmcgb3V0IG9mIHRoZSBkaXNwYXRjaCBzd2l0Y2ggc3RhdGVtZW50LlxuICB2YXIgQ29udGludWVTZW50aW5lbCA9IHt9O1xuXG4gIC8vIER1bW15IGNvbnN0cnVjdG9yIGZ1bmN0aW9ucyB0aGF0IHdlIHVzZSBhcyB0aGUgLmNvbnN0cnVjdG9yIGFuZFxuICAvLyAuY29uc3RydWN0b3IucHJvdG90eXBlIHByb3BlcnRpZXMgZm9yIGZ1bmN0aW9ucyB0aGF0IHJldHVybiBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0cy4gRm9yIGZ1bGwgc3BlYyBjb21wbGlhbmNlLCB5b3UgbWF5IHdpc2ggdG8gY29uZmlndXJlIHlvdXJcbiAgLy8gbWluaWZpZXIgbm90IHRvIG1hbmdsZSB0aGUgbmFtZXMgb2YgdGhlc2UgdHdvIGZ1bmN0aW9ucy5cbiAgZnVuY3Rpb24gR2VuZXJhdG9yKCkge31cbiAgZnVuY3Rpb24gR2VuZXJhdG9yRnVuY3Rpb24oKSB7fVxuICBmdW5jdGlvbiBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZSgpIHt9XG5cbiAgLy8gVGhpcyBpcyBhIHBvbHlmaWxsIGZvciAlSXRlcmF0b3JQcm90b3R5cGUlIGZvciBlbnZpcm9ubWVudHMgdGhhdFxuICAvLyBkb24ndCBuYXRpdmVseSBzdXBwb3J0IGl0LlxuICB2YXIgSXRlcmF0b3JQcm90b3R5cGUgPSB7fTtcbiAgSXRlcmF0b3JQcm90b3R5cGVbaXRlcmF0b3JTeW1ib2xdID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzO1xuICB9O1xuXG4gIHZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcbiAgdmFyIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlID0gZ2V0UHJvdG8gJiYgZ2V0UHJvdG8oZ2V0UHJvdG8odmFsdWVzKFtdKSkpO1xuICBpZiAoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUgJiZcbiAgICAgIE5hdGl2ZUl0ZXJhdG9yUHJvdG90eXBlICE9PSBPcCAmJlxuICAgICAgaGFzT3duLmNhbGwoTmF0aXZlSXRlcmF0b3JQcm90b3R5cGUsIGl0ZXJhdG9yU3ltYm9sKSkge1xuICAgIC8vIFRoaXMgZW52aXJvbm1lbnQgaGFzIGEgbmF0aXZlICVJdGVyYXRvclByb3RvdHlwZSU7IHVzZSBpdCBpbnN0ZWFkXG4gICAgLy8gb2YgdGhlIHBvbHlmaWxsLlxuICAgIEl0ZXJhdG9yUHJvdG90eXBlID0gTmF0aXZlSXRlcmF0b3JQcm90b3R5cGU7XG4gIH1cblxuICB2YXIgR3AgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZS5wcm90b3R5cGUgPVxuICAgIEdlbmVyYXRvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlKTtcbiAgR2VuZXJhdG9yRnVuY3Rpb24ucHJvdG90eXBlID0gR3AuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvblByb3RvdHlwZTtcbiAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUuY29uc3RydWN0b3IgPSBHZW5lcmF0b3JGdW5jdGlvbjtcbiAgR2VuZXJhdG9yRnVuY3Rpb24uZGlzcGxheU5hbWUgPSBkZWZpbmUoXG4gICAgR2VuZXJhdG9yRnVuY3Rpb25Qcm90b3R5cGUsXG4gICAgdG9TdHJpbmdUYWdTeW1ib2wsXG4gICAgXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICk7XG5cbiAgLy8gSGVscGVyIGZvciBkZWZpbmluZyB0aGUgLm5leHQsIC50aHJvdywgYW5kIC5yZXR1cm4gbWV0aG9kcyBvZiB0aGVcbiAgLy8gSXRlcmF0b3IgaW50ZXJmYWNlIGluIHRlcm1zIG9mIGEgc2luZ2xlIC5faW52b2tlIG1ldGhvZC5cbiAgZnVuY3Rpb24gZGVmaW5lSXRlcmF0b3JNZXRob2RzKHByb3RvdHlwZSkge1xuICAgIFtcIm5leHRcIiwgXCJ0aHJvd1wiLCBcInJldHVyblwiXS5mb3JFYWNoKGZ1bmN0aW9uKG1ldGhvZCkge1xuICAgICAgZGVmaW5lKHByb3RvdHlwZSwgbWV0aG9kLCBmdW5jdGlvbihhcmcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ludm9rZShtZXRob2QsIGFyZyk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGV4cG9ydHMuaXNHZW5lcmF0b3JGdW5jdGlvbiA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIHZhciBjdG9yID0gdHlwZW9mIGdlbkZ1biA9PT0gXCJmdW5jdGlvblwiICYmIGdlbkZ1bi5jb25zdHJ1Y3RvcjtcbiAgICByZXR1cm4gY3RvclxuICAgICAgPyBjdG9yID09PSBHZW5lcmF0b3JGdW5jdGlvbiB8fFxuICAgICAgICAvLyBGb3IgdGhlIG5hdGl2ZSBHZW5lcmF0b3JGdW5jdGlvbiBjb25zdHJ1Y3RvciwgdGhlIGJlc3Qgd2UgY2FuXG4gICAgICAgIC8vIGRvIGlzIHRvIGNoZWNrIGl0cyAubmFtZSBwcm9wZXJ0eS5cbiAgICAgICAgKGN0b3IuZGlzcGxheU5hbWUgfHwgY3Rvci5uYW1lKSA9PT0gXCJHZW5lcmF0b3JGdW5jdGlvblwiXG4gICAgICA6IGZhbHNlO1xuICB9O1xuXG4gIGV4cG9ydHMubWFyayA9IGZ1bmN0aW9uKGdlbkZ1bikge1xuICAgIGlmIChPYmplY3Quc2V0UHJvdG90eXBlT2YpIHtcbiAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihnZW5GdW4sIEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZ2VuRnVuLl9fcHJvdG9fXyA9IEdlbmVyYXRvckZ1bmN0aW9uUHJvdG90eXBlO1xuICAgICAgZGVmaW5lKGdlbkZ1biwgdG9TdHJpbmdUYWdTeW1ib2wsIFwiR2VuZXJhdG9yRnVuY3Rpb25cIik7XG4gICAgfVxuICAgIGdlbkZ1bi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEdwKTtcbiAgICByZXR1cm4gZ2VuRnVuO1xuICB9O1xuXG4gIC8vIFdpdGhpbiB0aGUgYm9keSBvZiBhbnkgYXN5bmMgZnVuY3Rpb24sIGBhd2FpdCB4YCBpcyB0cmFuc2Zvcm1lZCB0b1xuICAvLyBgeWllbGQgcmVnZW5lcmF0b3JSdW50aW1lLmF3cmFwKHgpYCwgc28gdGhhdCB0aGUgcnVudGltZSBjYW4gdGVzdFxuICAvLyBgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKWAgdG8gZGV0ZXJtaW5lIGlmIHRoZSB5aWVsZGVkIHZhbHVlIGlzXG4gIC8vIG1lYW50IHRvIGJlIGF3YWl0ZWQuXG4gIGV4cG9ydHMuYXdyYXAgPSBmdW5jdGlvbihhcmcpIHtcbiAgICByZXR1cm4geyBfX2F3YWl0OiBhcmcgfTtcbiAgfTtcblxuICBmdW5jdGlvbiBBc3luY0l0ZXJhdG9yKGdlbmVyYXRvciwgUHJvbWlzZUltcGwpIHtcbiAgICBmdW5jdGlvbiBpbnZva2UobWV0aG9kLCBhcmcsIHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgdmFyIHJlY29yZCA9IHRyeUNhdGNoKGdlbmVyYXRvclttZXRob2RdLCBnZW5lcmF0b3IsIGFyZyk7XG4gICAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICByZWplY3QocmVjb3JkLmFyZyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB2YXIgcmVzdWx0ID0gcmVjb3JkLmFyZztcbiAgICAgICAgdmFyIHZhbHVlID0gcmVzdWx0LnZhbHVlO1xuICAgICAgICBpZiAodmFsdWUgJiZcbiAgICAgICAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gXCJvYmplY3RcIiAmJlxuICAgICAgICAgICAgaGFzT3duLmNhbGwodmFsdWUsIFwiX19hd2FpdFwiKSkge1xuICAgICAgICAgIHJldHVybiBQcm9taXNlSW1wbC5yZXNvbHZlKHZhbHVlLl9fYXdhaXQpLnRoZW4oZnVuY3Rpb24odmFsdWUpIHtcbiAgICAgICAgICAgIGludm9rZShcIm5leHRcIiwgdmFsdWUsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICBpbnZva2UoXCJ0aHJvd1wiLCBlcnIsIHJlc29sdmUsIHJlamVjdCk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gUHJvbWlzZUltcGwucmVzb2x2ZSh2YWx1ZSkudGhlbihmdW5jdGlvbih1bndyYXBwZWQpIHtcbiAgICAgICAgICAvLyBXaGVuIGEgeWllbGRlZCBQcm9taXNlIGlzIHJlc29sdmVkLCBpdHMgZmluYWwgdmFsdWUgYmVjb21lc1xuICAgICAgICAgIC8vIHRoZSAudmFsdWUgb2YgdGhlIFByb21pc2U8e3ZhbHVlLGRvbmV9PiByZXN1bHQgZm9yIHRoZVxuICAgICAgICAgIC8vIGN1cnJlbnQgaXRlcmF0aW9uLlxuICAgICAgICAgIHJlc3VsdC52YWx1ZSA9IHVud3JhcHBlZDtcbiAgICAgICAgICByZXNvbHZlKHJlc3VsdCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICAgICAgLy8gSWYgYSByZWplY3RlZCBQcm9taXNlIHdhcyB5aWVsZGVkLCB0aHJvdyB0aGUgcmVqZWN0aW9uIGJhY2tcbiAgICAgICAgICAvLyBpbnRvIHRoZSBhc3luYyBnZW5lcmF0b3IgZnVuY3Rpb24gc28gaXQgY2FuIGJlIGhhbmRsZWQgdGhlcmUuXG4gICAgICAgICAgcmV0dXJuIGludm9rZShcInRocm93XCIsIGVycm9yLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgcHJldmlvdXNQcm9taXNlO1xuXG4gICAgZnVuY3Rpb24gZW5xdWV1ZShtZXRob2QsIGFyZykge1xuICAgICAgZnVuY3Rpb24gY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZUltcGwoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgICAgaW52b2tlKG1ldGhvZCwgYXJnLCByZXNvbHZlLCByZWplY3QpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHByZXZpb3VzUHJvbWlzZSA9XG4gICAgICAgIC8vIElmIGVucXVldWUgaGFzIGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiB3ZSB3YW50IHRvIHdhaXQgdW50aWxcbiAgICAgICAgLy8gYWxsIHByZXZpb3VzIFByb21pc2VzIGhhdmUgYmVlbiByZXNvbHZlZCBiZWZvcmUgY2FsbGluZyBpbnZva2UsXG4gICAgICAgIC8vIHNvIHRoYXQgcmVzdWx0cyBhcmUgYWx3YXlzIGRlbGl2ZXJlZCBpbiB0aGUgY29ycmVjdCBvcmRlci4gSWZcbiAgICAgICAgLy8gZW5xdWV1ZSBoYXMgbm90IGJlZW4gY2FsbGVkIGJlZm9yZSwgdGhlbiBpdCBpcyBpbXBvcnRhbnQgdG9cbiAgICAgICAgLy8gY2FsbCBpbnZva2UgaW1tZWRpYXRlbHksIHdpdGhvdXQgd2FpdGluZyBvbiBhIGNhbGxiYWNrIHRvIGZpcmUsXG4gICAgICAgIC8vIHNvIHRoYXQgdGhlIGFzeW5jIGdlbmVyYXRvciBmdW5jdGlvbiBoYXMgdGhlIG9wcG9ydHVuaXR5IHRvIGRvXG4gICAgICAgIC8vIGFueSBuZWNlc3Nhcnkgc2V0dXAgaW4gYSBwcmVkaWN0YWJsZSB3YXkuIFRoaXMgcHJlZGljdGFiaWxpdHlcbiAgICAgICAgLy8gaXMgd2h5IHRoZSBQcm9taXNlIGNvbnN0cnVjdG9yIHN5bmNocm9ub3VzbHkgaW52b2tlcyBpdHNcbiAgICAgICAgLy8gZXhlY3V0b3IgY2FsbGJhY2ssIGFuZCB3aHkgYXN5bmMgZnVuY3Rpb25zIHN5bmNocm9ub3VzbHlcbiAgICAgICAgLy8gZXhlY3V0ZSBjb2RlIGJlZm9yZSB0aGUgZmlyc3QgYXdhaXQuIFNpbmNlIHdlIGltcGxlbWVudCBzaW1wbGVcbiAgICAgICAgLy8gYXN5bmMgZnVuY3Rpb25zIGluIHRlcm1zIG9mIGFzeW5jIGdlbmVyYXRvcnMsIGl0IGlzIGVzcGVjaWFsbHlcbiAgICAgICAgLy8gaW1wb3J0YW50IHRvIGdldCB0aGlzIHJpZ2h0LCBldmVuIHRob3VnaCBpdCByZXF1aXJlcyBjYXJlLlxuICAgICAgICBwcmV2aW91c1Byb21pc2UgPyBwcmV2aW91c1Byb21pc2UudGhlbihcbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZyxcbiAgICAgICAgICAvLyBBdm9pZCBwcm9wYWdhdGluZyBmYWlsdXJlcyB0byBQcm9taXNlcyByZXR1cm5lZCBieSBsYXRlclxuICAgICAgICAgIC8vIGludm9jYXRpb25zIG9mIHRoZSBpdGVyYXRvci5cbiAgICAgICAgICBjYWxsSW52b2tlV2l0aE1ldGhvZEFuZEFyZ1xuICAgICAgICApIDogY2FsbEludm9rZVdpdGhNZXRob2RBbmRBcmcoKTtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmUgdGhlIHVuaWZpZWQgaGVscGVyIG1ldGhvZCB0aGF0IGlzIHVzZWQgdG8gaW1wbGVtZW50IC5uZXh0LFxuICAgIC8vIC50aHJvdywgYW5kIC5yZXR1cm4gKHNlZSBkZWZpbmVJdGVyYXRvck1ldGhvZHMpLlxuICAgIHRoaXMuX2ludm9rZSA9IGVucXVldWU7XG4gIH1cblxuICBkZWZpbmVJdGVyYXRvck1ldGhvZHMoQXN5bmNJdGVyYXRvci5wcm90b3R5cGUpO1xuICBBc3luY0l0ZXJhdG9yLnByb3RvdHlwZVthc3luY0l0ZXJhdG9yU3ltYm9sXSA9IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcbiAgZXhwb3J0cy5Bc3luY0l0ZXJhdG9yID0gQXN5bmNJdGVyYXRvcjtcblxuICAvLyBOb3RlIHRoYXQgc2ltcGxlIGFzeW5jIGZ1bmN0aW9ucyBhcmUgaW1wbGVtZW50ZWQgb24gdG9wIG9mXG4gIC8vIEFzeW5jSXRlcmF0b3Igb2JqZWN0czsgdGhleSBqdXN0IHJldHVybiBhIFByb21pc2UgZm9yIHRoZSB2YWx1ZSBvZlxuICAvLyB0aGUgZmluYWwgcmVzdWx0IHByb2R1Y2VkIGJ5IHRoZSBpdGVyYXRvci5cbiAgZXhwb3J0cy5hc3luYyA9IGZ1bmN0aW9uKGlubmVyRm4sIG91dGVyRm4sIHNlbGYsIHRyeUxvY3NMaXN0LCBQcm9taXNlSW1wbCkge1xuICAgIGlmIChQcm9taXNlSW1wbCA9PT0gdm9pZCAwKSBQcm9taXNlSW1wbCA9IFByb21pc2U7XG5cbiAgICB2YXIgaXRlciA9IG5ldyBBc3luY0l0ZXJhdG9yKFxuICAgICAgd3JhcChpbm5lckZuLCBvdXRlckZuLCBzZWxmLCB0cnlMb2NzTGlzdCksXG4gICAgICBQcm9taXNlSW1wbFxuICAgICk7XG5cbiAgICByZXR1cm4gZXhwb3J0cy5pc0dlbmVyYXRvckZ1bmN0aW9uKG91dGVyRm4pXG4gICAgICA/IGl0ZXIgLy8gSWYgb3V0ZXJGbiBpcyBhIGdlbmVyYXRvciwgcmV0dXJuIHRoZSBmdWxsIGl0ZXJhdG9yLlxuICAgICAgOiBpdGVyLm5leHQoKS50aGVuKGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICAgIHJldHVybiByZXN1bHQuZG9uZSA/IHJlc3VsdC52YWx1ZSA6IGl0ZXIubmV4dCgpO1xuICAgICAgICB9KTtcbiAgfTtcblxuICBmdW5jdGlvbiBtYWtlSW52b2tlTWV0aG9kKGlubmVyRm4sIHNlbGYsIGNvbnRleHQpIHtcbiAgICB2YXIgc3RhdGUgPSBHZW5TdGF0ZVN1c3BlbmRlZFN0YXJ0O1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIGludm9rZShtZXRob2QsIGFyZykge1xuICAgICAgaWYgKHN0YXRlID09PSBHZW5TdGF0ZUV4ZWN1dGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJHZW5lcmF0b3IgaXMgYWxyZWFkeSBydW5uaW5nXCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlQ29tcGxldGVkKSB7XG4gICAgICAgIGlmIChtZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHRocm93IGFyZztcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEJlIGZvcmdpdmluZywgcGVyIDI1LjMuMy4zLjMgb2YgdGhlIHNwZWM6XG4gICAgICAgIC8vIGh0dHBzOi8vcGVvcGxlLm1vemlsbGEub3JnL35qb3JlbmRvcmZmL2VzNi1kcmFmdC5odG1sI3NlYy1nZW5lcmF0b3JyZXN1bWVcbiAgICAgICAgcmV0dXJuIGRvbmVSZXN1bHQoKTtcbiAgICAgIH1cblxuICAgICAgY29udGV4dC5tZXRob2QgPSBtZXRob2Q7XG4gICAgICBjb250ZXh0LmFyZyA9IGFyZztcblxuICAgICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgdmFyIGRlbGVnYXRlID0gY29udGV4dC5kZWxlZ2F0ZTtcbiAgICAgICAgaWYgKGRlbGVnYXRlKSB7XG4gICAgICAgICAgdmFyIGRlbGVnYXRlUmVzdWx0ID0gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG4gICAgICAgICAgaWYgKGRlbGVnYXRlUmVzdWx0KSB7XG4gICAgICAgICAgICBpZiAoZGVsZWdhdGVSZXN1bHQgPT09IENvbnRpbnVlU2VudGluZWwpIGNvbnRpbnVlO1xuICAgICAgICAgICAgcmV0dXJuIGRlbGVnYXRlUmVzdWx0O1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCA9PT0gXCJuZXh0XCIpIHtcbiAgICAgICAgICAvLyBTZXR0aW5nIGNvbnRleHQuX3NlbnQgZm9yIGxlZ2FjeSBzdXBwb3J0IG9mIEJhYmVsJ3NcbiAgICAgICAgICAvLyBmdW5jdGlvbi5zZW50IGltcGxlbWVudGF0aW9uLlxuICAgICAgICAgIGNvbnRleHQuc2VudCA9IGNvbnRleHQuX3NlbnQgPSBjb250ZXh0LmFyZztcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICBpZiAoc3RhdGUgPT09IEdlblN0YXRlU3VzcGVuZGVkU3RhcnQpIHtcbiAgICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgICB0aHJvdyBjb250ZXh0LmFyZztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBjb250ZXh0LmRpc3BhdGNoRXhjZXB0aW9uKGNvbnRleHQuYXJnKTtcblxuICAgICAgICB9IGVsc2UgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInJldHVyblwiKSB7XG4gICAgICAgICAgY29udGV4dC5hYnJ1cHQoXCJyZXR1cm5cIiwgY29udGV4dC5hcmcpO1xuICAgICAgICB9XG5cbiAgICAgICAgc3RhdGUgPSBHZW5TdGF0ZUV4ZWN1dGluZztcblxuICAgICAgICB2YXIgcmVjb3JkID0gdHJ5Q2F0Y2goaW5uZXJGbiwgc2VsZiwgY29udGV4dCk7XG4gICAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJub3JtYWxcIikge1xuICAgICAgICAgIC8vIElmIGFuIGV4Y2VwdGlvbiBpcyB0aHJvd24gZnJvbSBpbm5lckZuLCB3ZSBsZWF2ZSBzdGF0ZSA9PT1cbiAgICAgICAgICAvLyBHZW5TdGF0ZUV4ZWN1dGluZyBhbmQgbG9vcCBiYWNrIGZvciBhbm90aGVyIGludm9jYXRpb24uXG4gICAgICAgICAgc3RhdGUgPSBjb250ZXh0LmRvbmVcbiAgICAgICAgICAgID8gR2VuU3RhdGVDb21wbGV0ZWRcbiAgICAgICAgICAgIDogR2VuU3RhdGVTdXNwZW5kZWRZaWVsZDtcblxuICAgICAgICAgIGlmIChyZWNvcmQuYXJnID09PSBDb250aW51ZVNlbnRpbmVsKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IHJlY29yZC5hcmcsXG4gICAgICAgICAgICBkb25lOiBjb250ZXh0LmRvbmVcbiAgICAgICAgICB9O1xuXG4gICAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgIHN0YXRlID0gR2VuU3RhdGVDb21wbGV0ZWQ7XG4gICAgICAgICAgLy8gRGlzcGF0Y2ggdGhlIGV4Y2VwdGlvbiBieSBsb29waW5nIGJhY2sgYXJvdW5kIHRvIHRoZVxuICAgICAgICAgIC8vIGNvbnRleHQuZGlzcGF0Y2hFeGNlcHRpb24oY29udGV4dC5hcmcpIGNhbGwgYWJvdmUuXG4gICAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSByZWNvcmQuYXJnO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcbiAgfVxuXG4gIC8vIENhbGwgZGVsZWdhdGUuaXRlcmF0b3JbY29udGV4dC5tZXRob2RdKGNvbnRleHQuYXJnKSBhbmQgaGFuZGxlIHRoZVxuICAvLyByZXN1bHQsIGVpdGhlciBieSByZXR1cm5pbmcgYSB7IHZhbHVlLCBkb25lIH0gcmVzdWx0IGZyb20gdGhlXG4gIC8vIGRlbGVnYXRlIGl0ZXJhdG9yLCBvciBieSBtb2RpZnlpbmcgY29udGV4dC5tZXRob2QgYW5kIGNvbnRleHQuYXJnLFxuICAvLyBzZXR0aW5nIGNvbnRleHQuZGVsZWdhdGUgdG8gbnVsbCwgYW5kIHJldHVybmluZyB0aGUgQ29udGludWVTZW50aW5lbC5cbiAgZnVuY3Rpb24gbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCkge1xuICAgIHZhciBtZXRob2QgPSBkZWxlZ2F0ZS5pdGVyYXRvcltjb250ZXh0Lm1ldGhvZF07XG4gICAgaWYgKG1ldGhvZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAvLyBBIC50aHJvdyBvciAucmV0dXJuIHdoZW4gdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBubyAudGhyb3dcbiAgICAgIC8vIG1ldGhvZCBhbHdheXMgdGVybWluYXRlcyB0aGUgeWllbGQqIGxvb3AuXG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcblxuICAgICAgaWYgKGNvbnRleHQubWV0aG9kID09PSBcInRocm93XCIpIHtcbiAgICAgICAgLy8gTm90ZTogW1wicmV0dXJuXCJdIG11c3QgYmUgdXNlZCBmb3IgRVMzIHBhcnNpbmcgY29tcGF0aWJpbGl0eS5cbiAgICAgICAgaWYgKGRlbGVnYXRlLml0ZXJhdG9yW1wicmV0dXJuXCJdKSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRlbGVnYXRlIGl0ZXJhdG9yIGhhcyBhIHJldHVybiBtZXRob2QsIGdpdmUgaXQgYVxuICAgICAgICAgIC8vIGNoYW5jZSB0byBjbGVhbiB1cC5cbiAgICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwicmV0dXJuXCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgbWF5YmVJbnZva2VEZWxlZ2F0ZShkZWxlZ2F0ZSwgY29udGV4dCk7XG5cbiAgICAgICAgICBpZiAoY29udGV4dC5tZXRob2QgPT09IFwidGhyb3dcIikge1xuICAgICAgICAgICAgLy8gSWYgbWF5YmVJbnZva2VEZWxlZ2F0ZShjb250ZXh0KSBjaGFuZ2VkIGNvbnRleHQubWV0aG9kIGZyb21cbiAgICAgICAgICAgIC8vIFwicmV0dXJuXCIgdG8gXCJ0aHJvd1wiLCBsZXQgdGhhdCBvdmVycmlkZSB0aGUgVHlwZUVycm9yIGJlbG93LlxuICAgICAgICAgICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICAgIGNvbnRleHQuYXJnID0gbmV3IFR5cGVFcnJvcihcbiAgICAgICAgICBcIlRoZSBpdGVyYXRvciBkb2VzIG5vdCBwcm92aWRlIGEgJ3Rocm93JyBtZXRob2RcIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciByZWNvcmQgPSB0cnlDYXRjaChtZXRob2QsIGRlbGVnYXRlLml0ZXJhdG9yLCBjb250ZXh0LmFyZyk7XG5cbiAgICBpZiAocmVjb3JkLnR5cGUgPT09IFwidGhyb3dcIikge1xuICAgICAgY29udGV4dC5tZXRob2QgPSBcInRocm93XCI7XG4gICAgICBjb250ZXh0LmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIHZhciBpbmZvID0gcmVjb3JkLmFyZztcblxuICAgIGlmICghIGluZm8pIHtcbiAgICAgIGNvbnRleHQubWV0aG9kID0gXCJ0aHJvd1wiO1xuICAgICAgY29udGV4dC5hcmcgPSBuZXcgVHlwZUVycm9yKFwiaXRlcmF0b3IgcmVzdWx0IGlzIG5vdCBhbiBvYmplY3RcIik7XG4gICAgICBjb250ZXh0LmRlbGVnYXRlID0gbnVsbDtcbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH1cblxuICAgIGlmIChpbmZvLmRvbmUpIHtcbiAgICAgIC8vIEFzc2lnbiB0aGUgcmVzdWx0IG9mIHRoZSBmaW5pc2hlZCBkZWxlZ2F0ZSB0byB0aGUgdGVtcG9yYXJ5XG4gICAgICAvLyB2YXJpYWJsZSBzcGVjaWZpZWQgYnkgZGVsZWdhdGUucmVzdWx0TmFtZSAoc2VlIGRlbGVnYXRlWWllbGQpLlxuICAgICAgY29udGV4dFtkZWxlZ2F0ZS5yZXN1bHROYW1lXSA9IGluZm8udmFsdWU7XG5cbiAgICAgIC8vIFJlc3VtZSBleGVjdXRpb24gYXQgdGhlIGRlc2lyZWQgbG9jYXRpb24gKHNlZSBkZWxlZ2F0ZVlpZWxkKS5cbiAgICAgIGNvbnRleHQubmV4dCA9IGRlbGVnYXRlLm5leHRMb2M7XG5cbiAgICAgIC8vIElmIGNvbnRleHQubWV0aG9kIHdhcyBcInRocm93XCIgYnV0IHRoZSBkZWxlZ2F0ZSBoYW5kbGVkIHRoZVxuICAgICAgLy8gZXhjZXB0aW9uLCBsZXQgdGhlIG91dGVyIGdlbmVyYXRvciBwcm9jZWVkIG5vcm1hbGx5LiBJZlxuICAgICAgLy8gY29udGV4dC5tZXRob2Qgd2FzIFwibmV4dFwiLCBmb3JnZXQgY29udGV4dC5hcmcgc2luY2UgaXQgaGFzIGJlZW5cbiAgICAgIC8vIFwiY29uc3VtZWRcIiBieSB0aGUgZGVsZWdhdGUgaXRlcmF0b3IuIElmIGNvbnRleHQubWV0aG9kIHdhc1xuICAgICAgLy8gXCJyZXR1cm5cIiwgYWxsb3cgdGhlIG9yaWdpbmFsIC5yZXR1cm4gY2FsbCB0byBjb250aW51ZSBpbiB0aGVcbiAgICAgIC8vIG91dGVyIGdlbmVyYXRvci5cbiAgICAgIGlmIChjb250ZXh0Lm1ldGhvZCAhPT0gXCJyZXR1cm5cIikge1xuICAgICAgICBjb250ZXh0Lm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgICBjb250ZXh0LmFyZyA9IHVuZGVmaW5lZDtcbiAgICAgIH1cblxuICAgIH0gZWxzZSB7XG4gICAgICAvLyBSZS15aWVsZCB0aGUgcmVzdWx0IHJldHVybmVkIGJ5IHRoZSBkZWxlZ2F0ZSBtZXRob2QuXG4gICAgICByZXR1cm4gaW5mbztcbiAgICB9XG5cbiAgICAvLyBUaGUgZGVsZWdhdGUgaXRlcmF0b3IgaXMgZmluaXNoZWQsIHNvIGZvcmdldCBpdCBhbmQgY29udGludWUgd2l0aFxuICAgIC8vIHRoZSBvdXRlciBnZW5lcmF0b3IuXG4gICAgY29udGV4dC5kZWxlZ2F0ZSA9IG51bGw7XG4gICAgcmV0dXJuIENvbnRpbnVlU2VudGluZWw7XG4gIH1cblxuICAvLyBEZWZpbmUgR2VuZXJhdG9yLnByb3RvdHlwZS57bmV4dCx0aHJvdyxyZXR1cm59IGluIHRlcm1zIG9mIHRoZVxuICAvLyB1bmlmaWVkIC5faW52b2tlIGhlbHBlciBtZXRob2QuXG4gIGRlZmluZUl0ZXJhdG9yTWV0aG9kcyhHcCk7XG5cbiAgZGVmaW5lKEdwLCB0b1N0cmluZ1RhZ1N5bWJvbCwgXCJHZW5lcmF0b3JcIik7XG5cbiAgLy8gQSBHZW5lcmF0b3Igc2hvdWxkIGFsd2F5cyByZXR1cm4gaXRzZWxmIGFzIHRoZSBpdGVyYXRvciBvYmplY3Qgd2hlbiB0aGVcbiAgLy8gQEBpdGVyYXRvciBmdW5jdGlvbiBpcyBjYWxsZWQgb24gaXQuIFNvbWUgYnJvd3NlcnMnIGltcGxlbWVudGF0aW9ucyBvZiB0aGVcbiAgLy8gaXRlcmF0b3IgcHJvdG90eXBlIGNoYWluIGluY29ycmVjdGx5IGltcGxlbWVudCB0aGlzLCBjYXVzaW5nIHRoZSBHZW5lcmF0b3JcbiAgLy8gb2JqZWN0IHRvIG5vdCBiZSByZXR1cm5lZCBmcm9tIHRoaXMgY2FsbC4gVGhpcyBlbnN1cmVzIHRoYXQgZG9lc24ndCBoYXBwZW4uXG4gIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2svcmVnZW5lcmF0b3IvaXNzdWVzLzI3NCBmb3IgbW9yZSBkZXRhaWxzLlxuICBHcFtpdGVyYXRvclN5bWJvbF0gPSBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcztcbiAgfTtcblxuICBHcC50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBcIltvYmplY3QgR2VuZXJhdG9yXVwiO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHB1c2hUcnlFbnRyeShsb2NzKSB7XG4gICAgdmFyIGVudHJ5ID0geyB0cnlMb2M6IGxvY3NbMF0gfTtcblxuICAgIGlmICgxIGluIGxvY3MpIHtcbiAgICAgIGVudHJ5LmNhdGNoTG9jID0gbG9jc1sxXTtcbiAgICB9XG5cbiAgICBpZiAoMiBpbiBsb2NzKSB7XG4gICAgICBlbnRyeS5maW5hbGx5TG9jID0gbG9jc1syXTtcbiAgICAgIGVudHJ5LmFmdGVyTG9jID0gbG9jc1szXTtcbiAgICB9XG5cbiAgICB0aGlzLnRyeUVudHJpZXMucHVzaChlbnRyeSk7XG4gIH1cblxuICBmdW5jdGlvbiByZXNldFRyeUVudHJ5KGVudHJ5KSB7XG4gICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb24gfHwge307XG4gICAgcmVjb3JkLnR5cGUgPSBcIm5vcm1hbFwiO1xuICAgIGRlbGV0ZSByZWNvcmQuYXJnO1xuICAgIGVudHJ5LmNvbXBsZXRpb24gPSByZWNvcmQ7XG4gIH1cblxuICBmdW5jdGlvbiBDb250ZXh0KHRyeUxvY3NMaXN0KSB7XG4gICAgLy8gVGhlIHJvb3QgZW50cnkgb2JqZWN0IChlZmZlY3RpdmVseSBhIHRyeSBzdGF0ZW1lbnQgd2l0aG91dCBhIGNhdGNoXG4gICAgLy8gb3IgYSBmaW5hbGx5IGJsb2NrKSBnaXZlcyB1cyBhIHBsYWNlIHRvIHN0b3JlIHZhbHVlcyB0aHJvd24gZnJvbVxuICAgIC8vIGxvY2F0aW9ucyB3aGVyZSB0aGVyZSBpcyBubyBlbmNsb3NpbmcgdHJ5IHN0YXRlbWVudC5cbiAgICB0aGlzLnRyeUVudHJpZXMgPSBbeyB0cnlMb2M6IFwicm9vdFwiIH1dO1xuICAgIHRyeUxvY3NMaXN0LmZvckVhY2gocHVzaFRyeUVudHJ5LCB0aGlzKTtcbiAgICB0aGlzLnJlc2V0KHRydWUpO1xuICB9XG5cbiAgZXhwb3J0cy5rZXlzID0gZnVuY3Rpb24ob2JqZWN0KSB7XG4gICAgdmFyIGtleXMgPSBbXTtcbiAgICBmb3IgKHZhciBrZXkgaW4gb2JqZWN0KSB7XG4gICAgICBrZXlzLnB1c2goa2V5KTtcbiAgICB9XG4gICAga2V5cy5yZXZlcnNlKCk7XG5cbiAgICAvLyBSYXRoZXIgdGhhbiByZXR1cm5pbmcgYW4gb2JqZWN0IHdpdGggYSBuZXh0IG1ldGhvZCwgd2Uga2VlcFxuICAgIC8vIHRoaW5ncyBzaW1wbGUgYW5kIHJldHVybiB0aGUgbmV4dCBmdW5jdGlvbiBpdHNlbGYuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICB3aGlsZSAoa2V5cy5sZW5ndGgpIHtcbiAgICAgICAgdmFyIGtleSA9IGtleXMucG9wKCk7XG4gICAgICAgIGlmIChrZXkgaW4gb2JqZWN0KSB7XG4gICAgICAgICAgbmV4dC52YWx1ZSA9IGtleTtcbiAgICAgICAgICBuZXh0LmRvbmUgPSBmYWxzZTtcbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICAvLyBUbyBhdm9pZCBjcmVhdGluZyBhbiBhZGRpdGlvbmFsIG9iamVjdCwgd2UganVzdCBoYW5nIHRoZSAudmFsdWVcbiAgICAgIC8vIGFuZCAuZG9uZSBwcm9wZXJ0aWVzIG9mZiB0aGUgbmV4dCBmdW5jdGlvbiBvYmplY3QgaXRzZWxmLiBUaGlzXG4gICAgICAvLyBhbHNvIGVuc3VyZXMgdGhhdCB0aGUgbWluaWZpZXIgd2lsbCBub3QgYW5vbnltaXplIHRoZSBmdW5jdGlvbi5cbiAgICAgIG5leHQuZG9uZSA9IHRydWU7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9O1xuICB9O1xuXG4gIGZ1bmN0aW9uIHZhbHVlcyhpdGVyYWJsZSkge1xuICAgIGlmIChpdGVyYWJsZSkge1xuICAgICAgdmFyIGl0ZXJhdG9yTWV0aG9kID0gaXRlcmFibGVbaXRlcmF0b3JTeW1ib2xdO1xuICAgICAgaWYgKGl0ZXJhdG9yTWV0aG9kKSB7XG4gICAgICAgIHJldHVybiBpdGVyYXRvck1ldGhvZC5jYWxsKGl0ZXJhYmxlKTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBpdGVyYWJsZS5uZXh0ID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGl0ZXJhYmxlO1xuICAgICAgfVxuXG4gICAgICBpZiAoIWlzTmFOKGl0ZXJhYmxlLmxlbmd0aCkpIHtcbiAgICAgICAgdmFyIGkgPSAtMSwgbmV4dCA9IGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgICAgd2hpbGUgKCsraSA8IGl0ZXJhYmxlLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKGhhc093bi5jYWxsKGl0ZXJhYmxlLCBpKSkge1xuICAgICAgICAgICAgICBuZXh0LnZhbHVlID0gaXRlcmFibGVbaV07XG4gICAgICAgICAgICAgIG5leHQuZG9uZSA9IGZhbHNlO1xuICAgICAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG5cbiAgICAgICAgICBuZXh0LnZhbHVlID0gdW5kZWZpbmVkO1xuICAgICAgICAgIG5leHQuZG9uZSA9IHRydWU7XG5cbiAgICAgICAgICByZXR1cm4gbmV4dDtcbiAgICAgICAgfTtcblxuICAgICAgICByZXR1cm4gbmV4dC5uZXh0ID0gbmV4dDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBSZXR1cm4gYW4gaXRlcmF0b3Igd2l0aCBubyB2YWx1ZXMuXG4gICAgcmV0dXJuIHsgbmV4dDogZG9uZVJlc3VsdCB9O1xuICB9XG4gIGV4cG9ydHMudmFsdWVzID0gdmFsdWVzO1xuXG4gIGZ1bmN0aW9uIGRvbmVSZXN1bHQoKSB7XG4gICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICB9XG5cbiAgQ29udGV4dC5wcm90b3R5cGUgPSB7XG4gICAgY29uc3RydWN0b3I6IENvbnRleHQsXG5cbiAgICByZXNldDogZnVuY3Rpb24oc2tpcFRlbXBSZXNldCkge1xuICAgICAgdGhpcy5wcmV2ID0gMDtcbiAgICAgIHRoaXMubmV4dCA9IDA7XG4gICAgICAvLyBSZXNldHRpbmcgY29udGV4dC5fc2VudCBmb3IgbGVnYWN5IHN1cHBvcnQgb2YgQmFiZWwnc1xuICAgICAgLy8gZnVuY3Rpb24uc2VudCBpbXBsZW1lbnRhdGlvbi5cbiAgICAgIHRoaXMuc2VudCA9IHRoaXMuX3NlbnQgPSB1bmRlZmluZWQ7XG4gICAgICB0aGlzLmRvbmUgPSBmYWxzZTtcbiAgICAgIHRoaXMuZGVsZWdhdGUgPSBudWxsO1xuXG4gICAgICB0aGlzLm1ldGhvZCA9IFwibmV4dFwiO1xuICAgICAgdGhpcy5hcmcgPSB1bmRlZmluZWQ7XG5cbiAgICAgIHRoaXMudHJ5RW50cmllcy5mb3JFYWNoKHJlc2V0VHJ5RW50cnkpO1xuXG4gICAgICBpZiAoIXNraXBUZW1wUmVzZXQpIHtcbiAgICAgICAgZm9yICh2YXIgbmFtZSBpbiB0aGlzKSB7XG4gICAgICAgICAgLy8gTm90IHN1cmUgYWJvdXQgdGhlIG9wdGltYWwgb3JkZXIgb2YgdGhlc2UgY29uZGl0aW9uczpcbiAgICAgICAgICBpZiAobmFtZS5jaGFyQXQoMCkgPT09IFwidFwiICYmXG4gICAgICAgICAgICAgIGhhc093bi5jYWxsKHRoaXMsIG5hbWUpICYmXG4gICAgICAgICAgICAgICFpc05hTigrbmFtZS5zbGljZSgxKSkpIHtcbiAgICAgICAgICAgIHRoaXNbbmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHN0b3A6IGZ1bmN0aW9uKCkge1xuICAgICAgdGhpcy5kb25lID0gdHJ1ZTtcblxuICAgICAgdmFyIHJvb3RFbnRyeSA9IHRoaXMudHJ5RW50cmllc1swXTtcbiAgICAgIHZhciByb290UmVjb3JkID0gcm9vdEVudHJ5LmNvbXBsZXRpb247XG4gICAgICBpZiAocm9vdFJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgdGhyb3cgcm9vdFJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiB0aGlzLnJ2YWw7XG4gICAgfSxcblxuICAgIGRpc3BhdGNoRXhjZXB0aW9uOiBmdW5jdGlvbihleGNlcHRpb24pIHtcbiAgICAgIGlmICh0aGlzLmRvbmUpIHtcbiAgICAgICAgdGhyb3cgZXhjZXB0aW9uO1xuICAgICAgfVxuXG4gICAgICB2YXIgY29udGV4dCA9IHRoaXM7XG4gICAgICBmdW5jdGlvbiBoYW5kbGUobG9jLCBjYXVnaHQpIHtcbiAgICAgICAgcmVjb3JkLnR5cGUgPSBcInRocm93XCI7XG4gICAgICAgIHJlY29yZC5hcmcgPSBleGNlcHRpb247XG4gICAgICAgIGNvbnRleHQubmV4dCA9IGxvYztcblxuICAgICAgICBpZiAoY2F1Z2h0KSB7XG4gICAgICAgICAgLy8gSWYgdGhlIGRpc3BhdGNoZWQgZXhjZXB0aW9uIHdhcyBjYXVnaHQgYnkgYSBjYXRjaCBibG9jayxcbiAgICAgICAgICAvLyB0aGVuIGxldCB0aGF0IGNhdGNoIGJsb2NrIGhhbmRsZSB0aGUgZXhjZXB0aW9uIG5vcm1hbGx5LlxuICAgICAgICAgIGNvbnRleHQubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgICAgY29udGV4dC5hcmcgPSB1bmRlZmluZWQ7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gISEgY2F1Z2h0O1xuICAgICAgfVxuXG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG5cbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gXCJyb290XCIpIHtcbiAgICAgICAgICAvLyBFeGNlcHRpb24gdGhyb3duIG91dHNpZGUgb2YgYW55IHRyeSBibG9jayB0aGF0IGNvdWxkIGhhbmRsZVxuICAgICAgICAgIC8vIGl0LCBzbyBzZXQgdGhlIGNvbXBsZXRpb24gdmFsdWUgb2YgdGhlIGVudGlyZSBmdW5jdGlvbiB0b1xuICAgICAgICAgIC8vIHRocm93IHRoZSBleGNlcHRpb24uXG4gICAgICAgICAgcmV0dXJuIGhhbmRsZShcImVuZFwiKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2KSB7XG4gICAgICAgICAgdmFyIGhhc0NhdGNoID0gaGFzT3duLmNhbGwoZW50cnksIFwiY2F0Y2hMb2NcIik7XG4gICAgICAgICAgdmFyIGhhc0ZpbmFsbHkgPSBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpO1xuXG4gICAgICAgICAgaWYgKGhhc0NhdGNoICYmIGhhc0ZpbmFsbHkpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLnByZXYgPCBlbnRyeS5jYXRjaExvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmNhdGNoTG9jLCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNDYXRjaCkge1xuICAgICAgICAgICAgaWYgKHRoaXMucHJldiA8IGVudHJ5LmNhdGNoTG9jKSB7XG4gICAgICAgICAgICAgIHJldHVybiBoYW5kbGUoZW50cnkuY2F0Y2hMb2MsIHRydWUpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIGlmIChoYXNGaW5hbGx5KSB7XG4gICAgICAgICAgICBpZiAodGhpcy5wcmV2IDwgZW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlKGVudHJ5LmZpbmFsbHlMb2MpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcInRyeSBzdGF0ZW1lbnQgd2l0aG91dCBjYXRjaCBvciBmaW5hbGx5XCIpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBhYnJ1cHQ6IGZ1bmN0aW9uKHR5cGUsIGFyZykge1xuICAgICAgZm9yICh2YXIgaSA9IHRoaXMudHJ5RW50cmllcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkge1xuICAgICAgICB2YXIgZW50cnkgPSB0aGlzLnRyeUVudHJpZXNbaV07XG4gICAgICAgIGlmIChlbnRyeS50cnlMb2MgPD0gdGhpcy5wcmV2ICYmXG4gICAgICAgICAgICBoYXNPd24uY2FsbChlbnRyeSwgXCJmaW5hbGx5TG9jXCIpICYmXG4gICAgICAgICAgICB0aGlzLnByZXYgPCBlbnRyeS5maW5hbGx5TG9jKSB7XG4gICAgICAgICAgdmFyIGZpbmFsbHlFbnRyeSA9IGVudHJ5O1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGlmIChmaW5hbGx5RW50cnkgJiZcbiAgICAgICAgICAodHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgIHR5cGUgPT09IFwiY29udGludWVcIikgJiZcbiAgICAgICAgICBmaW5hbGx5RW50cnkudHJ5TG9jIDw9IGFyZyAmJlxuICAgICAgICAgIGFyZyA8PSBmaW5hbGx5RW50cnkuZmluYWxseUxvYykge1xuICAgICAgICAvLyBJZ25vcmUgdGhlIGZpbmFsbHkgZW50cnkgaWYgY29udHJvbCBpcyBub3QganVtcGluZyB0byBhXG4gICAgICAgIC8vIGxvY2F0aW9uIG91dHNpZGUgdGhlIHRyeS9jYXRjaCBibG9jay5cbiAgICAgICAgZmluYWxseUVudHJ5ID0gbnVsbDtcbiAgICAgIH1cblxuICAgICAgdmFyIHJlY29yZCA9IGZpbmFsbHlFbnRyeSA/IGZpbmFsbHlFbnRyeS5jb21wbGV0aW9uIDoge307XG4gICAgICByZWNvcmQudHlwZSA9IHR5cGU7XG4gICAgICByZWNvcmQuYXJnID0gYXJnO1xuXG4gICAgICBpZiAoZmluYWxseUVudHJ5KSB7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJuZXh0XCI7XG4gICAgICAgIHRoaXMubmV4dCA9IGZpbmFsbHlFbnRyeS5maW5hbGx5TG9jO1xuICAgICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIHRoaXMuY29tcGxldGUocmVjb3JkKTtcbiAgICB9LFxuXG4gICAgY29tcGxldGU6IGZ1bmN0aW9uKHJlY29yZCwgYWZ0ZXJMb2MpIHtcbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJ0aHJvd1wiKSB7XG4gICAgICAgIHRocm93IHJlY29yZC5hcmc7XG4gICAgICB9XG5cbiAgICAgIGlmIChyZWNvcmQudHlwZSA9PT0gXCJicmVha1wiIHx8XG4gICAgICAgICAgcmVjb3JkLnR5cGUgPT09IFwiY29udGludWVcIikge1xuICAgICAgICB0aGlzLm5leHQgPSByZWNvcmQuYXJnO1xuICAgICAgfSBlbHNlIGlmIChyZWNvcmQudHlwZSA9PT0gXCJyZXR1cm5cIikge1xuICAgICAgICB0aGlzLnJ2YWwgPSB0aGlzLmFyZyA9IHJlY29yZC5hcmc7XG4gICAgICAgIHRoaXMubWV0aG9kID0gXCJyZXR1cm5cIjtcbiAgICAgICAgdGhpcy5uZXh0ID0gXCJlbmRcIjtcbiAgICAgIH0gZWxzZSBpZiAocmVjb3JkLnR5cGUgPT09IFwibm9ybWFsXCIgJiYgYWZ0ZXJMb2MpIHtcbiAgICAgICAgdGhpcy5uZXh0ID0gYWZ0ZXJMb2M7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgIH0sXG5cbiAgICBmaW5pc2g6IGZ1bmN0aW9uKGZpbmFsbHlMb2MpIHtcbiAgICAgIGZvciAodmFyIGkgPSB0aGlzLnRyeUVudHJpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyAtLWkpIHtcbiAgICAgICAgdmFyIGVudHJ5ID0gdGhpcy50cnlFbnRyaWVzW2ldO1xuICAgICAgICBpZiAoZW50cnkuZmluYWxseUxvYyA9PT0gZmluYWxseUxvYykge1xuICAgICAgICAgIHRoaXMuY29tcGxldGUoZW50cnkuY29tcGxldGlvbiwgZW50cnkuYWZ0ZXJMb2MpO1xuICAgICAgICAgIHJlc2V0VHJ5RW50cnkoZW50cnkpO1xuICAgICAgICAgIHJldHVybiBDb250aW51ZVNlbnRpbmVsO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIFwiY2F0Y2hcIjogZnVuY3Rpb24odHJ5TG9jKSB7XG4gICAgICBmb3IgKHZhciBpID0gdGhpcy50cnlFbnRyaWVzLmxlbmd0aCAtIDE7IGkgPj0gMDsgLS1pKSB7XG4gICAgICAgIHZhciBlbnRyeSA9IHRoaXMudHJ5RW50cmllc1tpXTtcbiAgICAgICAgaWYgKGVudHJ5LnRyeUxvYyA9PT0gdHJ5TG9jKSB7XG4gICAgICAgICAgdmFyIHJlY29yZCA9IGVudHJ5LmNvbXBsZXRpb247XG4gICAgICAgICAgaWYgKHJlY29yZC50eXBlID09PSBcInRocm93XCIpIHtcbiAgICAgICAgICAgIHZhciB0aHJvd24gPSByZWNvcmQuYXJnO1xuICAgICAgICAgICAgcmVzZXRUcnlFbnRyeShlbnRyeSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiB0aHJvd247XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgLy8gVGhlIGNvbnRleHQuY2F0Y2ggbWV0aG9kIG11c3Qgb25seSBiZSBjYWxsZWQgd2l0aCBhIGxvY2F0aW9uXG4gICAgICAvLyBhcmd1bWVudCB0aGF0IGNvcnJlc3BvbmRzIHRvIGEga25vd24gY2F0Y2ggYmxvY2suXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJpbGxlZ2FsIGNhdGNoIGF0dGVtcHRcIik7XG4gICAgfSxcblxuICAgIGRlbGVnYXRlWWllbGQ6IGZ1bmN0aW9uKGl0ZXJhYmxlLCByZXN1bHROYW1lLCBuZXh0TG9jKSB7XG4gICAgICB0aGlzLmRlbGVnYXRlID0ge1xuICAgICAgICBpdGVyYXRvcjogdmFsdWVzKGl0ZXJhYmxlKSxcbiAgICAgICAgcmVzdWx0TmFtZTogcmVzdWx0TmFtZSxcbiAgICAgICAgbmV4dExvYzogbmV4dExvY1xuICAgICAgfTtcblxuICAgICAgaWYgKHRoaXMubWV0aG9kID09PSBcIm5leHRcIikge1xuICAgICAgICAvLyBEZWxpYmVyYXRlbHkgZm9yZ2V0IHRoZSBsYXN0IHNlbnQgdmFsdWUgc28gdGhhdCB3ZSBkb24ndFxuICAgICAgICAvLyBhY2NpZGVudGFsbHkgcGFzcyBpdCBvbiB0byB0aGUgZGVsZWdhdGUuXG4gICAgICAgIHRoaXMuYXJnID0gdW5kZWZpbmVkO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gQ29udGludWVTZW50aW5lbDtcbiAgICB9XG4gIH07XG5cbiAgLy8gUmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoaXMgc2NyaXB0IGlzIGV4ZWN1dGluZyBhcyBhIENvbW1vbkpTIG1vZHVsZVxuICAvLyBvciBub3QsIHJldHVybiB0aGUgcnVudGltZSBvYmplY3Qgc28gdGhhdCB3ZSBjYW4gZGVjbGFyZSB0aGUgdmFyaWFibGVcbiAgLy8gcmVnZW5lcmF0b3JSdW50aW1lIGluIHRoZSBvdXRlciBzY29wZSwgd2hpY2ggYWxsb3dzIHRoaXMgbW9kdWxlIHRvIGJlXG4gIC8vIGluamVjdGVkIGVhc2lseSBieSBgYmluL3JlZ2VuZXJhdG9yIC0taW5jbHVkZS1ydW50aW1lIHNjcmlwdC5qc2AuXG4gIHJldHVybiBleHBvcnRzO1xuXG59KFxuICAvLyBJZiB0aGlzIHNjcmlwdCBpcyBleGVjdXRpbmcgYXMgYSBDb21tb25KUyBtb2R1bGUsIHVzZSBtb2R1bGUuZXhwb3J0c1xuICAvLyBhcyB0aGUgcmVnZW5lcmF0b3JSdW50aW1lIG5hbWVzcGFjZS4gT3RoZXJ3aXNlIGNyZWF0ZSBhIG5ldyBlbXB0eVxuICAvLyBvYmplY3QuIEVpdGhlciB3YXksIHRoZSByZXN1bHRpbmcgb2JqZWN0IHdpbGwgYmUgdXNlZCB0byBpbml0aWFsaXplXG4gIC8vIHRoZSByZWdlbmVyYXRvclJ1bnRpbWUgdmFyaWFibGUgYXQgdGhlIHRvcCBvZiB0aGlzIGZpbGUuXG4gIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgPyBtb2R1bGUuZXhwb3J0cyA6IHt9XG4pKTtcblxudHJ5IHtcbiAgcmVnZW5lcmF0b3JSdW50aW1lID0gcnVudGltZTtcbn0gY2F0Y2ggKGFjY2lkZW50YWxTdHJpY3RNb2RlKSB7XG4gIC8vIFRoaXMgbW9kdWxlIHNob3VsZCBub3QgYmUgcnVubmluZyBpbiBzdHJpY3QgbW9kZSwgc28gdGhlIGFib3ZlXG4gIC8vIGFzc2lnbm1lbnQgc2hvdWxkIGFsd2F5cyB3b3JrIHVubGVzcyBzb21ldGhpbmcgaXMgbWlzY29uZmlndXJlZC4gSnVzdFxuICAvLyBpbiBjYXNlIHJ1bnRpbWUuanMgYWNjaWRlbnRhbGx5IHJ1bnMgaW4gc3RyaWN0IG1vZGUsIHdlIGNhbiBlc2NhcGVcbiAgLy8gc3RyaWN0IG1vZGUgdXNpbmcgYSBnbG9iYWwgRnVuY3Rpb24gY2FsbC4gVGhpcyBjb3VsZCBjb25jZWl2YWJseSBmYWlsXG4gIC8vIGlmIGEgQ29udGVudCBTZWN1cml0eSBQb2xpY3kgZm9yYmlkcyB1c2luZyBGdW5jdGlvbiwgYnV0IGluIHRoYXQgY2FzZVxuICAvLyB0aGUgcHJvcGVyIHNvbHV0aW9uIGlzIHRvIGZpeCB0aGUgYWNjaWRlbnRhbCBzdHJpY3QgbW9kZSBwcm9ibGVtLiBJZlxuICAvLyB5b3UndmUgbWlzY29uZmlndXJlZCB5b3VyIGJ1bmRsZXIgdG8gZm9yY2Ugc3RyaWN0IG1vZGUgYW5kIGFwcGxpZWQgYVxuICAvLyBDU1AgdG8gZm9yYmlkIEZ1bmN0aW9uLCBhbmQgeW91J3JlIG5vdCB3aWxsaW5nIHRvIGZpeCBlaXRoZXIgb2YgdGhvc2VcbiAgLy8gcHJvYmxlbXMsIHBsZWFzZSBkZXRhaWwgeW91ciB1bmlxdWUgcHJlZGljYW1lbnQgaW4gYSBHaXRIdWIgaXNzdWUuXG4gIEZ1bmN0aW9uKFwiclwiLCBcInJlZ2VuZXJhdG9yUnVudGltZSA9IHJcIikocnVudGltZSk7XG59XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIi8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uciA9IChleHBvcnRzKSA9PiB7XG5cdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuXHR9XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG59OyIsIi8vIHN0YXJ0dXBcbi8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXyhcIi4uL25vZGVfbW9kdWxlcy9AYmFiZWwvcG9seWZpbGwvbGliL2luZGV4LmpzXCIpO1xuLy8gVGhpcyBlbnRyeSBtb2R1bGUgaXMgcmVmZXJlbmNlZCBieSBvdGhlciBtb2R1bGVzIHNvIGl0IGNhbid0IGJlIGlubGluZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXyhcIi4vanMvaW5kZXguanNcIik7XG4iXSwic291cmNlUm9vdCI6IiJ9